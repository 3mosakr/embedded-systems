

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 16 23:53:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 23/03/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4620 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataCOMRAM
   108   002D4E                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _tris_registers
   112   002D4E  92                 	db	146
   113   002D4F  0F                 	db	15
   114   002D50  93                 	db	147
   115   002D51  0F                 	db	15
   116   002D52  94                 	db	148
   117   002D53  0F                 	db	15
   118   002D54  95                 	db	149
   119   002D55  0F                 	db	15
   120   002D56  96                 	db	150
   121   002D57  0F                 	db	15
   122                           
   123                           ;initializer for _RB7_Flag
   124   002D58  01                 	db	1
   125                           
   126                           ;initializer for _RB6_Flag
   127   002D59  01                 	db	1
   128                           
   129                           ;initializer for _RB5_Flag
   130   002D5A  01                 	db	1
   131                           
   132                           ;initializer for _RB4_Flag
   133   002D5B  01                 	db	1
   134                           
   135                           ;initializer for _motor2
   136   002D5C  13                 	db	19
   137   002D5D  1B                 	db	27
   138                           
   139                           ;initializer for _motor1
   140   002D5E  03                 	db	3
   141   002D5F  0B                 	db	11
   142                           
   143                           	psect	idataBANK0
   144   002CA8                     __pidataBANK0:
   145                           	callstack 0
   146                           
   147                           ;initializer for _port_registers
   148   002CA8  80                 	db	128
   149   002CA9  0F                 	db	15
   150   002CAA  81                 	db	129
   151   002CAB  0F                 	db	15
   152   002CAC  82                 	db	130
   153   002CAD  0F                 	db	15
   154   002CAE  83                 	db	131
   155   002CAF  0F                 	db	15
   156   002CB0  84                 	db	132
   157   002CB1  0F                 	db	15
   158                           
   159                           ;initializer for _lat_registers
   160   002CB2  89                 	db	137
   161   002CB3  0F                 	db	15
   162   002CB4  8A                 	db	138
   163   002CB5  0F                 	db	15
   164   002CB6  8B                 	db	139
   165   002CB7  0F                 	db	15
   166   002CB8  8C                 	db	140
   167   002CB9  0F                 	db	15
   168   002CBA  8D                 	db	141
   169   002CBB  0F                 	db	15
   170                           
   171                           ;initializer for _adc_1
   172   002CBC  BC                 	db	low _ADC_DefaultInterruptHandler
   173   002CBD  29                 	db	high _ADC_DefaultInterruptHandler
   174   002CBE  00                 	db	0
   175   002CBF  05                 	db	5
   176   002CC0  05                 	db	5
   177   002CC1  00                 	db	0
   178   002CC2  02                 	db	2
   179                           
   180                           ;initializer for _lcd1
   181   002CC3  02                 	db	2
   182   002CC4  0A                 	db	10
   183   002CC5  12                 	db	18
   184   002CC6  1A                 	db	26
   185   002CC7  22                 	db	34
   186   002CC8  2A                 	db	42
   187                           
   188                           	psect	smallconst
   189   001000                     __psmallconst:
   190                           	callstack 0
   191   001000  00                 	db	0
   192   001001                     _btn_value:
   193                           	callstack 0
   194   001001  37                 	db	55
   195   001002  38                 	db	56
   196   001003  39                 	db	57
   197   001004  2F                 	db	47
   198   001005  34                 	db	52
   199   001006  35                 	db	53
   200   001007  36                 	db	54
   201   001008  2A                 	db	42
   202   001009  31                 	db	49
   203   00100A  32                 	db	50
   204   00100B  33                 	db	51
   205   00100C  2D                 	db	45
   206   00100D  23                 	db	35
   207   00100E  30                 	db	48
   208   00100F  3D                 	db	61
   209   001010  2B                 	db	43
   210   001011                     __end_of_btn_value:
   211                           	callstack 0
   212   000000                     _INTCON2bits	set	4081
   213   000000                     _EECON2	set	4007
   214   000000                     _ADCON1bits	set	4033
   215   000000                     _ADRESL	set	4035
   216   000000                     _ADRESH	set	4036
   217   000000                     _INTCONbits	set	4082
   218   000000                     _TRISD	set	3989
   219   000000                     _TRISC	set	3988
   220   000000                     _TRISB	set	3987
   221   000000                     _TRISE	set	3990
   222   001011                     STR_4:
   223   001011  41                 	db	65	;'A'
   224   001012  44                 	db	68	;'D'
   225   001013  43                 	db	67	;'C'
   226   001014  2C                 	db	44
   227   001015  20                 	db	32
   228   001016  4C                 	db	76	;'L'
   229   001017  43                 	db	67	;'C'
   230   001018  44                 	db	68	;'D'
   231   001019  2C                 	db	44
   232   00101A  20                 	db	32
   233   00101B  4C                 	db	76	;'L'
   234   00101C  4D                 	db	77	;'M'
   235   00101D  33                 	db	51	;'3'
   236   00101E  35                 	db	53	;'5'
   237   00101F  20                 	db	32
   238   001020  54                 	db	84	;'T'
   239   001021  65                 	db	101	;'e'
   240   001022  73                 	db	115	;'s'
   241   001023  74                 	db	116	;'t'
   242   001024  00                 	db	0
   243   001025                     STR_5:
   244   001025  54                 	db	84	;'T'
   245   001026  65                 	db	101	;'e'
   246   001027  6D                 	db	109	;'m'
   247   001028  70                 	db	112	;'p'
   248   001029  31                 	db	49	;'1'
   249   00102A  3A                 	db	58	;':'
   250   00102B  20                 	db	32
   251   00102C  00                 	db	0
   252   00102D                     STR_6:
   253   00102D  54                 	db	84	;'T'
   254   00102E  65                 	db	101	;'e'
   255   00102F  6D                 	db	109	;'m'
   256   001030  70                 	db	112	;'p'
   257   001031  32                 	db	50	;'2'
   258   001032  3A                 	db	58	;':'
   259   001033  20                 	db	32
   260   001034  00                 	db	0
   261   001035                     STR_1:
   262   001035  25                 	db	37
   263   001036  69                 	db	105	;'i'
   264   001037  00                 	db	0
   265   001038  00                 	db	0	; dummy byte at the end
   266   000000                     
   267                           	psect	nvBANK0
   268   0000ED                     __pnvBANK0:
   269                           	callstack 0
   270   0000ED                     _ret:
   271                           	callstack 0
   272   0000ED                     	ds	1
   273   000000                     _PORTBbits	set	3969
   274   000000                     _PIE1bits	set	3997
   275   000000                     _ADCON2bits	set	4032
   276   000000                     _ADCON0bits	set	4034
   277   000000                     _PORTE	set	3972
   278   000000                     _PORTD	set	3971
   279   000000                     _PORTC	set	3970
   280   000000                     _PORTB	set	3969
   281   000000                     _PORTA	set	3968
   282   000000                     _LATA	set	3977
   283   000000                     _TRISA	set	3986
   284   000000                     _EECON1bits	set	4006
   285   000000                     _EEDATA	set	4008
   286   000000                     _EEADR	set	4009
   287   000000                     _EEADRH	set	4010
   288   000000                     _PIR1bits	set	3998
   289   000000                     _INTCON3bits	set	4080
   290   000000                     _LATE	set	3981
   291   000000                     _LATD	set	3980
   292   000000                     _LATC	set	3979
   293   000000                     _LATB	set	3978
   294                           
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298   002840                     __pcinit:
   299                           	callstack 0
   300   002840                     start_initialization:
   301                           	callstack 0
   302   002840                     __initialization:
   303                           	callstack 0
   304                           
   305                           ; Initialize objects allocated to BANK0 (33 bytes)
   306                           ; load TBLPTR registers with __pidataBANK0
   307   002840  0EA8               	movlw	low __pidataBANK0
   308   002842  6EF6               	movwf	tblptrl,c
   309   002844  0E2C               	movlw	high __pidataBANK0
   310   002846  6EF7               	movwf	tblptrh,c
   311   002848  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   312   00284A  6EF8               	movwf	tblptru,c
   313   00284C  EE00  F0C1         	lfsr	0,__pdataBANK0
   314   002850  EE10 F021          	lfsr	1,33
   315   002854                     copy_data0:
   316   002854  0009               	tblrd		*+
   317   002856  CFF5 FFEE          	movff	tablat,postinc0
   318   00285A  50E5               	movf	postdec1,w,c
   319   00285C  50E1               	movf	fsr1l,w,c
   320   00285E  E1FA               	bnz	copy_data0
   321                           
   322                           ; Initialize objects allocated to COMRAM (18 bytes)
   323                           ; load TBLPTR registers with __pidataCOMRAM
   324   002860  0E4E               	movlw	low __pidataCOMRAM
   325   002862  6EF6               	movwf	tblptrl,c
   326   002864  0E2D               	movlw	high __pidataCOMRAM
   327   002866  6EF7               	movwf	tblptrh,c
   328   002868  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   329   00286A  6EF8               	movwf	tblptru,c
   330   00286C  EE00  F063         	lfsr	0,__pdataCOMRAM
   331   002870  EE10 F012          	lfsr	1,18
   332   002874                     copy_data1:
   333   002874  0009               	tblrd		*+
   334   002876  CFF5 FFEE          	movff	tablat,postinc0
   335   00287A  50E5               	movf	postdec1,w,c
   336   00287C  50E1               	movf	fsr1l,w,c
   337   00287E  E1FA               	bnz	copy_data1
   338                           
   339                           ; Clear objects allocated to BANK0 (65 bytes)
   340   002880  EE00  F080         	lfsr	0,__pbssBANK0
   341   002884  0E41               	movlw	65
   342   002886                     clear_0:
   343   002886  6AEE               	clrf	postinc0,c
   344   002888  06E8               	decf	wreg,f,c
   345   00288A  E1FD               	bnz	clear_0
   346                           
   347                           ; Clear objects allocated to COMRAM (45 bytes)
   348   00288C  EE00  F036         	lfsr	0,__pbssCOMRAM
   349   002890  0E2D               	movlw	45
   350   002892                     clear_1:
   351   002892  6AEE               	clrf	postinc0,c
   352   002894  06E8               	decf	wreg,f,c
   353   002896  E1FD               	bnz	clear_1
   354   002898                     end_of_initialization:
   355                           	callstack 0
   356   002898                     __end_of__initialization:
   357                           	callstack 0
   358   002898  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   359   00289A  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   360   00289C  0100               	movlb	0
   361   00289E  EF95  F00B         	goto	_main	;jump to C main() function
   362                           
   363                           	psect	bssCOMRAM
   364   000036                     __pbssCOMRAM:
   365                           	callstack 0
   366   000036                     _width:
   367                           	callstack 0
   368   000036                     	ds	2
   369   000038                     _prec:
   370                           	callstack 0
   371   000038                     	ds	2
   372   00003A                     _LM35_res_2_Celsius_mv:
   373                           	callstack 0
   374   00003A                     	ds	2
   375   00003C                     _LM35_res_1_Celsius_mv:
   376                           	callstack 0
   377   00003C                     	ds	2
   378   00003E                     _RB7_InterruptHandler_LOW:
   379                           	callstack 0
   380   00003E                     	ds	2
   381   000040                     _RB7_InterruptHandler_HIGH:
   382                           	callstack 0
   383   000040                     	ds	2
   384   000042                     _RB6_InterruptHandler_LOW:
   385                           	callstack 0
   386   000042                     	ds	2
   387   000044                     _RB6_InterruptHandler_HIGH:
   388                           	callstack 0
   389   000044                     	ds	2
   390   000046                     _RB5_InterruptHandler_LOW:
   391                           	callstack 0
   392   000046                     	ds	2
   393   000048                     _RB5_InterruptHandler_HIGH:
   394                           	callstack 0
   395   000048                     	ds	2
   396   00004A                     _RB4_InterruptHandler_LOW:
   397                           	callstack 0
   398   00004A                     	ds	2
   399   00004C                     _RB4_InterruptHandler_HIGH:
   400                           	callstack 0
   401   00004C                     	ds	2
   402   00004E                     _INT2_InterruptHandler:
   403                           	callstack 0
   404   00004E                     	ds	2
   405   000050                     _INT1_InterruptHandler:
   406                           	callstack 0
   407   000050                     	ds	2
   408   000052                     _INT0_InterruptHandler:
   409                           	callstack 0
   410   000052                     	ds	2
   411   000054                     _ADC_InterruptHandler:
   412                           	callstack 0
   413   000054                     	ds	2
   414   000056                     _flags:
   415                           	callstack 0
   416   000056                     	ds	1
   417   000057                     _ADC_Req:
   418                           	callstack 0
   419   000057                     	ds	1
   420   000058                     relay_turn_off@F3062:
   421                           	callstack 0
   422   000058                     	ds	1
   423   000059                     relay_turn_on@F3057:
   424                           	callstack 0
   425   000059                     	ds	1
   426   00005A                     relay_initialize@F3052:
   427                           	callstack 0
   428   00005A                     	ds	1
   429   00005B                     led_turn_toggle@F3073:
   430                           	callstack 0
   431   00005B                     	ds	1
   432   00005C                     led_turn_off@F3068:
   433                           	callstack 0
   434   00005C                     	ds	1
   435   00005D                     led_turn_on@F3063:
   436                           	callstack 0
   437   00005D                     	ds	1
   438   00005E                     led_initialize@F3058:
   439                           	callstack 0
   440   00005E                     	ds	1
   441   00005F                     _LM35_res_2:
   442                           	callstack 0
   443   00005F                     	ds	2
   444   000061                     _LM35_res_1:
   445                           	callstack 0
   446   000061                     	ds	2
   447                           
   448                           	psect	dataCOMRAM
   449   000063                     __pdataCOMRAM:
   450                           	callstack 0
   451   000063                     _tris_registers:
   452                           	callstack 0
   453   000063                     	ds	10
   454   00006D                     _RB7_Flag:
   455                           	callstack 0
   456   00006D                     	ds	1
   457   00006E                     _RB6_Flag:
   458                           	callstack 0
   459   00006E                     	ds	1
   460   00006F                     _RB5_Flag:
   461                           	callstack 0
   462   00006F                     	ds	1
   463   000070                     _RB4_Flag:
   464                           	callstack 0
   465   000070                     	ds	1
   466   000071                     _motor2:
   467                           	callstack 0
   468   000071                     	ds	2
   469   000073                     _motor1:
   470                           	callstack 0
   471   000073                     	ds	2
   472                           
   473                           	psect	bssBANK0
   474   000080                     __pbssBANK0:
   475                           	callstack 0
   476   000080                     _dbuf:
   477                           	callstack 0
   478   000080                     	ds	32
   479   0000A0                     	ds	11
   480   0000AB                     	ds	6
   481   0000B1                     	ds	4
   482   0000B5                     _LM35_res_2_txt:
   483                           	callstack 0
   484   0000B5                     	ds	6
   485   0000BB                     _LM35_res_1_txt:
   486                           	callstack 0
   487   0000BB                     	ds	6
   488                           
   489                           	psect	dataBANK0
   490   0000C1                     __pdataBANK0:
   491                           	callstack 0
   492   0000C1                     _port_registers:
   493                           	callstack 0
   494   0000C1                     	ds	10
   495   0000CB                     _lat_registers:
   496                           	callstack 0
   497   0000CB                     	ds	10
   498   0000D5                     _adc_1:
   499                           	callstack 0
   500   0000D5                     	ds	7
   501   0000DC                     _lcd1:
   502                           	callstack 0
   503   0000DC                     	ds	6
   504                           
   505                           	psect	cstackBANK0
   506   0000E2                     __pcstackBANK0:
   507                           	callstack 0
   508   0000E2                     ??___fltol:
   509   0000E2                     convert_uint16_to_string@value:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x0
   513   0000E2                     	ds	2
   514   0000E4                     convert_uint16_to_string@str:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x2
   518   0000E4                     	ds	1
   519   0000E5                     convert_uint16_to_string@TempString:
   520                           	callstack 0
   521                           
   522                           ; 6 bytes @ 0x3
   523   0000E5                     	ds	1
   524   0000E6                     ___fltol@sign1:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x4
   528   0000E6                     	ds	1
   529   0000E7                     ___fltol@exp1:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x5
   533   0000E7                     	ds	4
   534   0000EB                     convert_uint16_to_string@ret:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x9
   538   0000EB                     	ds	1
   539   0000EC                     convert_uint16_to_string@DataCounter:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0xA
   543   0000EC                     	ds	1
   544                           
   545                           	psect	cstackCOMRAM
   546   000001                     __pcstackCOMRAM:
   547                           	callstack 0
   548   000001                     ADC_GetConversionResult@_adc:
   549                           	callstack 0
   550   000001                     RB4_ISR@RB4_source:
   551                           	callstack 0
   552   000001                     RB5_ISR@RB5_source:
   553                           	callstack 0
   554   000001                     RB6_ISR@RB6_source:
   555                           	callstack 0
   556   000001                     RB7_ISR@RB7_source:
   557                           	callstack 0
   558   000001                     
   559                           ; 1 bytes @ 0x0
   560   000001                     	ds	1
   561   000002                     ADC_GetConversionResult@conversion_result:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x1
   565   000002                     	ds	1
   566   000003                     ??_ADC_GetConversionResult:
   567                           
   568                           ; 1 bytes @ 0x2
   569   000003                     	ds	3
   570   000006                     ADC_GetConversionResult@ret:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x5
   574   000006                     	ds	1
   575   000007                     ??_InterruptManger:
   576                           
   577                           ; 1 bytes @ 0x6
   578   000007                     	ds	4
   579   00000B                     ??_adc_input_channel_port_configure:
   580   00000B                     ?___awdiv:
   581                           	callstack 0
   582   00000B                     ?___awmod:
   583                           	callstack 0
   584   00000B                     ?___lwdiv:
   585                           	callstack 0
   586   00000B                     ?___xxtofl:
   587                           	callstack 0
   588   00000B                     ADC_StartConversion@_adc:
   589                           	callstack 0
   590   00000B                     select_result_format@_adc:
   591                           	callstack 0
   592   00000B                     configure_voltage_reference@_adc:
   593                           	callstack 0
   594   00000B                     gpio_pin_direction_initialize@_pin_config:
   595                           	callstack 0
   596   00000B                     gpio_pin_write_logic@_pin_config:
   597                           	callstack 0
   598   00000B                     memset@dest:
   599                           	callstack 0
   600   00000B                     ___awdiv@dividend:
   601                           	callstack 0
   602   00000B                     ___awmod@dividend:
   603                           	callstack 0
   604   00000B                     ___lwdiv@dividend:
   605                           	callstack 0
   606   00000B                     fputc@c:
   607                           	callstack 0
   608   00000B                     ___xxtofl@val:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0xA
   612   00000B                     	ds	1
   613   00000C                     ??_gpio_pin_direction_initialize:
   614   00000C                     ADC_StartConversion@ret:
   615                           	callstack 0
   616   00000C                     gpio_pin_write_logic@logic:
   617                           	callstack 0
   618   00000C                     memset@c:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0xB
   622   00000C                     	ds	1
   623   00000D                     ??_gpio_pin_write_logic:
   624   00000D                     adc_input_channel_port_configure@channel:
   625                           	callstack 0
   626   00000D                     fputc@fp:
   627                           	callstack 0
   628   00000D                     ___awdiv@divisor:
   629                           	callstack 0
   630   00000D                     ___awmod@divisor:
   631                           	callstack 0
   632   00000D                     ___lwdiv@divisor:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0xC
   636   00000D                     	ds	1
   637   00000E                     ??_fputc:
   638   00000E                     ADC_Init@_adc:
   639                           	callstack 0
   640   00000E                     ADC_SelectChannel@_adc:
   641                           	callstack 0
   642   00000E                     memset@n:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xD
   646   00000E                     	ds	1
   647   00000F                     ??_ADC_Init:
   648   00000F                     ??___xxtofl:
   649   00000F                     ADC_SelectChannel@channel:
   650                           	callstack 0
   651   00000F                     ___awdiv@counter:
   652                           	callstack 0
   653   00000F                     ___awmod@counter:
   654                           	callstack 0
   655   00000F                     ___lwdiv@quotient:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xE
   659   00000F                     	ds	1
   660   000010                     ??_ADC_SelectChannel:
   661   000010                     ___awdiv@sign:
   662                           	callstack 0
   663   000010                     ___awmod@sign:
   664                           	callstack 0
   665   000010                     memset@p:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0xF
   669   000010                     	ds	1
   670   000011                     ?_abs:
   671                           	callstack 0
   672   000011                     ADC_SelectChannel@ret:
   673                           	callstack 0
   674   000011                     gpio_pin_direction_initialize@ret:
   675                           	callstack 0
   676   000011                     ___lwdiv@counter:
   677                           	callstack 0
   678   000011                     ___awdiv@quotient:
   679                           	callstack 0
   680   000011                     abs@a:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x10
   684   000011                     	ds	1
   685   000012                     ADC_StartConversion_Interrupt@_adc:
   686                           	callstack 0
   687   000012                     gpio_pin_write_logic@ret:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x11
   691   000012                     	ds	1
   692   000013                     ??_abs:
   693   000013                     lcd_send_4bits@lcd:
   694                           	callstack 0
   695   000013                     lcd_send_enable_signal@lcd:
   696                           	callstack 0
   697   000013                     dc_motor_move_right@_dc_motor:
   698                           	callstack 0
   699   000013                     dc_motor_stop@_dc_motor:
   700                           	callstack 0
   701   000013                     ADC_StartConversion_Interrupt@channel:
   702                           	callstack 0
   703   000013                     gpio_pin_initialize@_pin_config:
   704                           	callstack 0
   705   000013                     ___xxtofl@sign:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x12
   709   000013                     	ds	1
   710   000014                     ??_gpio_pin_initialize:
   711   000014                     lcd_send_4bits@data_command:
   712                           	callstack 0
   713   000014                     lcd_send_enable_signal@ret:
   714                           	callstack 0
   715   000014                     dc_motor_move_right@ret:
   716                           	callstack 0
   717   000014                     dc_motor_stop@ret:
   718                           	callstack 0
   719   000014                     ADC_StartConversion_Interrupt@ret:
   720                           	callstack 0
   721   000014                     ___xxtofl@exp:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x13
   725   000014                     	ds	1
   726   000015                     ??_lcd_send_4bits:
   727   000015                     gpio_pin_initialize@ret:
   728                           	callstack 0
   729   000015                     vfpfcnvrt@fp:
   730                           	callstack 0
   731   000015                     ___xxtofl@arg:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x14
   735   000015                     	ds	1
   736   000016                     dc_motor_intialize@_dc_motor:
   737                           	callstack 0
   738   000016                     vfpfcnvrt@fmt:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x15
   742   000016                     	ds	1
   743   000017                     lcd_send_4bits@ret:
   744                           	callstack 0
   745   000017                     dc_motor_intialize@ret:
   746                           	callstack 0
   747   000017                     vfpfcnvrt@ap:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x16
   751   000017                     	ds	1
   752   000018                     ??_vfpfcnvrt:
   753   000018                     lcd_send_4bits@l_pin_counter:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x17
   757   000018                     	ds	1
   758   000019                     ?___flmul:
   759                           	callstack 0
   760   000019                     lcd_4bit_send_command@lcd:
   761                           	callstack 0
   762   000019                     lcd_4bit_send_char_data@lcd:
   763                           	callstack 0
   764   000019                     vfpfcnvrt@done:
   765                           	callstack 0
   766   000019                     ___flmul@b:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x18
   770   000019                     	ds	1
   771   00001A                     lcd_4bit_send_command@command:
   772                           	callstack 0
   773   00001A                     lcd_4bit_send_char_data@data:
   774                           	callstack 0
   775   00001A                     vfpfcnvrt@cp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x19
   779   00001A                     	ds	1
   780   00001B                     lcd_4bit_send_command@ret:
   781                           	callstack 0
   782   00001B                     lcd_4bit_send_char_data@ret:
   783                           	callstack 0
   784   00001B                     vfpfcnvrt@convarg:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x1A
   788   00001B                     	ds	1
   789   00001C                     lcd_4bit_intialize@lcd:
   790                           	callstack 0
   791   00001C                     lcd_4bit_set_cursor@lcd:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x1B
   795   00001C                     	ds	1
   796   00001D                     ??_lcd_4bit_intialize:
   797   00001D                     lcd_4bit_set_cursor@row:
   798                           	callstack 0
   799   00001D                     ___flmul@a:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x1C
   803   00001D                     	ds	1
   804   00001E                     lcd_4bit_intialize@l_pin_counter:
   805                           	callstack 0
   806   00001E                     lcd_4bit_set_cursor@column:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x1D
   810   00001E                     	ds	1
   811   00001F                     ??_lcd_4bit_set_cursor:
   812   00001F                     vfpfcnvrt@c:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x1E
   816   00001F                     	ds	1
   817   000020                     ?_vfprintf:
   818                           	callstack 0
   819   000020                     vfprintf@fp:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x1F
   823   000020                     	ds	1
   824   000021                     ??___flmul:
   825   000021                     lcd_4bit_set_cursor@ret:
   826                           	callstack 0
   827   000021                     vfprintf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x20
   831   000021                     	ds	1
   832   000022                     lcd_4bit_send_string_pos@lcd:
   833                           	callstack 0
   834   000022                     vfprintf@ap:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x21
   838   000022                     	ds	1
   839   000023                     lcd_4bit_send_string_pos@row:
   840                           	callstack 0
   841   000023                     vfprintf@cfmt:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x22
   845   000023                     	ds	1
   846   000024                     ?_sprintf:
   847                           	callstack 0
   848   000024                     lcd_4bit_send_string_pos@column:
   849                           	callstack 0
   850   000024                     sprintf@s:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x23
   854   000024                     	ds	1
   855   000025                     ___flmul@sign:
   856                           	callstack 0
   857   000025                     sprintf@fmt:
   858                           	callstack 0
   859   000025                     lcd_4bit_send_string_pos@str:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x24
   863   000025                     	ds	1
   864   000026                     ___flmul@grs:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x25
   868   000026                     	ds	1
   869   000027                     lcd_4bit_send_string_pos@ret:
   870                           	callstack 0
   871                           
   872                           ; 1 bytes @ 0x26
   873   000027                     	ds	1
   874   000028                     lcd_init_message@lcd:
   875                           	callstack 0
   876   000028                     sprintf@ap:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x27
   880   000028                     	ds	1
   881   000029                     ??_lcd_init_message:
   882   000029                     sprintf@f:
   883                           	callstack 0
   884                           
   885                           ; 12 bytes @ 0x28
   886   000029                     	ds	1
   887   00002A                     ___flmul@aexp:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x29
   891   00002A                     	ds	1
   892   00002B                     ___flmul@bexp:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x2A
   896   00002B                     	ds	1
   897   00002C                     ___flmul@prod:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x2B
   901   00002C                     	ds	4
   902   000030                     ___flmul@temp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x2F
   906   000030                     	ds	2
   907   000032                     ?___fltol:
   908                           	callstack 0
   909   000032                     ___fltol@f1:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x31
   913   000032                     	ds	3
   914   000035                     
   915                           ; 1 bytes @ 0x34
   916   000035                     	ds	1
   917   000036                     
   918                           ; 1 bytes @ 0x35
   919 ;;
   920 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   921 ;;
   922 ;; *************** function _main *****************
   923 ;; Defined at:
   924 ;;		line 92 in file "application.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  2  967[None  ] int 
   931 ;; Registers used:
   932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels required when called: 10
   944 ;; This function calls:
   945 ;;		_ADC_StartConversion_Interrupt
   946 ;;		___flmul
   947 ;;		___fltol
   948 ;;		___lwdiv
   949 ;;		___xxtofl
   950 ;;		_application_initialize
   951 ;;		_convert_uint16_to_string
   952 ;;		_dc_motor_move_right
   953 ;;		_dc_motor_stop
   954 ;;		_lcd_4bit_send_string_pos
   955 ;;		_lcd_init_message
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text0
   962   00172A                     __ptext0:
   963                           	callstack 0
   964   00172A                     _main:
   965                           	callstack 21
   966   00172A                     
   967                           ;application.c: 94:     application_initialize();
   968   00172A  ECF4  F015         	call	_application_initialize	;wreg free
   969   00172E                     
   970                           ;application.c: 95:     lcd_init_message(&lcd1);
   971   00172E  0EDC               	movlw	low _lcd1
   972   001730  6E28               	movwf	lcd_init_message@lcd^0,c
   973   001732  ECEA  F013         	call	_lcd_init_message	;wreg free
   974   001736                     l5786:
   975                           
   976                           ;application.c: 98:         if (0 == ADC_Req) {
   977   001736  5057               	movf	_ADC_Req^0,w,c
   978   001738  A4D8               	btfss	status,2,c
   979   00173A  EFA1  F00B         	goto	u5571
   980   00173E  EFA3  F00B         	goto	u5570
   981   001742                     u5571:
   982   001742  EFAD  F00B         	goto	l5790
   983   001746                     u5570:
   984   001746                     
   985                           ;application.c: 99:             ret = ADC_StartConversion_Interrupt(&adc_1, ADC_CHANNEL_
      +                          AN0);
   986   001746  0ED5               	movlw	low _adc_1
   987   001748  6E12               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
   988   00174A  0E00               	movlw	0
   989   00174C  6E13               	movwf	ADC_StartConversion_Interrupt@channel^0,c
   990   00174E  EC90  F015         	call	_ADC_StartConversion_Interrupt	;wreg free
   991   001752  0100               	movlb	0	; () banked
   992   001754  6FED               	movwf	_ret& (0+255),b
   993                           
   994                           ;application.c: 100:         } else if (1 == ADC_Req) {
   995   001756  EFBD  F00B         	goto	l5794
   996   00175A                     l5790:
   997   00175A  0457               	decf	_ADC_Req^0,w,c
   998   00175C  A4D8               	btfss	status,2,c
   999   00175E  EFB3  F00B         	goto	u5581
  1000   001762  EFB5  F00B         	goto	u5580
  1001   001766                     u5581:
  1002   001766  EFBD  F00B         	goto	l5794
  1003   00176A                     u5580:
  1004   00176A                     
  1005                           ;application.c: 101:             ret = ADC_StartConversion_Interrupt(&adc_1, ADC_CHANNEL
      +                          _AN1);
  1006   00176A  0ED5               	movlw	low _adc_1
  1007   00176C  6E12               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1008   00176E  0E01               	movlw	1
  1009   001770  6E13               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1010   001772  EC90  F015         	call	_ADC_StartConversion_Interrupt	;wreg free
  1011   001776  0100               	movlb	0	; () banked
  1012   001778  6FED               	movwf	_ret& (0+255),b
  1013   00177A                     l5794:
  1014                           
  1015                           ;application.c: 106:         LM35_res_1_Celsius_mv = LM35_res_1 * 4.8875f;
  1016   00177A  0E66               	movlw	102
  1017   00177C  6E1D               	movwf	___flmul@a^0,c
  1018   00177E  0E66               	movlw	102
  1019   001780  6E1E               	movwf	(___flmul@a+1)^0,c
  1020   001782  0E9C               	movlw	156
  1021   001784  6E1F               	movwf	(___flmul@a+2)^0,c
  1022   001786  0E40               	movlw	64
  1023   001788  6E20               	movwf	(___flmul@a+3)^0,c
  1024   00178A  C061  F00B         	movff	_LM35_res_1,___xxtofl@val
  1025   00178E  C062  F00C         	movff	_LM35_res_1+1,___xxtofl@val+1
  1026   001792  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1027   001794  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1028   001796  0E00               	movlw	0
  1029   001798  EC68  F00D         	call	___xxtofl
  1030   00179C  C00B  F019         	movff	?___xxtofl,___flmul@b
  1031   0017A0  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  1032   0017A4  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  1033   0017A8  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  1034   0017AC  EC1D  F008         	call	___flmul	;wreg free
  1035   0017B0  C019  F032         	movff	?___flmul,___fltol@f1
  1036   0017B4  C01A  F033         	movff	?___flmul+1,___fltol@f1+1
  1037   0017B8  C01B  F034         	movff	?___flmul+2,___fltol@f1+2
  1038   0017BC  C01C  F035         	movff	?___flmul+3,___fltol@f1+3
  1039   0017C0  EC79  F00F         	call	___fltol	;wreg free
  1040   0017C4  C032  F03C         	movff	?___fltol,_LM35_res_1_Celsius_mv
  1041   0017C8  C033  F03D         	movff	?___fltol+1,_LM35_res_1_Celsius_mv+1
  1042   0017CC                     
  1043                           ;application.c: 107:         LM35_res_1_Celsius_mv /= 10;
  1044   0017CC  C03C  F00B         	movff	_LM35_res_1_Celsius_mv,___lwdiv@dividend
  1045   0017D0  C03D  F00C         	movff	_LM35_res_1_Celsius_mv+1,___lwdiv@dividend+1
  1046   0017D4  0E00               	movlw	0
  1047   0017D6  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  1048   0017D8  0E0A               	movlw	10
  1049   0017DA  6E0D               	movwf	___lwdiv@divisor^0,c
  1050   0017DC  ECB0  F013         	call	___lwdiv	;wreg free
  1051   0017E0  C00B  F03C         	movff	?___lwdiv,_LM35_res_1_Celsius_mv
  1052   0017E4  C00C  F03D         	movff	?___lwdiv+1,_LM35_res_1_Celsius_mv+1
  1053   0017E8                     
  1054                           ;application.c: 109:         LM35_res_2_Celsius_mv = LM35_res_2 * 4.8875f;
  1055   0017E8  0E66               	movlw	102
  1056   0017EA  6E1D               	movwf	___flmul@a^0,c
  1057   0017EC  0E66               	movlw	102
  1058   0017EE  6E1E               	movwf	(___flmul@a+1)^0,c
  1059   0017F0  0E9C               	movlw	156
  1060   0017F2  6E1F               	movwf	(___flmul@a+2)^0,c
  1061   0017F4  0E40               	movlw	64
  1062   0017F6  6E20               	movwf	(___flmul@a+3)^0,c
  1063   0017F8  C05F  F00B         	movff	_LM35_res_2,___xxtofl@val
  1064   0017FC  C060  F00C         	movff	_LM35_res_2+1,___xxtofl@val+1
  1065   001800  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1066   001802  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1067   001804  0E00               	movlw	0
  1068   001806  EC68  F00D         	call	___xxtofl
  1069   00180A  C00B  F019         	movff	?___xxtofl,___flmul@b
  1070   00180E  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  1071   001812  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  1072   001816  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  1073   00181A  EC1D  F008         	call	___flmul	;wreg free
  1074   00181E  C019  F032         	movff	?___flmul,___fltol@f1
  1075   001822  C01A  F033         	movff	?___flmul+1,___fltol@f1+1
  1076   001826  C01B  F034         	movff	?___flmul+2,___fltol@f1+2
  1077   00182A  C01C  F035         	movff	?___flmul+3,___fltol@f1+3
  1078   00182E  EC79  F00F         	call	___fltol	;wreg free
  1079   001832  C032  F03A         	movff	?___fltol,_LM35_res_2_Celsius_mv
  1080   001836  C033  F03B         	movff	?___fltol+1,_LM35_res_2_Celsius_mv+1
  1081                           
  1082                           ;application.c: 110:         LM35_res_2_Celsius_mv /= 10;
  1083   00183A  C03A  F00B         	movff	_LM35_res_2_Celsius_mv,___lwdiv@dividend
  1084   00183E  C03B  F00C         	movff	_LM35_res_2_Celsius_mv+1,___lwdiv@dividend+1
  1085   001842  0E00               	movlw	0
  1086   001844  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  1087   001846  0E0A               	movlw	10
  1088   001848  6E0D               	movwf	___lwdiv@divisor^0,c
  1089   00184A  ECB0  F013         	call	___lwdiv	;wreg free
  1090   00184E  C00B  F03A         	movff	?___lwdiv,_LM35_res_2_Celsius_mv
  1091   001852  C00C  F03B         	movff	?___lwdiv+1,_LM35_res_2_Celsius_mv+1
  1092   001856                     
  1093                           ;application.c: 112:         if(LM35_res_1_Celsius_mv > 20){
  1094   001856  503D               	movf	(_LM35_res_1_Celsius_mv+1)^0,w,c
  1095   001858  E109               	bnz	u5590
  1096   00185A  0E15               	movlw	21
  1097   00185C  5C3C               	subwf	_LM35_res_1_Celsius_mv^0,w,c
  1098   00185E  A0D8               	btfss	status,0,c
  1099   001860  EF34  F00C         	goto	u5591
  1100   001864  EF36  F00C         	goto	u5590
  1101   001868                     u5591:
  1102   001868  EF3C  F00C         	goto	l5804
  1103   00186C                     u5590:
  1104   00186C                     
  1105                           ;application.c: 113:             dc_motor_move_right(&motor1);
  1106   00186C  0E73               	movlw	low _motor1
  1107   00186E  6E13               	movwf	dc_motor_move_right@_dc_motor^0,c
  1108   001870  ECC3  F015         	call	_dc_motor_move_right	;wreg free
  1109                           
  1110                           ;application.c: 114:         }else {
  1111   001874  EF40  F00C         	goto	l5806
  1112   001878                     l5804:
  1113                           
  1114                           ;application.c: 115:             dc_motor_stop(&motor1);
  1115   001878  0E73               	movlw	low _motor1
  1116   00187A  6E13               	movwf	dc_motor_stop@_dc_motor^0,c
  1117   00187C  ECAA  F015         	call	_dc_motor_stop	;wreg free
  1118   001880                     l5806:
  1119                           
  1120                           ;application.c: 118:         if(LM35_res_2_Celsius_mv > 25){
  1121   001880  503B               	movf	(_LM35_res_2_Celsius_mv+1)^0,w,c
  1122   001882  E109               	bnz	u5600
  1123   001884  0E1A               	movlw	26
  1124   001886  5C3A               	subwf	_LM35_res_2_Celsius_mv^0,w,c
  1125   001888  A0D8               	btfss	status,0,c
  1126   00188A  EF49  F00C         	goto	u5601
  1127   00188E  EF4B  F00C         	goto	u5600
  1128   001892                     u5601:
  1129   001892  EF51  F00C         	goto	l5810
  1130   001896                     u5600:
  1131   001896                     
  1132                           ;application.c: 119:             dc_motor_move_right(&motor2);
  1133   001896  0E71               	movlw	low _motor2
  1134   001898  6E13               	movwf	dc_motor_move_right@_dc_motor^0,c
  1135   00189A  ECC3  F015         	call	_dc_motor_move_right	;wreg free
  1136                           
  1137                           ;application.c: 120:         }else {
  1138   00189E  EF55  F00C         	goto	l5812
  1139   0018A2                     l5810:
  1140                           
  1141                           ;application.c: 121:             dc_motor_stop(&motor2);
  1142   0018A2  0E71               	movlw	low _motor2
  1143   0018A4  6E13               	movwf	dc_motor_stop@_dc_motor^0,c
  1144   0018A6  ECAA  F015         	call	_dc_motor_stop	;wreg free
  1145   0018AA                     l5812:
  1146                           
  1147                           ;application.c: 124:         ret = convert_uint16_to_string(LM35_res_1_Celsius_mv, LM35_
      +                          res_1_txt);
  1148   0018AA  C03C  F0E2         	movff	_LM35_res_1_Celsius_mv,convert_uint16_to_string@value
  1149   0018AE  C03D  F0E3         	movff	_LM35_res_1_Celsius_mv+1,convert_uint16_to_string@value+1
  1150   0018B2  0EBB               	movlw	low _LM35_res_1_txt
  1151   0018B4  0100               	movlb	0	; () banked
  1152   0018B6  6FE4               	movwf	convert_uint16_to_string@str& (0+255),b
  1153   0018B8  EC88  F012         	call	_convert_uint16_to_string	;wreg free
  1154   0018BC  0100               	movlb	0	; () banked
  1155   0018BE  6FED               	movwf	_ret& (0+255),b
  1156   0018C0                     
  1157                           ; BSR set to: 0
  1158                           ;application.c: 125:         ret = convert_uint16_to_string(LM35_res_2_Celsius_mv, LM35_
      +                          res_2_txt);
  1159   0018C0  C03A  F0E2         	movff	_LM35_res_2_Celsius_mv,convert_uint16_to_string@value
  1160   0018C4  C03B  F0E3         	movff	_LM35_res_2_Celsius_mv+1,convert_uint16_to_string@value+1
  1161   0018C8  0EB5               	movlw	low _LM35_res_2_txt
  1162   0018CA  6FE4               	movwf	convert_uint16_to_string@str& (0+255),b
  1163   0018CC  EC88  F012         	call	_convert_uint16_to_string	;wreg free
  1164   0018D0  0100               	movlb	0	; () banked
  1165   0018D2  6FED               	movwf	_ret& (0+255),b
  1166   0018D4                     
  1167                           ; BSR set to: 0
  1168                           ;application.c: 127:         ret = lcd_4bit_send_string_pos(&lcd1, 2, 8, LM35_res_1_txt)
      +                          ;
  1169   0018D4  0EDC               	movlw	low _lcd1
  1170   0018D6  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1171   0018D8  0E02               	movlw	2
  1172   0018DA  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
  1173   0018DC  0E08               	movlw	8
  1174   0018DE  6E24               	movwf	lcd_4bit_send_string_pos@column^0,c
  1175   0018E0  0EBB               	movlw	low _LM35_res_1_txt
  1176   0018E2  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
  1177   0018E4  6A26               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1178   0018E6  EC28  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1179   0018EA  0100               	movlb	0	; () banked
  1180   0018EC  6FED               	movwf	_ret& (0+255),b
  1181   0018EE                     
  1182                           ; BSR set to: 0
  1183                           ;application.c: 128:         ret = lcd_4bit_send_string_pos(&lcd1, 3, 8, LM35_res_2_txt)
      +                          ;
  1184   0018EE  0EDC               	movlw	low _lcd1
  1185   0018F0  6E22               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1186   0018F2  0E03               	movlw	3
  1187   0018F4  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
  1188   0018F6  0E08               	movlw	8
  1189   0018F8  6E24               	movwf	lcd_4bit_send_string_pos@column^0,c
  1190   0018FA  0EB5               	movlw	low _LM35_res_2_txt
  1191   0018FC  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
  1192   0018FE  6A26               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1193   001900  EC28  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1194   001904  0100               	movlb	0	; () banked
  1195   001906  6FED               	movwf	_ret& (0+255),b
  1196   001908  EF9B  F00B         	goto	l5786
  1197   00190C  EF07  F000         	goto	start
  1198   001910                     __end_of_main:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _lcd_init_message *****************
  1202 ;; Defined at:
  1203 ;;		line 63 in file "application.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  lcd             1   39[COMRAM] PTR const struct .
  1206 ;;		 -> lcd1(6), 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  ret             1    0        unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1218 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;Total ram usage:        3 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 9
  1225 ;; This function calls:
  1226 ;;		_lcd_4bit_send_string_pos
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text1
  1233   0027D4                     __ptext1:
  1234                           	callstack 0
  1235   0027D4                     _lcd_init_message:
  1236                           	callstack 21
  1237   0027D4  C028  F022         	movff	lcd_init_message@lcd,lcd_4bit_send_string_pos@lcd
  1238   0027D8  0E01               	movlw	1
  1239   0027DA  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
  1240   0027DC  0E02               	movlw	2
  1241   0027DE  6E24               	movwf	lcd_4bit_send_string_pos@column^0,c
  1242   0027E0  0E11               	movlw	low STR_4
  1243   0027E2  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
  1244   0027E4  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1245   0027E6  A4D8               	btfss	status,2,c
  1246   0027E8  0E10               	movlw	high __smallconst
  1247   0027EA  6E26               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1248   0027EC  EC28  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1249   0027F0                     
  1250                           ;application.c: 66:     _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1251   0027F0  0E06               	movlw	6
  1252   0027F2  6E2A               	movwf	(??_lcd_init_message+1)^0,c
  1253   0027F4  0E13               	movlw	19
  1254   0027F6  6E29               	movwf	??_lcd_init_message^0,c
  1255   0027F8  0EAE               	movlw	174
  1256   0027FA                     u5617:
  1257   0027FA  2EE8               	decfsz	wreg,f,c
  1258   0027FC  D7FE               	bra	u5617
  1259   0027FE  2E29               	decfsz	??_lcd_init_message^0,f,c
  1260   002800  D7FC               	bra	u5617
  1261   002802  2E2A               	decfsz	(??_lcd_init_message+1)^0,f,c
  1262   002804  D7FA               	bra	u5617
  1263   002806  C028  F022         	movff	lcd_init_message@lcd,lcd_4bit_send_string_pos@lcd
  1264   00280A  0E02               	movlw	2
  1265   00280C  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
  1266   00280E  0E01               	movlw	1
  1267   002810  6E24               	movwf	lcd_4bit_send_string_pos@column^0,c
  1268   002812  0E25               	movlw	low STR_5
  1269   002814  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
  1270   002816  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1271   002818  A4D8               	btfss	status,2,c
  1272   00281A  0E10               	movlw	high __smallconst
  1273   00281C  6E26               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1274   00281E  EC28  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1275   002822  C028  F022         	movff	lcd_init_message@lcd,lcd_4bit_send_string_pos@lcd
  1276   002826  0E03               	movlw	3
  1277   002828  6E23               	movwf	lcd_4bit_send_string_pos@row^0,c
  1278   00282A  0E01               	movlw	1
  1279   00282C  6E24               	movwf	lcd_4bit_send_string_pos@column^0,c
  1280   00282E  0E2D               	movlw	low STR_6
  1281   002830  6E25               	movwf	lcd_4bit_send_string_pos@str^0,c
  1282   002832  5025               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1283   002834  A4D8               	btfss	status,2,c
  1284   002836  0E10               	movlw	high __smallconst
  1285   002838  6E26               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1286   00283A  EC28  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1287   00283E  0012               	return		;funcret
  1288   002840                     __end_of_lcd_init_message:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _lcd_4bit_send_string_pos *****************
  1292 ;; Defined at:
  1293 ;;		line 174 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  lcd             1   33[COMRAM] PTR const struct .
  1296 ;;		 -> lcd1(6), 
  1297 ;;  row             1   34[COMRAM] unsigned char 
  1298 ;;  column          1   35[COMRAM] unsigned char 
  1299 ;;  str             2   36[COMRAM] PTR unsigned char 
  1300 ;;		 -> LM35_res_2_txt(6), LM35_res_1_txt(6), STR_6(8), STR_5(8), 
  1301 ;;		 -> STR_4(20), 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  ret             1   38[COMRAM] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      unsigned char 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1313 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;Total ram usage:        6 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 8
  1320 ;; This function calls:
  1321 ;;		_lcd_4bit_send_char_data
  1322 ;;		_lcd_4bit_set_cursor
  1323 ;; This function is called by:
  1324 ;;		_lcd_init_message
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text2
  1330   002650                     __ptext2:
  1331                           	callstack 0
  1332   002650                     _lcd_4bit_send_string_pos:
  1333                           	callstack 21
  1334   002650                     
  1335                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:     if (((void*)0) == lcd) {
  1336   002650  5022               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1337   002652  A4D8               	btfss	status,2,c
  1338   002654  EF2E  F013         	goto	u3341
  1339   002658  EF30  F013         	goto	u3340
  1340   00265C                     u3341:
  1341   00265C  EF34  F013         	goto	l4190
  1342   002660                     u3340:
  1343   002660                     
  1344                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 177:         ret = (Std_ReturnType)0x01;
  1345   002660  0E01               	movlw	1
  1346   002662  6E27               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1347                           
  1348                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 178:     } else {
  1349   002664  EF71  F013         	goto	l4198
  1350   002668                     l4190:
  1351                           
  1352                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 180:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1353   002668  C022  F01C         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1354   00266C  C023  F01D         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1355   002670  C024  F01E         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1356   002674  ECE3  F011         	call	_lcd_4bit_set_cursor	;wreg free
  1357   002678  6E27               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1358                           
  1359                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 181:         while (*str) {
  1360   00267A  EF58  F013         	goto	l4196
  1361   00267E                     l4192:
  1362                           
  1363                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 182:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  1364   00267E  C022  F019         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1365   002682  C025  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1366   002686  C026  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1367   00268A  0E00               	movlw	low (__smallconst shr (0+16))
  1368   00268C  6EF8               	movwf	tblptru,c
  1369   00268E  0E0F               	movlw	(high __ramtop+-1)
  1370   002690  64F7               	cpfsgt	tblptrh,c
  1371   002692  D003               	bra	u3357
  1372   002694  0008               	tblrd		*
  1373   002696  50F5               	movf	tablat,w,c
  1374   002698  D005               	bra	u3350
  1375   00269A                     u3357:
  1376   00269A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1377   00269E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1378   0026A2  50EF               	movf	indf0,w,c
  1379   0026A4                     u3350:
  1380   0026A4  6E1A               	movwf	lcd_4bit_send_char_data@data^0,c
  1381   0026A6  EC82  F014         	call	_lcd_4bit_send_char_data	;wreg free
  1382   0026AA  6E27               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1383   0026AC  4A25               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1384   0026AE  2A26               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1385   0026B0                     l4196:
  1386                           
  1387                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 181:         while (*str) {
  1388   0026B0  C025  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1389   0026B4  C026  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1390   0026B8  0E00               	movlw	low (__smallconst shr (0+16))
  1391   0026BA  6EF8               	movwf	tblptru,c
  1392   0026BC  0E0F               	movlw	(high __ramtop+-1)
  1393   0026BE  64F7               	cpfsgt	tblptrh,c
  1394   0026C0  D003               	bra	u3367
  1395   0026C2  0008               	tblrd		*
  1396   0026C4  50F5               	movf	tablat,w,c
  1397   0026C6  D005               	bra	u3360
  1398   0026C8                     u3367:
  1399   0026C8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1400   0026CC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1401   0026D0  50EF               	movf	indf0,w,c
  1402   0026D2                     u3360:
  1403   0026D2  0900               	iorlw	0
  1404   0026D4  A4D8               	btfss	status,2,c
  1405   0026D6  EF6F  F013         	goto	u3371
  1406   0026DA  EF71  F013         	goto	u3370
  1407   0026DE                     u3371:
  1408   0026DE  EF3F  F013         	goto	l4192
  1409   0026E2                     u3370:
  1410   0026E2                     l4198:
  1411                           
  1412                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 186:     return ret;
  1413   0026E2  5027               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1414   0026E4  0012               	return		;funcret
  1415   0026E6                     __end_of_lcd_4bit_send_string_pos:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _lcd_4bit_set_cursor *****************
  1419 ;; Defined at:
  1420 ;;		line 554 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  lcd             1   27[COMRAM] PTR const struct .
  1423 ;;		 -> lcd1(6), 
  1424 ;;  row             1   28[COMRAM] unsigned char 
  1425 ;;  column          1   29[COMRAM] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  ret             1   32[COMRAM] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      unsigned char 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1437 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;Total ram usage:        6 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 7
  1444 ;; This function calls:
  1445 ;;		_lcd_4bit_send_command
  1446 ;; This function is called by:
  1447 ;;		_lcd_4bit_send_string_pos
  1448 ;;		_lcd_4bit_send_char_data_pos
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text3
  1453   0023C6                     __ptext3:
  1454                           	callstack 0
  1455   0023C6                     _lcd_4bit_set_cursor:
  1456                           	callstack 21
  1457   0023C6                     
  1458                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 555:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1459   0023C6  0E00               	movlw	0
  1460   0023C8  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1461                           
  1462                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 556:     if (((void*)0) == lcd) {
  1463   0023CA  501C               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1464   0023CC  A4D8               	btfss	status,2,c
  1465   0023CE  EFEB  F011         	goto	u3241
  1466   0023D2  EFED  F011         	goto	u3240
  1467   0023D6                     u3241:
  1468   0023D6  EFF1  F011         	goto	l4052
  1469   0023DA                     u3240:
  1470   0023DA                     
  1471                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 557:         ret = (Std_ReturnType)0x01;
  1472   0023DA  0E01               	movlw	1
  1473   0023DC  6E21               	movwf	lcd_4bit_set_cursor@ret^0,c
  1474                           
  1475                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 558:     } else {
  1476   0023DE  EF35  F012         	goto	l4066
  1477   0023E2                     l4052:
  1478                           
  1479                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 560:         column--;
  1480   0023E2  061E               	decf	lcd_4bit_set_cursor@column^0,f,c
  1481                           
  1482                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 561:         switch (row) {
  1483   0023E4  EF18  F012         	goto	l4064
  1484   0023E8                     l4054:
  1485   0023E8  C01C  F019         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1486   0023EC  501E               	movf	lcd_4bit_set_cursor@column^0,w,c
  1487   0023EE  0F80               	addlw	128
  1488   0023F0  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  1489   0023F2  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  1490                           
  1491                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 563:                 break;
  1492   0023F6  EF35  F012         	goto	l4066
  1493   0023FA                     l4056:
  1494   0023FA  C01C  F019         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1495   0023FE  501E               	movf	lcd_4bit_set_cursor@column^0,w,c
  1496   002400  0FC0               	addlw	192
  1497   002402  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  1498   002404  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  1499                           
  1500                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 565:                 break;
  1501   002408  EF35  F012         	goto	l4066
  1502   00240C                     l4058:
  1503   00240C  C01C  F019         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1504   002410  501E               	movf	lcd_4bit_set_cursor@column^0,w,c
  1505   002412  0F94               	addlw	148
  1506   002414  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  1507   002416  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  1508                           
  1509                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 567:                 break;
  1510   00241A  EF35  F012         	goto	l4066
  1511   00241E                     l4060:
  1512   00241E  C01C  F019         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1513   002422  501E               	movf	lcd_4bit_set_cursor@column^0,w,c
  1514   002424  0FD4               	addlw	212
  1515   002426  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  1516   002428  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  1517                           
  1518                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 569:                 break;
  1519   00242C  EF35  F012         	goto	l4066
  1520   002430                     l4064:
  1521   002430  501D               	movf	lcd_4bit_set_cursor@row^0,w,c
  1522   002432  6E1F               	movwf	??_lcd_4bit_set_cursor^0,c
  1523   002434  6A20               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1524                           
  1525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1526                           ; Switch size 1, requested type "simple"
  1527                           ; Number of cases is 1, Range of values is 0 to 0
  1528                           ; switch strategies available:
  1529                           ; Name         Instructions Cycles
  1530                           ; simple_byte            4     3 (average)
  1531                           ;	Chosen strategy is simple_byte
  1532   002436  5020               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1533   002438  0A00               	xorlw	0	; case 0
  1534   00243A  B4D8               	btfsc	status,2,c
  1535   00243C  EF22  F012         	goto	l5900
  1536   002440  EF35  F012         	goto	l4066
  1537   002444                     l5900:
  1538                           
  1539                           ; Switch size 1, requested type "simple"
  1540                           ; Number of cases is 4, Range of values is 1 to 4
  1541                           ; switch strategies available:
  1542                           ; Name         Instructions Cycles
  1543                           ; simple_byte           13     7 (average)
  1544                           ;	Chosen strategy is simple_byte
  1545   002444  501F               	movf	??_lcd_4bit_set_cursor^0,w,c
  1546   002446  0A01               	xorlw	1	; case 1
  1547   002448  B4D8               	btfsc	status,2,c
  1548   00244A  EFF4  F011         	goto	l4054
  1549   00244E  0A03               	xorlw	3	; case 2
  1550   002450  B4D8               	btfsc	status,2,c
  1551   002452  EFFD  F011         	goto	l4056
  1552   002456  0A01               	xorlw	1	; case 3
  1553   002458  B4D8               	btfsc	status,2,c
  1554   00245A  EF06  F012         	goto	l4058
  1555   00245E  0A07               	xorlw	7	; case 4
  1556   002460  B4D8               	btfsc	status,2,c
  1557   002462  EF0F  F012         	goto	l4060
  1558   002466  EF35  F012         	goto	l4066
  1559   00246A                     l4066:
  1560                           
  1561                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 574:     return ret;
  1562   00246A  5021               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1563   00246C  0012               	return		;funcret
  1564   00246E                     __end_of_lcd_4bit_set_cursor:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _lcd_4bit_send_char_data *****************
  1568 ;; Defined at:
  1569 ;;		line 95 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  lcd             1   24[COMRAM] PTR const struct .
  1572 ;;		 -> lcd1(6), 
  1573 ;;  data            1   25[COMRAM] unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  ret             1   26[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      unsigned char 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;Total ram usage:        3 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 6
  1592 ;; This function calls:
  1593 ;;		_gpio_pin_write_logic
  1594 ;;		_lcd_send_4bits
  1595 ;;		_lcd_send_enable_signal
  1596 ;; This function is called by:
  1597 ;;		_lcd_4bit_send_string_pos
  1598 ;;		_lcd_4bit_send_char_data_pos
  1599 ;;		_lcd_4bit_send_string
  1600 ;;		_lcd_4bit_send_custom_char
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text4
  1605   002904                     __ptext4:
  1606                           	callstack 0
  1607   002904                     _lcd_4bit_send_char_data:
  1608                           	callstack 22
  1609   002904                     
  1610                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 97:     if (((void*)0) == lcd) {
  1611   002904  5019               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1612   002906  A4D8               	btfss	status,2,c
  1613   002908  EF88  F014         	goto	u3231
  1614   00290C  EF8A  F014         	goto	u3230
  1615   002910                     u3231:
  1616   002910  EF8E  F014         	goto	l4042
  1617   002914                     u3230:
  1618   002914                     
  1619                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 98:         ret = (Std_ReturnType)0x01;
  1620   002914  0E01               	movlw	1
  1621   002916  6E1B               	movwf	lcd_4bit_send_char_data@ret^0,c
  1622                           
  1623                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 99:     } else {
  1624   002918  EFAE  F014         	goto	l4044
  1625   00291C                     l4042:
  1626                           
  1627                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 102:         ret = gpio_pin_write_logic(&(lcd->lcd_rs)
      +                          , GPIO_LOGIC_HIGH);
  1628   00291C  C019  F00B         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1629   002920  0E01               	movlw	1
  1630   002922  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1631   002924  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  1632   002928  6E1B               	movwf	lcd_4bit_send_char_data@ret^0,c
  1633                           
  1634                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 104:         ret = lcd_send_4bits(lcd, data >> 4);
  1635   00292A  C019  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1636   00292E  381A               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1637   002930  0B0F               	andlw	15
  1638   002932  6E14               	movwf	lcd_send_4bits@data_command^0,c
  1639   002934  EC51  F014         	call	_lcd_send_4bits	;wreg free
  1640   002938  6E1B               	movwf	lcd_4bit_send_char_data@ret^0,c
  1641                           
  1642                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 106:         ret = lcd_send_enable_signal(lcd);
  1643   00293A  C019  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_enable_signal@lcd
  1644   00293E  EC21  F015         	call	_lcd_send_enable_signal	;wreg free
  1645   002942  6E1B               	movwf	lcd_4bit_send_char_data@ret^0,c
  1646                           
  1647                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 108:         ret = lcd_send_4bits(lcd, data);
  1648   002944  C019  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1649   002948  C01A  F014         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  1650   00294C  EC51  F014         	call	_lcd_send_4bits	;wreg free
  1651   002950  6E1B               	movwf	lcd_4bit_send_char_data@ret^0,c
  1652                           
  1653                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 110:         ret = lcd_send_enable_signal(lcd);
  1654   002952  C019  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_enable_signal@lcd
  1655   002956  EC21  F015         	call	_lcd_send_enable_signal	;wreg free
  1656   00295A  6E1B               	movwf	lcd_4bit_send_char_data@ret^0,c
  1657   00295C                     l4044:
  1658                           
  1659                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 114:     return ret;
  1660   00295C  501B               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1661   00295E  0012               	return		;funcret
  1662   002960                     __end_of_lcd_4bit_send_char_data:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _dc_motor_stop *****************
  1666 ;; Defined at:
  1667 ;;		line 68 in file "ECU_Layer/dc_motor/ecu_dc_motor.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  _dc_motor       1   18[COMRAM] PTR const struct .
  1670 ;;		 -> motor2(2), motor1(2), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  ret             1   19[COMRAM] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      unsigned char 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:        2 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 5
  1689 ;; This function calls:
  1690 ;;		_gpio_pin_write_logic
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text5
  1697   002B54                     __ptext5:
  1698                           	callstack 0
  1699   002B54                     _dc_motor_stop:
  1700                           	callstack 25
  1701   002B54                     
  1702                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 70:     if (((void*)0) == _dc_motor) {
  1703   002B54  5013               	movf	dc_motor_stop@_dc_motor^0,w,c
  1704   002B56  A4D8               	btfss	status,2,c
  1705   002B58  EFB0  F015         	goto	u3561
  1706   002B5C  EFB2  F015         	goto	u3560
  1707   002B60                     u3561:
  1708   002B60  EFB4  F015         	goto	l4398
  1709   002B64                     u3560:
  1710   002B64                     
  1711                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 72:     } else {
  1712   002B64  EFC2  F015         	goto	l251
  1713   002B68                     l4398:
  1714                           
  1715                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 73:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x00U]), GPIO_LOGIC_LOW);
  1716   002B68  C013  F00B         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  1717   002B6C  0E00               	movlw	0
  1718   002B6E  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1719   002B70  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  1720   002B74  6E14               	movwf	dc_motor_stop@ret^0,c
  1721                           
  1722                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 74:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x01U]), GPIO_LOGIC_LOW);
  1723   002B76  2813               	incf	dc_motor_stop@_dc_motor^0,w,c
  1724   002B78  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1725   002B7A  0E00               	movlw	0
  1726   002B7C  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1727   002B7E  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  1728   002B82  6E14               	movwf	dc_motor_stop@ret^0,c
  1729   002B84                     l251:
  1730   002B84  0012               	return		;funcret
  1731   002B86                     __end_of_dc_motor_stop:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _dc_motor_move_right *****************
  1735 ;; Defined at:
  1736 ;;		line 30 in file "ECU_Layer/dc_motor/ecu_dc_motor.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  _dc_motor       1   18[COMRAM] PTR const struct .
  1739 ;;		 -> motor2(2), motor1(2), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  ret             1   19[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      unsigned char 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        2 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 5
  1758 ;; This function calls:
  1759 ;;		_gpio_pin_write_logic
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text6
  1766   002B86                     __ptext6:
  1767                           	callstack 0
  1768   002B86                     _dc_motor_move_right:
  1769                           	callstack 25
  1770   002B86                     
  1771                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 32:     if (((void*)0) == _dc_motor) {
  1772   002B86  5013               	movf	dc_motor_move_right@_dc_motor^0,w,c
  1773   002B88  A4D8               	btfss	status,2,c
  1774   002B8A  EFC9  F015         	goto	u3551
  1775   002B8E  EFCB  F015         	goto	u3550
  1776   002B92                     u3551:
  1777   002B92  EFCD  F015         	goto	l4390
  1778   002B96                     u3550:
  1779   002B96                     
  1780                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 34:     } else {
  1781   002B96  EFDB  F015         	goto	l241
  1782   002B9A                     l4390:
  1783                           
  1784                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 35:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x00U]), GPIO_LOGIC_HIGH);
  1785   002B9A  C013  F00B         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
  1786   002B9E  0E01               	movlw	1
  1787   002BA0  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1788   002BA2  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  1789   002BA6  6E14               	movwf	dc_motor_move_right@ret^0,c
  1790                           
  1791                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 36:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x01U]), GPIO_LOGIC_LOW);
  1792   002BA8  2813               	incf	dc_motor_move_right@_dc_motor^0,w,c
  1793   002BAA  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1794   002BAC  0E00               	movlw	0
  1795   002BAE  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1796   002BB0  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  1797   002BB4  6E14               	movwf	dc_motor_move_right@ret^0,c
  1798   002BB6                     l241:
  1799   002BB6  0012               	return		;funcret
  1800   002BB8                     __end_of_dc_motor_move_right:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _convert_uint16_to_string *****************
  1804 ;; Defined at:
  1805 ;;		line 448 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  value           2    0[BANK0 ] unsigned short 
  1808 ;;  str             1    2[BANK0 ] PTR unsigned char 
  1809 ;;		 -> LM35_res_2_txt(6), LM35_res_1_txt(6), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  TempString      6    3[BANK0 ] unsigned char [6]
  1812 ;;  DataCounter     1   10[BANK0 ] unsigned char 
  1813 ;;  ret             1    9[BANK0 ] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      unsigned char 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1823 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;Total ram usage:       11 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 9
  1830 ;; This function calls:
  1831 ;;		_memset
  1832 ;;		_sprintf
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text7
  1839   002510                     __ptext7:
  1840                           	callstack 0
  1841   002510                     _convert_uint16_to_string:
  1842                           	callstack 21
  1843   002510                     
  1844                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 449:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1845   002510  0E00               	movlw	0
  1846   002512  0100               	movlb	0	; () banked
  1847   002514  6FEB               	movwf	convert_uint16_to_string@ret& (0+255),b
  1848   002516                     
  1849                           ; BSR set to: 0
  1850                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 450:     uint8 TempString[6] = {0};
  1851   002516  EE20  F0E5         	lfsr	2,convert_uint16_to_string@TempString
  1852   00251A  0E05               	movlw	5
  1853   00251C                     u5421:
  1854   00251C  6ADE               	clrf	postinc2,c
  1855   00251E  06E8               	decf	wreg,f,c
  1856   002520  E2FD               	bc	u5421
  1857   002522                     
  1858                           ; BSR set to: 0
  1859                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 451:     uint8 DataCounter = 0;
  1860   002522  0E00               	movlw	0
  1861   002524  6FEC               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  1862   002526                     
  1863                           ; BSR set to: 0
  1864                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 452:     if (((void*)0) == str) {
  1865   002526  51E4               	movf	convert_uint16_to_string@str& (0+255),w,b
  1866   002528  A4D8               	btfss	status,2,c
  1867   00252A  EF99  F012         	goto	u5431
  1868   00252E  EF9B  F012         	goto	u5430
  1869   002532                     u5431:
  1870   002532  EF9F  F012         	goto	l5682
  1871   002536                     u5430:
  1872   002536                     
  1873                           ; BSR set to: 0
  1874                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 453:         ret = (Std_ReturnType)0x01;
  1875   002536  0E01               	movlw	1
  1876   002538  6FEB               	movwf	convert_uint16_to_string@ret& (0+255),b
  1877                           
  1878                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 454:     } else {
  1879   00253A  EFD6  F012         	goto	l5694
  1880   00253E                     l5682:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 455:         memset(str, ' ', 5);
  1884   00253E  C0E4  F00B         	movff	convert_uint16_to_string@str,memset@dest
  1885   002542  0E00               	movlw	0
  1886   002544  6E0D               	movwf	(memset@c+1)^0,c
  1887   002546  0E20               	movlw	32
  1888   002548  6E0C               	movwf	memset@c^0,c
  1889   00254A  0E00               	movlw	0
  1890   00254C  6E0F               	movwf	(memset@n+1)^0,c
  1891   00254E  0E05               	movlw	5
  1892   002550  6E0E               	movwf	memset@n^0,c
  1893   002552  ECDC  F015         	call	_memset	;wreg free
  1894   002556                     
  1895                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:         str[5] = '\0';
  1896   002556  0100               	movlb	0	; () banked
  1897   002558  51E4               	movf	convert_uint16_to_string@str& (0+255),w,b
  1898   00255A  6ED9               	movwf	fsr2l,c
  1899   00255C  6ADA               	clrf	fsr2h,c
  1900   00255E  0E05               	movlw	5
  1901   002560  26D9               	addwf	fsr2l,f,c
  1902   002562  6ADF               	clrf	indf2,c
  1903   002564                     
  1904                           ; BSR set to: 0
  1905                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 458:         sprintf((char *)TempString, "%i", value);
  1906   002564  0EE5               	movlw	low convert_uint16_to_string@TempString
  1907   002566  6E24               	movwf	sprintf@s^0,c
  1908   002568  0E35               	movlw	low STR_1
  1909   00256A  6E25               	movwf	sprintf@fmt^0,c
  1910   00256C  C0E2  F026         	movff	convert_uint16_to_string@value,?_sprintf+2
  1911   002570  C0E3  F027         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  1912   002574  EC5C  F015         	call	_sprintf	;wreg free
  1913                           
  1914                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 460:         while(TempString[DataCounter] != '\0'){
  1915   002578  EFC9  F012         	goto	l5692
  1916   00257C                     l5688:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 461:             str[DataCounter] = TempString[DataCou
      +                          nter];
  1920   00257C  51EC               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  1921   00257E  0FE5               	addlw	low convert_uint16_to_string@TempString
  1922   002580  6ED9               	movwf	fsr2l,c
  1923   002582  6ADA               	clrf	fsr2h,c
  1924   002584  51E4               	movf	convert_uint16_to_string@str& (0+255),w,b
  1925   002586  25EC               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  1926   002588  6EE1               	movwf	fsr1l,c
  1927   00258A  6AE2               	clrf	fsr1h,c
  1928   00258C  CFDF FFE7          	movff	indf2,indf1
  1929   002590                     
  1930                           ; BSR set to: 0
  1931                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 462:             DataCounter++;
  1932   002590  2BEC               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  1933   002592                     l5692:
  1934                           
  1935                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 460:         while(TempString[DataCounter] != '\0'){
  1936   002592  0100               	movlb	0	; () banked
  1937   002594  51EC               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  1938   002596  0FE5               	addlw	low convert_uint16_to_string@TempString
  1939   002598  6ED9               	movwf	fsr2l,c
  1940   00259A  6ADA               	clrf	fsr2h,c
  1941   00259C  50DF               	movf	indf2,w,c
  1942   00259E  A4D8               	btfss	status,2,c
  1943   0025A0  EFD4  F012         	goto	u5441
  1944   0025A4  EFD6  F012         	goto	u5440
  1945   0025A8                     u5441:
  1946   0025A8  EFBE  F012         	goto	l5688
  1947   0025AC                     u5440:
  1948   0025AC                     l5694:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 466:     return ret;
  1952   0025AC  51EB               	movf	convert_uint16_to_string@ret& (0+255),w,b
  1953   0025AE                     
  1954                           ; BSR set to: 0
  1955   0025AE  0012               	return		;funcret
  1956   0025B0                     __end_of_convert_uint16_to_string:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _sprintf *****************
  1960 ;; Defined at:
  1961 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  s               1   35[COMRAM] PTR unsigned char 
  1964 ;;		 -> convert_uint32_to_string@TempString(11), convert_uint16_to_string@TempString(6), convert_uint8_to_string@TempStr
      +ing(4), 
  1965 ;;  fmt             1   36[COMRAM] PTR const unsigned char 
  1966 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  f              12   40[COMRAM] struct _IO_FILE
  1969 ;;  ret             2    0        int 
  1970 ;;  ap              1   39[COMRAM] PTR void [1]
  1971 ;;		 -> ?_sprintf(2), 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  2   35[COMRAM] int 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;Total ram usage:       17 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 8
  1988 ;; This function calls:
  1989 ;;		_vfprintf
  1990 ;; This function is called by:
  1991 ;;		_convert_uint16_to_string
  1992 ;;		_convert_uint8_to_string
  1993 ;;		_convert_uint32_to_string
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text8
  1998   002AB8                     __ptext8:
  1999                           	callstack 0
  2000   002AB8                     _sprintf:
  2001                           	callstack 21
  2002   002AB8  0E26               	movlw	low (?_sprintf+2)
  2003   002ABA  6E28               	movwf	sprintf@ap^0,c
  2004   002ABC  C024  F029         	movff	sprintf@s,sprintf@f
  2005   002AC0  0E00               	movlw	0
  2006   002AC2  6E2D               	movwf	(sprintf@f+4)^0,c
  2007   002AC4  0E00               	movlw	0
  2008   002AC6  6E2C               	movwf	(sprintf@f+3)^0,c
  2009   002AC8  0E00               	movlw	0
  2010   002ACA  6E34               	movwf	(sprintf@f+11)^0,c
  2011   002ACC  0E00               	movlw	0
  2012   002ACE  6E33               	movwf	(sprintf@f+10)^0,c
  2013   002AD0  0E29               	movlw	low sprintf@f
  2014   002AD2  6E20               	movwf	vfprintf@fp^0,c
  2015   002AD4  C025  F021         	movff	sprintf@fmt,vfprintf@fmt
  2016   002AD8  0E28               	movlw	low sprintf@ap
  2017   002ADA  6E22               	movwf	vfprintf@ap^0,c
  2018   002ADC  EC01  F015         	call	_vfprintf	;wreg free
  2019   002AE0  5024               	movf	sprintf@s^0,w,c
  2020   002AE2  242C               	addwf	(sprintf@f+3)^0,w,c
  2021   002AE4  6ED9               	movwf	fsr2l,c
  2022   002AE6  6ADA               	clrf	fsr2h,c
  2023   002AE8  6ADF               	clrf	indf2,c
  2024   002AEA  0012               	return		;funcret
  2025   002AEC                     __end_of_sprintf:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _vfprintf *****************
  2029 ;; Defined at:
  2030 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2033 ;;		 -> sprintf@f(12), 
  2034 ;;  fmt             1   32[COMRAM] PTR const unsigned char 
  2035 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2036 ;;  ap              1   33[COMRAM] PTR PTR void 
  2037 ;;		 -> sprintf@ap(1), 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  cfmt            1   34[COMRAM] PTR unsigned char 
  2040 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  2   31[COMRAM] int 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2050 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;Total ram usage:        4 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 7
  2057 ;; This function calls:
  2058 ;;		_vfpfcnvrt
  2059 ;; This function is called by:
  2060 ;;		_sprintf
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text9
  2065   002A02                     __ptext9:
  2066                           	callstack 0
  2067   002A02                     _vfprintf:
  2068                           	callstack 21
  2069   002A02                     
  2070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2071   002A02  C021  F023         	movff	vfprintf@fmt,vfprintf@cfmt
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2074   002A06  EF0D  F015         	goto	l5646
  2075   002A0A                     l5644:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2078   002A0A  C020  F015         	movff	vfprintf@fp,vfpfcnvrt@fp
  2079   002A0E  0E23               	movlw	low vfprintf@cfmt
  2080   002A10  6E16               	movwf	vfpfcnvrt@fmt^0,c
  2081   002A12  C022  F017         	movff	vfprintf@ap,vfpfcnvrt@ap
  2082   002A16  EC88  F00C         	call	_vfpfcnvrt	;wreg free
  2083   002A1A                     l5646:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2086   002A1A  C023  FFF6         	movff	vfprintf@cfmt,tblptrl
  2087   002A1E                     	if	1	;There is more than 1 active tblptr byte
  2088   002A1E  0E10               	movlw	high __smallconst
  2089   002A20  6EF7               	movwf	tblptrh,c
  2090   002A22                     	endif
  2091   002A22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2092   002A22  6AF8               	clrf	tblptru,c
  2093   002A24                     	endif
  2094   002A24                     	if	0	;tblptru may be non-zero
  2095   002A24                     	endif
  2096   002A24  0008               	tblrd		*
  2097   002A26  50F5               	movf	tablat,w,c
  2098   002A28  0900               	iorlw	0
  2099   002A2A  A4D8               	btfss	status,2,c
  2100   002A2C  EF1A  F015         	goto	u5401
  2101   002A30  EF1C  F015         	goto	u5400
  2102   002A34                     u5401:
  2103   002A34  EF05  F015         	goto	l5644
  2104   002A38                     u5400:
  2105   002A38                     
  2106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2107   002A38  0E00               	movlw	0
  2108   002A3A  6E21               	movwf	(?_vfprintf+1)^0,c
  2109   002A3C  0E00               	movlw	0
  2110   002A3E  6E20               	movwf	?_vfprintf^0,c
  2111   002A40  0012               	return		;funcret
  2112   002A42                     __end_of_vfprintf:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _vfpfcnvrt *****************
  2116 ;; Defined at:
  2117 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2120 ;;		 -> sprintf@f(12), 
  2121 ;;  fmt             1   21[COMRAM] PTR PTR unsigned char 
  2122 ;;		 -> vfprintf@cfmt(1), 
  2123 ;;  ap              1   22[COMRAM] PTR PTR void 
  2124 ;;		 -> sprintf@ap(1), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  convarg         4   26[COMRAM] struct .
  2127 ;;  c               1   30[COMRAM] unsigned char 
  2128 ;;  cp              1   25[COMRAM] PTR unsigned char 
  2129 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2130 ;;  done            1   24[COMRAM] _Bool 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:       11 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 6
  2147 ;; This function calls:
  2148 ;;		___awdiv
  2149 ;;		___awmod
  2150 ;;		_abs
  2151 ;;		_fputc
  2152 ;; This function is called by:
  2153 ;;		_vfprintf
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text10
  2158   001910                     __ptext10:
  2159                           	callstack 0
  2160   001910                     _vfpfcnvrt:
  2161                           	callstack 21
  2162   001910                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2164   001910  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2165   001912  6ED9               	movwf	fsr2l,c
  2166   001914  6ADA               	clrf	fsr2h,c
  2167   001916  CFDF FFF6          	movff	indf2,tblptrl
  2168   00191A                     	if	1	;There is more than 1 active tblptr byte
  2169   00191A  0E10               	movlw	high __smallconst
  2170   00191C  6EF7               	movwf	tblptrh,c
  2171   00191E                     	endif
  2172   00191E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2173   00191E  6AF8               	clrf	tblptru,c
  2174   001920                     	endif
  2175   001920                     	if	0	;tblptru may be non-zero
  2176   001920                     	endif
  2177   001920  0008               	tblrd		*
  2178   001922  50F5               	movf	tablat,w,c
  2179   001924  0A25               	xorlw	37
  2180   001926  A4D8               	btfss	status,2,c
  2181   001928  EF98  F00C         	goto	u5301
  2182   00192C  EF9A  F00C         	goto	u5300
  2183   001930                     u5301:
  2184   001930  EF55  F00D         	goto	l5636
  2185   001934                     u5300:
  2186   001934                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2188   001934  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2189   001936  6ED9               	movwf	fsr2l,c
  2190   001938  6ADA               	clrf	fsr2h,c
  2191   00193A  2ADF               	incf	indf2,f,c
  2192   00193C                     
  2193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2194   00193C  0E00               	movlw	0
  2195   00193E  6E37               	movwf	(_width+1)^0,c
  2196   001940  0E00               	movlw	0
  2197   001942  6E36               	movwf	_width^0,c
  2198   001944  C036  F056         	movff	_width,_flags
  2199   001948                     
  2200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2201   001948  6838               	setf	_prec^0,c
  2202   00194A  6839               	setf	(_prec+1)^0,c
  2203   00194C                     
  2204                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2205   00194C  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2206   00194E  6ED9               	movwf	fsr2l,c
  2207   001950  6ADA               	clrf	fsr2h,c
  2208   001952  50DF               	movf	indf2,w,c
  2209   001954  6E1A               	movwf	vfpfcnvrt@cp^0,c
  2210   001956                     
  2211                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2212   001956  C01A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2213   00195A                     	if	1	;There is more than 1 active tblptr byte
  2214   00195A  0E10               	movlw	high __smallconst
  2215   00195C  6EF7               	movwf	tblptrh,c
  2216   00195E                     	endif
  2217   00195E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2218   00195E  6AF8               	clrf	tblptru,c
  2219   001960                     	endif
  2220   001960                     	if	0	;tblptru may be non-zero
  2221   001960                     	endif
  2222   001960  0008               	tblrd		*
  2223   001962  50F5               	movf	tablat,w,c
  2224   001964  0A64               	xorlw	100
  2225   001966  B4D8               	btfsc	status,2,c
  2226   001968  EFB8  F00C         	goto	u5311
  2227   00196C  EFBA  F00C         	goto	u5310
  2228   001970                     u5311:
  2229   001970  EFC9  F00C         	goto	l5606
  2230   001974                     u5310:
  2231   001974  C01A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2232   001978                     	if	1	;There is more than 1 active tblptr byte
  2233   001978  0E10               	movlw	high __smallconst
  2234   00197A  6EF7               	movwf	tblptrh,c
  2235   00197C                     	endif
  2236   00197C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2237   00197C  6AF8               	clrf	tblptru,c
  2238   00197E                     	endif
  2239   00197E                     	if	0	;tblptru may be non-zero
  2240   00197E                     	endif
  2241   00197E  0008               	tblrd		*
  2242   001980  50F5               	movf	tablat,w,c
  2243   001982  0A69               	xorlw	105
  2244   001984  A4D8               	btfss	status,2,c
  2245   001986  EFC7  F00C         	goto	u5321
  2246   00198A  EFC9  F00C         	goto	u5320
  2247   00198E                     u5321:
  2248   00198E  EF4F  F00D         	goto	l5632
  2249   001992                     u5320:
  2250   001992                     l5606:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2253   001992  5017               	movf	vfpfcnvrt@ap^0,w,c
  2254   001994  6ED9               	movwf	fsr2l,c
  2255   001996  6ADA               	clrf	fsr2h,c
  2256   001998  0E02               	movlw	2
  2257   00199A  26DF               	addwf	indf2,f,c
  2258   00199C  5CDF               	subwf	indf2,w,c
  2259   00199E  6ED9               	movwf	fsr2l,c
  2260   0019A0  6ADA               	clrf	fsr2h,c
  2261   0019A2  CFDE F01B          	movff	postinc2,vfpfcnvrt@convarg
  2262   0019A6  CFDE F01C          	movff	postinc2,vfpfcnvrt@convarg+1
  2263   0019AA                     
  2264                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2265   0019AA  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2266   0019AC  6ED9               	movwf	fsr2l,c
  2267   0019AE  6ADA               	clrf	fsr2h,c
  2268   0019B0  281A               	incf	vfpfcnvrt@cp^0,w,c
  2269   0019B2  6EDF               	movwf	indf2,c
  2270   0019B4                     
  2271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2272   0019B4  0E20               	movlw	32
  2273   0019B6  6E1F               	movwf	vfpfcnvrt@c^0,c
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2276   0019B8  BE1C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2277   0019BA  EFE1  F00C         	goto	u5331
  2278   0019BE  EFE4  F00C         	goto	u5330
  2279   0019C2                     u5331:
  2280   0019C2  0E01               	movlw	1
  2281   0019C4  EFE5  F00C         	goto	u5340
  2282   0019C8                     u5330:
  2283   0019C8  0E00               	movlw	0
  2284   0019CA                     u5340:
  2285   0019CA  6E19               	movwf	vfpfcnvrt@done^0,c
  2286   0019CC                     l5612:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2289   0019CC  061F               	decf	vfpfcnvrt@c^0,f,c
  2290   0019CE  501F               	movf	vfpfcnvrt@c^0,w,c
  2291   0019D0  0F80               	addlw	low _dbuf
  2292   0019D2  6ED9               	movwf	fsr2l,c
  2293   0019D4  6ADA               	clrf	fsr2h,c
  2294   0019D6  C01B  F00B         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2295   0019DA  C01C  F00C         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2296   0019DE  0E00               	movlw	0
  2297   0019E0  6E0E               	movwf	(___awmod@divisor+1)^0,c
  2298   0019E2  0E0A               	movlw	10
  2299   0019E4  6E0D               	movwf	___awmod@divisor^0,c
  2300   0019E6  EC36  F011         	call	___awmod	;wreg free
  2301   0019EA  C00B  F011         	movff	?___awmod,abs@a
  2302   0019EE  C00C  F012         	movff	?___awmod+1,abs@a+1
  2303   0019F2  EC76  F015         	call	_abs	;wreg free
  2304   0019F6  5011               	movf	?_abs^0,w,c
  2305   0019F8  0F30               	addlw	48
  2306   0019FA  6EDF               	movwf	indf2,c
  2307   0019FC                     
  2308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2309   0019FC  C01B  F00B         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2310   001A00  C01C  F00C         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2311   001A04  0E00               	movlw	0
  2312   001A06  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  2313   001A08  0E0A               	movlw	10
  2314   001A0A  6E0D               	movwf	___awdiv@divisor^0,c
  2315   001A0C  ECD4  F010         	call	___awdiv	;wreg free
  2316   001A10  C00B  F01B         	movff	?___awdiv,vfpfcnvrt@convarg
  2317   001A14  C00C  F01C         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2318   001A18                     
  2319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2320   001A18  501B               	movf	vfpfcnvrt@convarg^0,w,c
  2321   001A1A  101C               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2322   001A1C  B4D8               	btfsc	status,2,c
  2323   001A1E  EF13  F00D         	goto	u5351
  2324   001A22  EF15  F00D         	goto	u5350
  2325   001A26                     u5351:
  2326   001A26  EF1D  F00D         	goto	l5620
  2327   001A2A                     u5350:
  2328   001A2A  501F               	movf	vfpfcnvrt@c^0,w,c
  2329   001A2C  A4D8               	btfss	status,2,c
  2330   001A2E  EF1B  F00D         	goto	u5361
  2331   001A32  EF1D  F00D         	goto	u5360
  2332   001A36                     u5361:
  2333   001A36  EFE6  F00C         	goto	l5612
  2334   001A3A                     u5360:
  2335   001A3A                     l5620:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2338   001A3A  501F               	movf	vfpfcnvrt@c^0,w,c
  2339   001A3C  B4D8               	btfsc	status,2,c
  2340   001A3E  EF23  F00D         	goto	u5371
  2341   001A42  EF25  F00D         	goto	u5370
  2342   001A46                     u5371:
  2343   001A46  EF44  F00D         	goto	l5630
  2344   001A4A                     u5370:
  2345   001A4A  5019               	movf	vfpfcnvrt@done^0,w,c
  2346   001A4C  B4D8               	btfsc	status,2,c
  2347   001A4E  EF2B  F00D         	goto	u5381
  2348   001A52  EF2D  F00D         	goto	u5380
  2349   001A56                     u5381:
  2350   001A56  EF44  F00D         	goto	l5630
  2351   001A5A                     u5380:
  2352   001A5A                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2354   001A5A  061F               	decf	vfpfcnvrt@c^0,f,c
  2355   001A5C  501F               	movf	vfpfcnvrt@c^0,w,c
  2356   001A5E  0F80               	addlw	low _dbuf
  2357   001A60  6ED9               	movwf	fsr2l,c
  2358   001A62  6ADA               	clrf	fsr2h,c
  2359   001A64  0E2D               	movlw	45
  2360   001A66  6EDF               	movwf	indf2,c
  2361   001A68  EF44  F00D         	goto	l5630
  2362   001A6C                     l5626:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2365   001A6C  501F               	movf	vfpfcnvrt@c^0,w,c
  2366   001A6E  0F80               	addlw	low _dbuf
  2367   001A70  6ED9               	movwf	fsr2l,c
  2368   001A72  6ADA               	clrf	fsr2h,c
  2369   001A74  50DF               	movf	indf2,w,c
  2370   001A76  6E18               	movwf	??_vfpfcnvrt^0,c
  2371   001A78  5018               	movf	??_vfpfcnvrt^0,w,c
  2372   001A7A  6E0B               	movwf	fputc@c^0,c
  2373   001A7C  6A0C               	clrf	(fputc@c+1)^0,c
  2374   001A7E  C015  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  2375   001A82  EC8E  F011         	call	_fputc	;wreg free
  2376   001A86  2A1F               	incf	vfpfcnvrt@c^0,f,c
  2377   001A88                     l5630:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2380   001A88  0E20               	movlw	32
  2381   001A8A  181F               	xorwf	vfpfcnvrt@c^0,w,c
  2382   001A8C  A4D8               	btfss	status,2,c
  2383   001A8E  EF4B  F00D         	goto	u5391
  2384   001A92  EF4D  F00D         	goto	u5390
  2385   001A96                     u5391:
  2386   001A96  EF36  F00D         	goto	l5626
  2387   001A9A                     u5390:
  2388   001A9A  EF67  F00D         	goto	l1714
  2389   001A9E                     l5632:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2392   001A9E  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2393   001AA0  6ED9               	movwf	fsr2l,c
  2394   001AA2  6ADA               	clrf	fsr2h,c
  2395   001AA4  2ADF               	incf	indf2,f,c
  2396   001AA6  EF67  F00D         	goto	l1714
  2397   001AAA                     l5636:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2400   001AAA  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2401   001AAC  6ED9               	movwf	fsr2l,c
  2402   001AAE  6ADA               	clrf	fsr2h,c
  2403   001AB0  CFDF FFF6          	movff	indf2,tblptrl
  2404   001AB4                     	if	1	;There is more than 1 active tblptr byte
  2405   001AB4  0E10               	movlw	high __smallconst
  2406   001AB6  6EF7               	movwf	tblptrh,c
  2407   001AB8                     	endif
  2408   001AB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2409   001AB8  6AF8               	clrf	tblptru,c
  2410   001ABA                     	endif
  2411   001ABA                     	if	0	;tblptru may be non-zero
  2412   001ABA                     	endif
  2413   001ABA  0008               	tblrd		*
  2414   001ABC  50F5               	movf	tablat,w,c
  2415   001ABE  6E0B               	movwf	fputc@c^0,c
  2416   001AC0  6A0C               	clrf	(fputc@c+1)^0,c
  2417   001AC2  C015  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  2418   001AC6  EC8E  F011         	call	_fputc	;wreg free
  2419   001ACA  EF4F  F00D         	goto	l5632
  2420   001ACE                     l1714:
  2421   001ACE  0012               	return		;funcret
  2422   001AD0                     __end_of_vfpfcnvrt:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _fputc *****************
  2426 ;; Defined at:
  2427 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  c               2   10[COMRAM] int 
  2430 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  2431 ;;		 -> sprintf@f(12), 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   10[COMRAM] int 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:        8 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 5
  2450 ;; This function calls:
  2451 ;;		_putch
  2452 ;; This function is called by:
  2453 ;;		_vfpfcnvrt
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text11
  2458   00231C                     __ptext11:
  2459                           	callstack 0
  2460   00231C                     _fputc:
  2461                           	callstack 21
  2462   00231C  500D               	movf	fputc@fp^0,w,c
  2463   00231E  B4D8               	btfsc	status,2,c
  2464   002320  EF94  F011         	goto	u5251
  2465   002324  EF96  F011         	goto	u5250
  2466   002328                     u5251:
  2467   002328  EF9E  F011         	goto	l5578
  2468   00232C                     u5250:
  2469   00232C  500D               	movf	fputc@fp^0,w,c
  2470   00232E  A4D8               	btfss	status,2,c
  2471   002330  EF9C  F011         	goto	u5261
  2472   002334  EF9E  F011         	goto	u5260
  2473   002338                     u5261:
  2474   002338  EFA3  F011         	goto	l5580
  2475   00233C                     u5260:
  2476   00233C                     l5578:
  2477   00233C  500B               	movf	fputc@c^0,w,c
  2478   00233E  ECB6  F016         	call	_putch
  2479   002342  EFE2  F011         	goto	l1739
  2480   002346                     l5580:
  2481   002346  500D               	movf	fputc@fp^0,w,c
  2482   002348  6ED9               	movwf	fsr2l,c
  2483   00234A  6ADA               	clrf	fsr2h,c
  2484   00234C  0E0A               	movlw	10
  2485   00234E  26D9               	addwf	fsr2l,f,c
  2486   002350  50DE               	movf	postinc2,w,c
  2487   002352  10DE               	iorwf	postinc2,w,c
  2488   002354  B4D8               	btfsc	status,2,c
  2489   002356  EFAF  F011         	goto	u5271
  2490   00235A  EFB1  F011         	goto	u5270
  2491   00235E                     u5271:
  2492   00235E  EFCA  F011         	goto	l5584
  2493   002362                     u5270:
  2494   002362  500D               	movf	fputc@fp^0,w,c
  2495   002364  6ED9               	movwf	fsr2l,c
  2496   002366  6ADA               	clrf	fsr2h,c
  2497   002368  0E0A               	movlw	10
  2498   00236A  26D9               	addwf	fsr2l,f,c
  2499   00236C  500D               	movf	fputc@fp^0,w,c
  2500   00236E  6EE1               	movwf	fsr1l,c
  2501   002370  6AE2               	clrf	fsr1h,c
  2502   002372  0E03               	movlw	3
  2503   002374  26E1               	addwf	fsr1l,f,c
  2504   002376  50DE               	movf	postinc2,w,c
  2505   002378  5CE6               	subwf	postinc1,w,c
  2506   00237A  50E6               	movf	postinc1,w,c
  2507   00237C  0A80               	xorlw	128
  2508   00237E  6E12               	movwf	(??_fputc+4)^0,c
  2509   002380  50DE               	movf	postinc2,w,c
  2510   002382  0A80               	xorlw	128
  2511   002384  5812               	subwfb	(??_fputc+4)^0,w,c
  2512   002386  B0D8               	btfsc	status,0,c
  2513   002388  EFC8  F011         	goto	u5281
  2514   00238C  EFCA  F011         	goto	u5280
  2515   002390                     u5281:
  2516   002390  EFE2  F011         	goto	l1739
  2517   002394                     u5280:
  2518   002394                     l5584:
  2519   002394  500D               	movf	fputc@fp^0,w,c
  2520   002396  6ED9               	movwf	fsr2l,c
  2521   002398  6ADA               	clrf	fsr2h,c
  2522   00239A  0E03               	movlw	3
  2523   00239C  26D9               	addwf	fsr2l,f,c
  2524   00239E  50DF               	movf	indf2,w,c
  2525   0023A0  6E0E               	movwf	??_fputc^0,c
  2526   0023A2  500D               	movf	fputc@fp^0,w,c
  2527   0023A4  6ED9               	movwf	fsr2l,c
  2528   0023A6  6ADA               	clrf	fsr2h,c
  2529   0023A8  50DF               	movf	indf2,w,c
  2530   0023AA  240E               	addwf	??_fputc^0,w,c
  2531   0023AC  6ED9               	movwf	fsr2l,c
  2532   0023AE  6ADA               	clrf	fsr2h,c
  2533   0023B0  C00B  FFDF         	movff	fputc@c,indf2
  2534   0023B4  500D               	movf	fputc@fp^0,w,c
  2535   0023B6  6ED9               	movwf	fsr2l,c
  2536   0023B8  6ADA               	clrf	fsr2h,c
  2537   0023BA  0E03               	movlw	3
  2538   0023BC  26D9               	addwf	fsr2l,f,c
  2539   0023BE  2ADE               	incf	postinc2,f,c
  2540   0023C0  0E00               	movlw	0
  2541   0023C2  22DD               	addwfc	postdec2,f,c
  2542   0023C4                     l1739:
  2543   0023C4  0012               	return		;funcret
  2544   0023C6                     __end_of_fputc:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _putch *****************
  2548 ;; Defined at:
  2549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  c               1    wreg     unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  c               1    0[COMRAM] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 4
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_fputc
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text12
  2578   002D6C                     __ptext12:
  2579                           	callstack 0
  2580   002D6C                     _putch:
  2581                           	callstack 21
  2582   002D6C  0012               	return		;funcret
  2583   002D6E                     __end_of_putch:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _abs *****************
  2587 ;; Defined at:
  2588 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  a               2   16[COMRAM] int 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2   16[COMRAM] int 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        4 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 4
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_vfpfcnvrt
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text13
  2617   002AEC                     __ptext13:
  2618                           	callstack 0
  2619   002AEC                     _abs:
  2620                           	callstack 22
  2621   002AEC  BE12               	btfsc	(abs@a+1)^0,7,c
  2622   002AEE  EF7B  F015         	goto	u5291
  2623   002AF2  EF7D  F015         	goto	u5290
  2624   002AF6                     u5291:
  2625   002AF6  EF83  F015         	goto	l1724
  2626   002AFA                     u5290:
  2627   002AFA  C011  F011         	movff	abs@a,?_abs
  2628   002AFE  C012  F012         	movff	abs@a+1,?_abs+1
  2629   002B02  EF8F  F015         	goto	l1727
  2630   002B06                     l1724:
  2631   002B06  C011  F013         	movff	abs@a,??_abs
  2632   002B0A  C012  F014         	movff	abs@a+1,??_abs+1
  2633   002B0E  1E13               	comf	??_abs^0,f,c
  2634   002B10  1E14               	comf	(??_abs+1)^0,f,c
  2635   002B12  4A13               	infsnz	??_abs^0,f,c
  2636   002B14  2A14               	incf	(??_abs+1)^0,f,c
  2637   002B16  C013  F011         	movff	??_abs,?_abs
  2638   002B1A  C014  F012         	movff	??_abs+1,?_abs+1
  2639   002B1E                     l1727:
  2640   002B1E  0012               	return		;funcret
  2641   002B20                     __end_of_abs:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function ___awmod *****************
  2645 ;; Defined at:
  2646 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  dividend        2   10[COMRAM] int 
  2649 ;;  divisor         2   12[COMRAM] int 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  sign            1   15[COMRAM] unsigned char 
  2652 ;;  counter         1   14[COMRAM] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2   10[COMRAM] int 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        6 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 4
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_vfpfcnvrt
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text14
  2677   00226C                     __ptext14:
  2678                           	callstack 0
  2679   00226C                     ___awmod:
  2680                           	callstack 22
  2681   00226C  0E00               	movlw	0
  2682   00226E  6E10               	movwf	___awmod@sign^0,c
  2683   002270  BE0C               	btfsc	(___awmod@dividend+1)^0,7,c
  2684   002272  EF3F  F011         	goto	u5190
  2685   002276  EF3D  F011         	goto	u5191
  2686   00227A                     u5191:
  2687   00227A  EF45  F011         	goto	l5546
  2688   00227E                     u5190:
  2689   00227E  6C0B               	negf	___awmod@dividend^0,c
  2690   002280  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  2691   002282  B0D8               	btfsc	status,0,c
  2692   002284  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  2693   002286  0E01               	movlw	1
  2694   002288  6E10               	movwf	___awmod@sign^0,c
  2695   00228A                     l5546:
  2696   00228A  BE0E               	btfsc	(___awmod@divisor+1)^0,7,c
  2697   00228C  EF4C  F011         	goto	u5200
  2698   002290  EF4A  F011         	goto	u5201
  2699   002294                     u5201:
  2700   002294  EF50  F011         	goto	l5550
  2701   002298                     u5200:
  2702   002298  6C0D               	negf	___awmod@divisor^0,c
  2703   00229A  1E0E               	comf	(___awmod@divisor+1)^0,f,c
  2704   00229C  B0D8               	btfsc	status,0,c
  2705   00229E  2A0E               	incf	(___awmod@divisor+1)^0,f,c
  2706   0022A0                     l5550:
  2707   0022A0  500D               	movf	___awmod@divisor^0,w,c
  2708   0022A2  100E               	iorwf	(___awmod@divisor+1)^0,w,c
  2709   0022A4  B4D8               	btfsc	status,2,c
  2710   0022A6  EF57  F011         	goto	u5211
  2711   0022AA  EF59  F011         	goto	u5210
  2712   0022AE                     u5211:
  2713   0022AE  EF7D  F011         	goto	l5566
  2714   0022B2                     u5210:
  2715   0022B2  0E01               	movlw	1
  2716   0022B4  6E0F               	movwf	___awmod@counter^0,c
  2717   0022B6  EF61  F011         	goto	l5556
  2718   0022BA                     l5554:
  2719   0022BA  90D8               	bcf	status,0,c
  2720   0022BC  360D               	rlcf	___awmod@divisor^0,f,c
  2721   0022BE  360E               	rlcf	(___awmod@divisor+1)^0,f,c
  2722   0022C0  2A0F               	incf	___awmod@counter^0,f,c
  2723   0022C2                     l5556:
  2724   0022C2  AE0E               	btfss	(___awmod@divisor+1)^0,7,c
  2725   0022C4  EF66  F011         	goto	u5221
  2726   0022C8  EF68  F011         	goto	u5220
  2727   0022CC                     u5221:
  2728   0022CC  EF5D  F011         	goto	l5554
  2729   0022D0                     u5220:
  2730   0022D0                     l5558:
  2731   0022D0  500D               	movf	___awmod@divisor^0,w,c
  2732   0022D2  5C0B               	subwf	___awmod@dividend^0,w,c
  2733   0022D4  500E               	movf	(___awmod@divisor+1)^0,w,c
  2734   0022D6  580C               	subwfb	(___awmod@dividend+1)^0,w,c
  2735   0022D8  A0D8               	btfss	status,0,c
  2736   0022DA  EF71  F011         	goto	u5231
  2737   0022DE  EF73  F011         	goto	u5230
  2738   0022E2                     u5231:
  2739   0022E2  EF77  F011         	goto	l5562
  2740   0022E6                     u5230:
  2741   0022E6  500D               	movf	___awmod@divisor^0,w,c
  2742   0022E8  5E0B               	subwf	___awmod@dividend^0,f,c
  2743   0022EA  500E               	movf	(___awmod@divisor+1)^0,w,c
  2744   0022EC  5A0C               	subwfb	(___awmod@dividend+1)^0,f,c
  2745   0022EE                     l5562:
  2746   0022EE  90D8               	bcf	status,0,c
  2747   0022F0  320E               	rrcf	(___awmod@divisor+1)^0,f,c
  2748   0022F2  320D               	rrcf	___awmod@divisor^0,f,c
  2749   0022F4  2E0F               	decfsz	___awmod@counter^0,f,c
  2750   0022F6  EF68  F011         	goto	l5558
  2751   0022FA                     l5566:
  2752   0022FA  5010               	movf	___awmod@sign^0,w,c
  2753   0022FC  B4D8               	btfsc	status,2,c
  2754   0022FE  EF83  F011         	goto	u5241
  2755   002302  EF85  F011         	goto	u5240
  2756   002306                     u5241:
  2757   002306  EF89  F011         	goto	l5570
  2758   00230A                     u5240:
  2759   00230A  6C0B               	negf	___awmod@dividend^0,c
  2760   00230C  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  2761   00230E  B0D8               	btfsc	status,0,c
  2762   002310  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  2763   002312                     l5570:
  2764   002312  C00B  F00B         	movff	___awmod@dividend,?___awmod
  2765   002316  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
  2766   00231A  0012               	return		;funcret
  2767   00231C                     __end_of___awmod:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function ___awdiv *****************
  2771 ;; Defined at:
  2772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  dividend        2   10[COMRAM] int 
  2775 ;;  divisor         2   12[COMRAM] int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  quotient        2   16[COMRAM] int 
  2778 ;;  sign            1   15[COMRAM] unsigned char 
  2779 ;;  counter         1   14[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  2   10[COMRAM] int 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;Total ram usage:        8 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 4
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_vfpfcnvrt
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text15
  2804   0021A8                     __ptext15:
  2805                           	callstack 0
  2806   0021A8                     ___awdiv:
  2807                           	callstack 22
  2808   0021A8  0E00               	movlw	0
  2809   0021AA  6E10               	movwf	___awdiv@sign^0,c
  2810   0021AC  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
  2811   0021AE  EFDD  F010         	goto	u5130
  2812   0021B2  EFDB  F010         	goto	u5131
  2813   0021B6                     u5131:
  2814   0021B6  EFE3  F010         	goto	l5502
  2815   0021BA                     u5130:
  2816   0021BA  6C0D               	negf	___awdiv@divisor^0,c
  2817   0021BC  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
  2818   0021BE  B0D8               	btfsc	status,0,c
  2819   0021C0  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
  2820   0021C2  0E01               	movlw	1
  2821   0021C4  6E10               	movwf	___awdiv@sign^0,c
  2822   0021C6                     l5502:
  2823   0021C6  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
  2824   0021C8  EFEA  F010         	goto	u5140
  2825   0021CC  EFE8  F010         	goto	u5141
  2826   0021D0                     u5141:
  2827   0021D0  EFF0  F010         	goto	l5508
  2828   0021D4                     u5140:
  2829   0021D4  6C0B               	negf	___awdiv@dividend^0,c
  2830   0021D6  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
  2831   0021D8  B0D8               	btfsc	status,0,c
  2832   0021DA  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
  2833   0021DC  0E01               	movlw	1
  2834   0021DE  1A10               	xorwf	___awdiv@sign^0,f,c
  2835   0021E0                     l5508:
  2836   0021E0  0E00               	movlw	0
  2837   0021E2  6E12               	movwf	(___awdiv@quotient+1)^0,c
  2838   0021E4  0E00               	movlw	0
  2839   0021E6  6E11               	movwf	___awdiv@quotient^0,c
  2840   0021E8  500D               	movf	___awdiv@divisor^0,w,c
  2841   0021EA  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
  2842   0021EC  B4D8               	btfsc	status,2,c
  2843   0021EE  EFFB  F010         	goto	u5151
  2844   0021F2  EFFD  F010         	goto	u5150
  2845   0021F6                     u5151:
  2846   0021F6  EF25  F011         	goto	l5530
  2847   0021FA                     u5150:
  2848   0021FA  0E01               	movlw	1
  2849   0021FC  6E0F               	movwf	___awdiv@counter^0,c
  2850   0021FE  EF05  F011         	goto	l5516
  2851   002202                     l5514:
  2852   002202  90D8               	bcf	status,0,c
  2853   002204  360D               	rlcf	___awdiv@divisor^0,f,c
  2854   002206  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
  2855   002208  2A0F               	incf	___awdiv@counter^0,f,c
  2856   00220A                     l5516:
  2857   00220A  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
  2858   00220C  EF0A  F011         	goto	u5161
  2859   002210  EF0C  F011         	goto	u5160
  2860   002214                     u5161:
  2861   002214  EF01  F011         	goto	l5514
  2862   002218                     u5160:
  2863   002218                     l5518:
  2864   002218  90D8               	bcf	status,0,c
  2865   00221A  3611               	rlcf	___awdiv@quotient^0,f,c
  2866   00221C  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
  2867   00221E  500D               	movf	___awdiv@divisor^0,w,c
  2868   002220  5C0B               	subwf	___awdiv@dividend^0,w,c
  2869   002222  500E               	movf	(___awdiv@divisor+1)^0,w,c
  2870   002224  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
  2871   002226  A0D8               	btfss	status,0,c
  2872   002228  EF18  F011         	goto	u5171
  2873   00222C  EF1A  F011         	goto	u5170
  2874   002230                     u5171:
  2875   002230  EF1F  F011         	goto	l5526
  2876   002234                     u5170:
  2877   002234  500D               	movf	___awdiv@divisor^0,w,c
  2878   002236  5E0B               	subwf	___awdiv@dividend^0,f,c
  2879   002238  500E               	movf	(___awdiv@divisor+1)^0,w,c
  2880   00223A  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
  2881   00223C  8011               	bsf	___awdiv@quotient^0,0,c
  2882   00223E                     l5526:
  2883   00223E  90D8               	bcf	status,0,c
  2884   002240  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
  2885   002242  320D               	rrcf	___awdiv@divisor^0,f,c
  2886   002244  2E0F               	decfsz	___awdiv@counter^0,f,c
  2887   002246  EF0C  F011         	goto	l5518
  2888   00224A                     l5530:
  2889   00224A  5010               	movf	___awdiv@sign^0,w,c
  2890   00224C  B4D8               	btfsc	status,2,c
  2891   00224E  EF2B  F011         	goto	u5181
  2892   002252  EF2D  F011         	goto	u5180
  2893   002256                     u5181:
  2894   002256  EF31  F011         	goto	l5534
  2895   00225A                     u5180:
  2896   00225A  6C11               	negf	___awdiv@quotient^0,c
  2897   00225C  1E12               	comf	(___awdiv@quotient+1)^0,f,c
  2898   00225E  B0D8               	btfsc	status,0,c
  2899   002260  2A12               	incf	(___awdiv@quotient+1)^0,f,c
  2900   002262                     l5534:
  2901   002262  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  2902   002266  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  2903   00226A  0012               	return		;funcret
  2904   00226C                     __end_of___awdiv:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _memset *****************
  2908 ;; Defined at:
  2909 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  dest            1   10[COMRAM] PTR void 
  2912 ;;		 -> LM35_res_2_txt(6), LM35_res_1_txt(6), 
  2913 ;;  c               2   11[COMRAM] int 
  2914 ;;  n               2   13[COMRAM] unsigned int 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  p               1   15[COMRAM] PTR unsigned char 
  2917 ;;		 -> LM35_res_2_txt(6), LM35_res_1_txt(6), 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      PTR void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:        6 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 4
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_convert_uint16_to_string
  2938 ;;		_convert_uint8_to_string
  2939 ;;		_convert_uint32_to_string
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text16
  2944   002BB8                     __ptext16:
  2945                           	callstack 0
  2946   002BB8                     _memset:
  2947                           	callstack 25
  2948   002BB8  C00B  F010         	movff	memset@dest,memset@p
  2949   002BBC  EFE6  F015         	goto	l5658
  2950   002BC0                     l5654:
  2951   002BC0  5010               	movf	memset@p^0,w,c
  2952   002BC2  6ED9               	movwf	fsr2l,c
  2953   002BC4  6ADA               	clrf	fsr2h,c
  2954   002BC6  C00C  FFDF         	movff	memset@c,indf2
  2955   002BCA  2A10               	incf	memset@p^0,f,c
  2956   002BCC                     l5658:
  2957   002BCC  060E               	decf	memset@n^0,f,c
  2958   002BCE  A0D8               	btfss	status,0,c
  2959   002BD0  060F               	decf	(memset@n+1)^0,f,c
  2960   002BD2  280E               	incf	memset@n^0,w,c
  2961   002BD4  E106               	bnz	u5411
  2962   002BD6  280F               	incf	(memset@n+1)^0,w,c
  2963   002BD8  A4D8               	btfss	status,2,c
  2964   002BDA  EFF1  F015         	goto	u5411
  2965   002BDE  EFF3  F015         	goto	u5410
  2966   002BE2                     u5411:
  2967   002BE2  EFE0  F015         	goto	l5654
  2968   002BE6                     u5410:
  2969   002BE6  0012               	return		;funcret
  2970   002BE8                     __end_of_memset:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _application_initialize *****************
  2974 ;; Defined at:
  2975 ;;		line 134 in file "application.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 8
  2996 ;; This function calls:
  2997 ;;		_ADC_Init
  2998 ;;		_dc_motor_intialize
  2999 ;;		_ecu_layer_intialize
  3000 ;;		_lcd_4bit_intialize
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text17
  3007   002BE8                     __ptext17:
  3008                           	callstack 0
  3009   002BE8                     _application_initialize:
  3010                           	callstack 22
  3011   002BE8                     
  3012                           ;application.c: 135:     ret = (Std_ReturnType)0x01;
  3013   002BE8  0E01               	movlw	1
  3014   002BEA  0100               	movlb	0	; () banked
  3015   002BEC  6FED               	movwf	_ret& (0+255),b
  3016   002BEE                     
  3017                           ; BSR set to: 0
  3018                           ;application.c: 136:     ecu_layer_intialize();
  3019   002BEE  ECB7  F016         	call	_ecu_layer_intialize	;wreg free
  3020   002BF2                     
  3021                           ;application.c: 138:     ADC_Init(&adc_1);
  3022   002BF2  0ED5               	movlw	low _adc_1
  3023   002BF4  6E0E               	movwf	ADC_Init@_adc^0,c
  3024   002BF6  EC37  F012         	call	_ADC_Init	;wreg free
  3025   002BFA                     
  3026                           ;application.c: 139:     lcd_4bit_intialize(&lcd1);
  3027   002BFA  0EDC               	movlw	low _lcd1
  3028   002BFC  6E1C               	movwf	lcd_4bit_intialize@lcd^0,c
  3029   002BFE  EC69  F010         	call	_lcd_4bit_intialize	;wreg free
  3030   002C02                     
  3031                           ;application.c: 140:     dc_motor_intialize(&motor1);
  3032   002C02  0E73               	movlw	low _motor1
  3033   002C04  6E16               	movwf	dc_motor_intialize@_dc_motor^0,c
  3034   002C06  EC0A  F016         	call	_dc_motor_intialize	;wreg free
  3035   002C0A                     
  3036                           ;application.c: 141:     dc_motor_intialize(&motor2);
  3037   002C0A  0E71               	movlw	low _motor2
  3038   002C0C  6E16               	movwf	dc_motor_intialize@_dc_motor^0,c
  3039   002C0E  EC0A  F016         	call	_dc_motor_intialize	;wreg free
  3040   002C12  0012               	return		;funcret
  3041   002C14                     __end_of_application_initialize:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _lcd_4bit_intialize *****************
  3045 ;; Defined at:
  3046 ;;		line 24 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  lcd             1   27[COMRAM] PTR const struct .
  3049 ;;		 -> lcd1(6), 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  l_pin_counte    1   29[COMRAM] unsigned char 
  3052 ;;  ret             1    0        unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      unsigned char 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3062 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;Total ram usage:        3 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 7
  3069 ;; This function calls:
  3070 ;;		_gpio_pin_initialize
  3071 ;;		_lcd_4bit_send_command
  3072 ;; This function is called by:
  3073 ;;		_application_initialize
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text18
  3078   0020D2                     __ptext18:
  3079                           	callstack 0
  3080   0020D2                     _lcd_4bit_intialize:
  3081                           	callstack 22
  3082   0020D2                     
  3083                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     if (((void*)0) == lcd) {
  3084   0020D2  501C               	movf	lcd_4bit_intialize@lcd^0,w,c
  3085   0020D4  A4D8               	btfss	status,2,c
  3086   0020D6  EF6F  F010         	goto	u3321
  3087   0020DA  EF71  F010         	goto	u3320
  3088   0020DE                     u3321:
  3089   0020DE  EF73  F010         	goto	l4146
  3090   0020E2                     u3320:
  3091   0020E2                     
  3092                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 28:     } else {
  3093   0020E2  EFD3  F010         	goto	l71
  3094   0020E6                     l4146:
  3095   0020E6  C01C  F013         	movff	lcd_4bit_intialize@lcd,gpio_pin_initialize@_pin_config
  3096   0020EA  EC73  F013         	call	_gpio_pin_initialize	;wreg free
  3097   0020EE  281C               	incf	lcd_4bit_intialize@lcd^0,w,c
  3098   0020F0  6E13               	movwf	gpio_pin_initialize@_pin_config^0,c
  3099   0020F2  EC73  F013         	call	_gpio_pin_initialize	;wreg free
  3100                           
  3101                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:         for (l_pin_counter = 0; l_pin_counter < 4;
      +                           ++l_pin_counter) {
  3102   0020F6  0E00               	movlw	0
  3103   0020F8  6E1E               	movwf	lcd_4bit_intialize@l_pin_counter^0,c
  3104   0020FA                     l4156:
  3105   0020FA  501C               	movf	lcd_4bit_intialize@lcd^0,w,c
  3106   0020FC  241E               	addwf	lcd_4bit_intialize@l_pin_counter^0,w,c
  3107   0020FE  0F02               	addlw	2
  3108   002100  6E13               	movwf	gpio_pin_initialize@_pin_config^0,c
  3109   002102  EC73  F013         	call	_gpio_pin_initialize	;wreg free
  3110   002106                     
  3111                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         }
  3112   002106  2A1E               	incf	lcd_4bit_intialize@l_pin_counter^0,f,c
  3113   002108  0E03               	movlw	3
  3114   00210A  641E               	cpfsgt	lcd_4bit_intialize@l_pin_counter^0,c
  3115   00210C  EF8A  F010         	goto	u3331
  3116   002110  EF8C  F010         	goto	u3330
  3117   002114                     u3331:
  3118   002114  EF7D  F010         	goto	l4156
  3119   002118                     u3330:
  3120   002118                     
  3121                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  3122   002118  0E34               	movlw	52
  3123   00211A  6E1D               	movwf	??_lcd_4bit_intialize^0,c
  3124   00211C  0EF2               	movlw	242
  3125   00211E                     u5627:
  3126   00211E  2EE8               	decfsz	wreg,f,c
  3127   002120  D7FE               	bra	u5627
  3128   002122  2E1D               	decfsz	??_lcd_4bit_intialize^0,f,c
  3129   002124  D7FC               	bra	u5627
  3130   002126  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3131   00212A  0E38               	movlw	56
  3132   00212C  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3133   00212E  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3134   002132                     
  3135                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  3136   002132  0E0D               	movlw	13
  3137   002134  6E1D               	movwf	??_lcd_4bit_intialize^0,c
  3138   002136  0EFC               	movlw	252
  3139   002138                     u5637:
  3140   002138  2EE8               	decfsz	wreg,f,c
  3141   00213A  D7FE               	bra	u5637
  3142   00213C  2E1D               	decfsz	??_lcd_4bit_intialize^0,f,c
  3143   00213E  D7FC               	bra	u5637
  3144   002140  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3145   002144  0E38               	movlw	56
  3146   002146  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3147   002148  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3148   00214C                     
  3149                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 41:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  3150   00214C  0E64               	movlw	100
  3151   00214E                     u5647:
  3152   00214E  2EE8               	decfsz	wreg,f,c
  3153   002150  D7FE               	bra	u5647
  3154   002152  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3155   002156  0E38               	movlw	56
  3156   002158  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3157   00215A  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3158   00215E  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3159   002162  0E01               	movlw	1
  3160   002164  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3161   002166  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3162   00216A  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3163   00216E  0E02               	movlw	2
  3164   002170  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3165   002172  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3166   002176  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3167   00217A  0E06               	movlw	6
  3168   00217C  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3169   00217E  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3170   002182  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3171   002186  0E0C               	movlw	12
  3172   002188  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3173   00218A  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3174   00218E  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3175   002192  0E28               	movlw	40
  3176   002194  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3177   002196  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3178   00219A  C01C  F019         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3179   00219E  0E80               	movlw	128
  3180   0021A0  6E1A               	movwf	lcd_4bit_send_command@command^0,c
  3181   0021A2  ECB0  F014         	call	_lcd_4bit_send_command	;wreg free
  3182   0021A6                     l71:
  3183   0021A6  0012               	return		;funcret
  3184   0021A8                     __end_of_lcd_4bit_intialize:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _lcd_4bit_send_command *****************
  3188 ;; Defined at:
  3189 ;;		line 67 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  lcd             1   24[COMRAM] PTR const struct .
  3192 ;;		 -> lcd1(6), 
  3193 ;;  command         1   25[COMRAM] unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  ret             1   26[COMRAM] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      unsigned char 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;Total ram usage:        3 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 6
  3212 ;; This function calls:
  3213 ;;		_gpio_pin_write_logic
  3214 ;;		_lcd_send_4bits
  3215 ;;		_lcd_send_enable_signal
  3216 ;; This function is called by:
  3217 ;;		_lcd_4bit_intialize
  3218 ;;		_lcd_4bit_set_cursor
  3219 ;;		_lcd_4bit_send_custom_char
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text19
  3224   002960                     __ptext19:
  3225                           	callstack 0
  3226   002960                     _lcd_4bit_send_command:
  3227                           	callstack 21
  3228   002960                     
  3229                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:     if (((void*)0) == lcd) {
  3230   002960  5019               	movf	lcd_4bit_send_command@lcd^0,w,c
  3231   002962  A4D8               	btfss	status,2,c
  3232   002964  EFB6  F014         	goto	u3091
  3233   002968  EFB8  F014         	goto	u3090
  3234   00296C                     u3091:
  3235   00296C  EFBC  F014         	goto	l3968
  3236   002970                     u3090:
  3237   002970                     
  3238                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = (Std_ReturnType)0x01;
  3239   002970  0E01               	movlw	1
  3240   002972  6E1B               	movwf	lcd_4bit_send_command@ret^0,c
  3241                           
  3242                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:     } else {
  3243   002974  EFDC  F014         	goto	l3970
  3244   002978                     l3968:
  3245                           
  3246                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOGIC_LOW);
  3247   002978  C019  F00B         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  3248   00297C  0E00               	movlw	0
  3249   00297E  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  3250   002980  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  3251   002984  6E1B               	movwf	lcd_4bit_send_command@ret^0,c
  3252                           
  3253                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:         ret = lcd_send_4bits(lcd, command >> 4);
  3254   002986  C019  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3255   00298A  381A               	swapf	lcd_4bit_send_command@command^0,w,c
  3256   00298C  0B0F               	andlw	15
  3257   00298E  6E14               	movwf	lcd_send_4bits@data_command^0,c
  3258   002990  EC51  F014         	call	_lcd_send_4bits	;wreg free
  3259   002994  6E1B               	movwf	lcd_4bit_send_command@ret^0,c
  3260                           
  3261                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 77:         ret = lcd_send_enable_signal(lcd);
  3262   002996  C019  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_enable_signal@lcd
  3263   00299A  EC21  F015         	call	_lcd_send_enable_signal	;wreg free
  3264   00299E  6E1B               	movwf	lcd_4bit_send_command@ret^0,c
  3265                           
  3266                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 79:         ret = lcd_send_4bits(lcd, command);
  3267   0029A0  C019  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3268   0029A4  C01A  F014         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  3269   0029A8  EC51  F014         	call	_lcd_send_4bits	;wreg free
  3270   0029AC  6E1B               	movwf	lcd_4bit_send_command@ret^0,c
  3271                           
  3272                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 80:         ret = lcd_send_enable_signal(lcd);
  3273   0029AE  C019  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_enable_signal@lcd
  3274   0029B2  EC21  F015         	call	_lcd_send_enable_signal	;wreg free
  3275   0029B6  6E1B               	movwf	lcd_4bit_send_command@ret^0,c
  3276   0029B8                     l3970:
  3277                           
  3278                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 84:     return ret;
  3279   0029B8  501B               	movf	lcd_4bit_send_command@ret^0,w,c
  3280   0029BA  0012               	return		;funcret
  3281   0029BC                     __end_of_lcd_4bit_send_command:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _lcd_send_enable_signal *****************
  3285 ;; Defined at:
  3286 ;;		line 616 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  lcd             1   18[COMRAM] PTR const struct .
  3289 ;;		 -> lcd1(6), 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  ret             1   19[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      unsigned char 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3301 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 5
  3308 ;; This function calls:
  3309 ;;		_gpio_pin_write_logic
  3310 ;; This function is called by:
  3311 ;;		_lcd_4bit_send_command
  3312 ;;		_lcd_4bit_send_char_data
  3313 ;;		_lcd_8bit_send_command
  3314 ;;		_lcd_8bit_send_char_data
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text20
  3319   002A42                     __ptext20:
  3320                           	callstack 0
  3321   002A42                     _lcd_send_enable_signal:
  3322                           	callstack 21
  3323   002A42                     
  3324                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 618:     if (((void*)0) == lcd) {
  3325   002A42  5013               	movf	lcd_send_enable_signal@lcd^0,w,c
  3326   002A44  A4D8               	btfss	status,2,c
  3327   002A46  EF27  F015         	goto	u2841
  3328   002A4A  EF29  F015         	goto	u2840
  3329   002A4E                     u2841:
  3330   002A4E  EF2D  F015         	goto	l3832
  3331   002A52                     u2840:
  3332   002A52                     
  3333                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 619:         ret = (Std_ReturnType)0x01;
  3334   002A52  0E01               	movlw	1
  3335   002A54  6E14               	movwf	lcd_send_enable_signal@ret^0,c
  3336                           
  3337                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 620:     } else {
  3338   002A56  EF3E  F015         	goto	l3838
  3339   002A5A                     l3832:
  3340   002A5A  2813               	incf	lcd_send_enable_signal@lcd^0,w,c
  3341   002A5C  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3342   002A5E  0E01               	movlw	1
  3343   002A60  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  3344   002A62  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  3345   002A66                     
  3346                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 623:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0000.0)));
  3347   002A66  0E03               	movlw	3
  3348   002A68                     u5657:
  3349   002A68  2EE8               	decfsz	wreg,f,c
  3350   002A6A  D7FE               	bra	u5657
  3351   002A6C  0000               	nop	
  3352   002A6E                     
  3353                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 624:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOGIC_LOW);
  3354   002A6E  2813               	incf	lcd_send_enable_signal@lcd^0,w,c
  3355   002A70  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3356   002A72  0E00               	movlw	0
  3357   002A74  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  3358   002A76  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  3359   002A7A  6E14               	movwf	lcd_send_enable_signal@ret^0,c
  3360   002A7C                     l3838:
  3361                           
  3362                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 627:     return ret;
  3363   002A7C  5014               	movf	lcd_send_enable_signal@ret^0,w,c
  3364   002A7E  0012               	return		;funcret
  3365   002A80                     __end_of_lcd_send_enable_signal:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _lcd_send_4bits *****************
  3369 ;; Defined at:
  3370 ;;		line 507 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  lcd             1   18[COMRAM] PTR const struct .
  3373 ;;		 -> lcd1(6), 
  3374 ;;  data_command    1   19[COMRAM] unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  l_pin_counte    1   23[COMRAM] unsigned char 
  3377 ;;  ret             1   22[COMRAM] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      unsigned char 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;Total ram usage:        6 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 5
  3394 ;; This function calls:
  3395 ;;		_gpio_pin_write_logic
  3396 ;; This function is called by:
  3397 ;;		_lcd_4bit_send_command
  3398 ;;		_lcd_4bit_send_char_data
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text21
  3403   0028A2                     __ptext21:
  3404                           	callstack 0
  3405   0028A2                     _lcd_send_4bits:
  3406                           	callstack 21
  3407   0028A2                     
  3408                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 509:     if (((void*)0) == lcd) {
  3409   0028A2  5013               	movf	lcd_send_4bits@lcd^0,w,c
  3410   0028A4  A4D8               	btfss	status,2,c
  3411   0028A6  EF57  F014         	goto	u2811
  3412   0028AA  EF59  F014         	goto	u2810
  3413   0028AE                     u2811:
  3414   0028AE  EF5D  F014         	goto	l3812
  3415   0028B2                     u2810:
  3416   0028B2                     
  3417                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 510:         ret = (Std_ReturnType)0x01;
  3418   0028B2  0E01               	movlw	1
  3419   0028B4  6E17               	movwf	lcd_send_4bits@ret^0,c
  3420                           
  3421                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 511:     } else {
  3422   0028B6  EF80  F014         	goto	l3824
  3423   0028BA                     l3812:
  3424                           
  3425                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 512:         uint8 l_pin_counter = 0;
  3426   0028BA  0E00               	movlw	0
  3427   0028BC  6E18               	movwf	lcd_send_4bits@l_pin_counter^0,c
  3428                           
  3429                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 514:         for (l_pin_counter = 0; l_pin_counter < 4
      +                          ; ++l_pin_counter) {
  3430   0028BE  0E00               	movlw	0
  3431   0028C0  6E18               	movwf	lcd_send_4bits@l_pin_counter^0,c
  3432   0028C2                     l3818:
  3433                           
  3434                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 515:             ret = gpio_pin_write_logic(&(lcd->lcd
      +                          _data[l_pin_counter]), ((data_command >> l_pin_counter) & (uint8)0x01));
  3435   0028C2  5013               	movf	lcd_send_4bits@lcd^0,w,c
  3436   0028C4  2418               	addwf	lcd_send_4bits@l_pin_counter^0,w,c
  3437   0028C6  0F02               	addlw	2
  3438   0028C8  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3439   0028CA  C018  F015         	movff	lcd_send_4bits@l_pin_counter,??_lcd_send_4bits
  3440   0028CE  C014  F016         	movff	lcd_send_4bits@data_command,??_lcd_send_4bits+1
  3441   0028D2  2A15               	incf	??_lcd_send_4bits^0,f,c
  3442   0028D4  EF6E  F014         	goto	u2824
  3443   0028D8                     u2825:
  3444   0028D8  90D8               	bcf	status,0,c
  3445   0028DA  3216               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3446   0028DC                     u2824:
  3447   0028DC  2E15               	decfsz	??_lcd_send_4bits^0,f,c
  3448   0028DE  EF6C  F014         	goto	u2825
  3449   0028E2  5016               	movf	(??_lcd_send_4bits+1)^0,w,c
  3450   0028E4  0B01               	andlw	1
  3451   0028E6  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  3452   0028E8  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  3453   0028EC  6E17               	movwf	lcd_send_4bits@ret^0,c
  3454   0028EE                     
  3455                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 516:         }
  3456   0028EE  2A18               	incf	lcd_send_4bits@l_pin_counter^0,f,c
  3457   0028F0  0E03               	movlw	3
  3458   0028F2  6418               	cpfsgt	lcd_send_4bits@l_pin_counter^0,c
  3459   0028F4  EF7E  F014         	goto	u2831
  3460   0028F8  EF80  F014         	goto	u2830
  3461   0028FC                     u2831:
  3462   0028FC  EF61  F014         	goto	l3818
  3463   002900                     u2830:
  3464   002900                     l3824:
  3465                           
  3466                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 519:     return ret;
  3467   002900  5017               	movf	lcd_send_4bits@ret^0,w,c
  3468   002902  0012               	return		;funcret
  3469   002904                     __end_of_lcd_send_4bits:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function _ecu_layer_intialize *****************
  3473 ;; Defined at:
  3474 ;;		line 18 in file "ECU_Layer/ecu_layer_init.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  ret             1    0        unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 4
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_application_initialize
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text22
  3503   002D6E                     __ptext22:
  3504                           	callstack 0
  3505   002D6E                     _ecu_layer_intialize:
  3506                           	callstack 25
  3507   002D6E  0012               	return		;funcret
  3508   002D70                     __end_of_ecu_layer_intialize:
  3509                           	callstack 0
  3510                           
  3511 ;; *************** function _dc_motor_intialize *****************
  3512 ;; Defined at:
  3513 ;;		line 11 in file "ECU_Layer/dc_motor/ecu_dc_motor.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  _dc_motor       1   21[COMRAM] PTR const struct .
  3516 ;;		 -> motor2(2), motor1(2), 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  ret             1   22[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 6
  3535 ;; This function calls:
  3536 ;;		_gpio_pin_initialize
  3537 ;; This function is called by:
  3538 ;;		_application_initialize
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text23
  3543   002C14                     __ptext23:
  3544                           	callstack 0
  3545   002C14                     _dc_motor_intialize:
  3546                           	callstack 23
  3547   002C14                     
  3548                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 13:     if (((void*)0) == _dc_motor) {
  3549   002C14  5016               	movf	dc_motor_intialize@_dc_motor^0,w,c
  3550   002C16  A4D8               	btfss	status,2,c
  3551   002C18  EF10  F016         	goto	u3431
  3552   002C1C  EF12  F016         	goto	u3430
  3553   002C20                     u3431:
  3554   002C20  EF14  F016         	goto	l4260
  3555   002C24                     u3430:
  3556   002C24                     
  3557                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 15:     } else {
  3558   002C24  EF1E  F016         	goto	l236
  3559   002C28                     l4260:
  3560                           
  3561                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 16:         ret = gpio_pin_initialize(&(_dc_motor->d
      +                          c_motor_pin[0x00U]));
  3562   002C28  C016  F013         	movff	dc_motor_intialize@_dc_motor,gpio_pin_initialize@_pin_config
  3563   002C2C  EC73  F013         	call	_gpio_pin_initialize	;wreg free
  3564   002C30  6E17               	movwf	dc_motor_intialize@ret^0,c
  3565                           
  3566                           ;ECU_Layer/dc_motor/ecu_dc_motor.c: 17:         ret = gpio_pin_initialize(&(_dc_motor->d
      +                          c_motor_pin[0x01U]));
  3567   002C32  2816               	incf	dc_motor_intialize@_dc_motor^0,w,c
  3568   002C34  6E13               	movwf	gpio_pin_initialize@_pin_config^0,c
  3569   002C36  EC73  F013         	call	_gpio_pin_initialize	;wreg free
  3570   002C3A  6E17               	movwf	dc_motor_intialize@ret^0,c
  3571   002C3C                     l236:
  3572   002C3C  0012               	return		;funcret
  3573   002C3E                     __end_of_dc_motor_intialize:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function _gpio_pin_initialize *****************
  3577 ;; Defined at:
  3578 ;;		line 155 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  _pin_config     1   18[COMRAM] PTR const struct .
  3581 ;;		 -> motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), motor1(2), 
  3582 ;;		 -> lcd1$lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  ret             1   20[COMRAM] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      unsigned char 
  3587 ;; Registers used:
  3588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3594 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;Total ram usage:        3 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 5
  3601 ;; This function calls:
  3602 ;;		_gpio_pin_direction_initialize
  3603 ;;		_gpio_pin_write_logic
  3604 ;; This function is called by:
  3605 ;;		_lcd_4bit_intialize
  3606 ;;		_dc_motor_intialize
  3607 ;;		_seven_segment_initialize
  3608 ;;		_lcd_8bit_intialize
  3609 ;;		_keypad_initialize
  3610 ;;		_led_initialize
  3611 ;;		_relay_initialize
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text24
  3616   0026E6                     __ptext24:
  3617                           	callstack 0
  3618   0026E6                     _gpio_pin_initialize:
  3619                           	callstack 23
  3620   0026E6                     
  3621                           ;MCAL_Layer/GPIO/hal_gpio.c: 157:     if ((((void*)0) == _pin_config) || (_pin_config->p
      +                          in > 8 - 1) || (_pin_config->port > 5 - 1)) {
  3622   0026E6  5013               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3623   0026E8  B4D8               	btfsc	status,2,c
  3624   0026EA  EF79  F013         	goto	u3201
  3625   0026EE  EF7B  F013         	goto	u3200
  3626   0026F2                     u3201:
  3627   0026F2  EF99  F013         	goto	l4030
  3628   0026F6                     u3200:
  3629   0026F6  5013               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3630   0026F8  6ED9               	movwf	fsr2l,c
  3631   0026FA  6ADA               	clrf	fsr2h,c
  3632   0026FC  30DF               	rrcf	223,w,c
  3633   0026FE  32E8               	rrcf	wreg,f,c
  3634   002700  32E8               	rrcf	wreg,f,c
  3635   002702  0B07               	andlw	7
  3636   002704  6E14               	movwf	??_gpio_pin_initialize^0,c
  3637   002706  0E08               	movlw	8
  3638   002708  6014               	cpfslt	??_gpio_pin_initialize^0,c
  3639   00270A  EF89  F013         	goto	u3211
  3640   00270E  EF8B  F013         	goto	u3210
  3641   002712                     u3211:
  3642   002712  EF99  F013         	goto	l4030
  3643   002716                     u3210:
  3644   002716  5013               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3645   002718  6ED9               	movwf	fsr2l,c
  3646   00271A  6ADA               	clrf	fsr2h,c
  3647   00271C  50DF               	movf	223,w,c
  3648   00271E  0B07               	andlw	7
  3649   002720  6E14               	movwf	??_gpio_pin_initialize^0,c
  3650   002722  0E04               	movlw	4
  3651   002724  6414               	cpfsgt	??_gpio_pin_initialize^0,c
  3652   002726  EF97  F013         	goto	u3221
  3653   00272A  EF99  F013         	goto	u3220
  3654   00272E                     u3221:
  3655   00272E  EF9D  F013         	goto	l4032
  3656   002732                     u3220:
  3657   002732                     l4030:
  3658                           
  3659                           ;MCAL_Layer/GPIO/hal_gpio.c: 158:         ret = (Std_ReturnType)0x01;
  3660   002732  0E01               	movlw	1
  3661   002734  6E15               	movwf	gpio_pin_initialize@ret^0,c
  3662                           
  3663                           ;MCAL_Layer/GPIO/hal_gpio.c: 159:     } else {
  3664   002736  EFAE  F013         	goto	l4034
  3665   00273A                     l4032:
  3666                           
  3667                           ;MCAL_Layer/GPIO/hal_gpio.c: 160:         ret = gpio_pin_direction_initialize(_pin_confi
      +                          g);
  3668   00273A  C013  F00B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  3669   00273E  EC42  F00E         	call	_gpio_pin_direction_initialize	;wreg free
  3670   002742  6E15               	movwf	gpio_pin_initialize@ret^0,c
  3671                           
  3672                           ;MCAL_Layer/GPIO/hal_gpio.c: 161:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  3673   002744  C013  F00B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  3674   002748  5013               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3675   00274A  6ED9               	movwf	fsr2l,c
  3676   00274C  6ADA               	clrf	fsr2h,c
  3677   00274E  0E00               	movlw	0
  3678   002750  BEDF               	btfsc	indf2,7,c
  3679   002752  0E01               	movlw	1
  3680   002754  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  3681   002756  ECE3  F00E         	call	_gpio_pin_write_logic	;wreg free
  3682   00275A  6E15               	movwf	gpio_pin_initialize@ret^0,c
  3683   00275C                     l4034:
  3684                           
  3685                           ;MCAL_Layer/GPIO/hal_gpio.c: 164:     return ret;
  3686   00275C  5015               	movf	gpio_pin_initialize@ret^0,w,c
  3687   00275E  0012               	return		;funcret
  3688   002760                     __end_of_gpio_pin_initialize:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _gpio_pin_write_logic *****************
  3692 ;; Defined at:
  3693 ;;		line 81 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  3696 ;;		 -> motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), motor1(2), 
  3697 ;;		 -> lcd1$lcd_data(4), lcd1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  3698 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  3699 ;;  logic           1   11[COMRAM] enum E2978
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  ret             1   17[COMRAM] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      unsigned char 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;Total ram usage:        8 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 4
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_lcd_4bit_send_command
  3722 ;;		_lcd_4bit_send_char_data
  3723 ;;		_lcd_send_4bits
  3724 ;;		_lcd_send_enable_signal
  3725 ;;		_dc_motor_move_right
  3726 ;;		_dc_motor_stop
  3727 ;;		_gpio_pin_initialize
  3728 ;;		_seven_segment_write_number
  3729 ;;		_lcd_8bit_send_command
  3730 ;;		_lcd_8bit_send_char_data
  3731 ;;		_lcd_send_8bits
  3732 ;;		_dc_motor_move_left
  3733 ;;		_keypad_get_value
  3734 ;;		_led_turn_on
  3735 ;;		_led_turn_off
  3736 ;;		_relay_turn_on
  3737 ;;		_relay_turn_off
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text25
  3742   001DC6                     __ptext25:
  3743                           	callstack 0
  3744   001DC6                     _gpio_pin_write_logic:
  3745                           	callstack 21
  3746   001DC6                     
  3747                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:     Std_ReturnType ret = (Std_ReturnType)0x00;
  3748   001DC6  0E00               	movlw	0
  3749   001DC8  6E12               	movwf	gpio_pin_write_logic@ret^0,c
  3750                           
  3751                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:     if (((void*)0) == _pin_config || (_pin_config->pin 
      +                          > 8 - 1) || (_pin_config->port > 5 - 1)) {
  3752   001DCA  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3753   001DCC  B4D8               	btfsc	status,2,c
  3754   001DCE  EFEB  F00E         	goto	u2761
  3755   001DD2  EFED  F00E         	goto	u2760
  3756   001DD6                     u2761:
  3757   001DD6  EF0B  F00F         	goto	l3790
  3758   001DDA                     u2760:
  3759   001DDA  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3760   001DDC  6ED9               	movwf	fsr2l,c
  3761   001DDE  6ADA               	clrf	fsr2h,c
  3762   001DE0  30DF               	rrcf	223,w,c
  3763   001DE2  32E8               	rrcf	wreg,f,c
  3764   001DE4  32E8               	rrcf	wreg,f,c
  3765   001DE6  0B07               	andlw	7
  3766   001DE8  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  3767   001DEA  0E08               	movlw	8
  3768   001DEC  600D               	cpfslt	??_gpio_pin_write_logic^0,c
  3769   001DEE  EFFB  F00E         	goto	u2771
  3770   001DF2  EFFD  F00E         	goto	u2770
  3771   001DF6                     u2771:
  3772   001DF6  EF0B  F00F         	goto	l3790
  3773   001DFA                     u2770:
  3774   001DFA  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3775   001DFC  6ED9               	movwf	fsr2l,c
  3776   001DFE  6ADA               	clrf	fsr2h,c
  3777   001E00  50DF               	movf	223,w,c
  3778   001E02  0B07               	andlw	7
  3779   001E04  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  3780   001E06  0E04               	movlw	4
  3781   001E08  640D               	cpfsgt	??_gpio_pin_write_logic^0,c
  3782   001E0A  EF09  F00F         	goto	u2781
  3783   001E0E  EF0B  F00F         	goto	u2780
  3784   001E12                     u2781:
  3785   001E12  EF62  F00F         	goto	l3798
  3786   001E16                     u2780:
  3787   001E16                     l3790:
  3788                           
  3789                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:         ret = (Std_ReturnType)0x01;
  3790   001E16  0E01               	movlw	1
  3791   001E18  6E12               	movwf	gpio_pin_write_logic@ret^0,c
  3792                           
  3793                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:     } else {
  3794   001E1A  EF77  F00F         	goto	l3800
  3795   001E1E                     l3792:
  3796                           
  3797                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)0x01 << _pin_config->pin));
  3798   001E1E  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3799   001E20  6ED9               	movwf	fsr2l,c
  3800   001E22  6ADA               	clrf	fsr2h,c
  3801   001E24  30DF               	rrcf	223,w,c
  3802   001E26  32E8               	rrcf	wreg,f,c
  3803   001E28  32E8               	rrcf	wreg,f,c
  3804   001E2A  0B07               	andlw	7
  3805   001E2C  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  3806   001E2E  0E01               	movlw	1
  3807   001E30  6E0E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3808   001E32  2A0D               	incf	??_gpio_pin_write_logic^0,f,c
  3809   001E34  EF1E  F00F         	goto	u2794
  3810   001E38                     u2795:
  3811   001E38  90D8               	bcf	status,0,c
  3812   001E3A  360E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3813   001E3C                     u2794:
  3814   001E3C  2E0D               	decfsz	??_gpio_pin_write_logic^0,f,c
  3815   001E3E  EF1C  F00F         	goto	u2795
  3816   001E42  500E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3817   001E44  0AFF               	xorlw	255
  3818   001E46  6E0F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3819   001E48  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3820   001E4A  6ED9               	movwf	fsr2l,c
  3821   001E4C  6ADA               	clrf	fsr2h,c
  3822   001E4E  50DF               	movf	223,w,c
  3823   001E50  0B07               	andlw	7
  3824   001E52  0D02               	mullw	2
  3825   001E54  50F3               	movf	243,w,c
  3826   001E56  0FCB               	addlw	low _lat_registers
  3827   001E58  6ED9               	movwf	fsr2l,c
  3828   001E5A  6ADA               	clrf	fsr2h,c
  3829   001E5C  CFDE F010          	movff	postinc2,??_gpio_pin_write_logic+3
  3830   001E60  CFDD F011          	movff	postdec2,??_gpio_pin_write_logic+4
  3831   001E64  C010  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3832   001E68  C011  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3833   001E6C  500F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3834   001E6E  16DF               	andwf	indf2,f,c
  3835                           
  3836                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
  3837   001E70  EF77  F00F         	goto	l3800
  3838   001E74                     l3794:
  3839                           
  3840                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)0x01 << _pin_config->pin));
  3841   001E74  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3842   001E76  6ED9               	movwf	fsr2l,c
  3843   001E78  6ADA               	clrf	fsr2h,c
  3844   001E7A  30DF               	rrcf	223,w,c
  3845   001E7C  32E8               	rrcf	wreg,f,c
  3846   001E7E  32E8               	rrcf	wreg,f,c
  3847   001E80  0B07               	andlw	7
  3848   001E82  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  3849   001E84  0E01               	movlw	1
  3850   001E86  6E0E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3851   001E88  2A0D               	incf	??_gpio_pin_write_logic^0,f,c
  3852   001E8A  EF49  F00F         	goto	u2804
  3853   001E8E                     u2805:
  3854   001E8E  90D8               	bcf	status,0,c
  3855   001E90  360E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3856   001E92                     u2804:
  3857   001E92  2E0D               	decfsz	??_gpio_pin_write_logic^0,f,c
  3858   001E94  EF47  F00F         	goto	u2805
  3859   001E98  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3860   001E9A  6ED9               	movwf	fsr2l,c
  3861   001E9C  6ADA               	clrf	fsr2h,c
  3862   001E9E  50DF               	movf	223,w,c
  3863   001EA0  0B07               	andlw	7
  3864   001EA2  0D02               	mullw	2
  3865   001EA4  50F3               	movf	243,w,c
  3866   001EA6  0FCB               	addlw	low _lat_registers
  3867   001EA8  6ED9               	movwf	fsr2l,c
  3868   001EAA  6ADA               	clrf	fsr2h,c
  3869   001EAC  CFDE F00F          	movff	postinc2,??_gpio_pin_write_logic+2
  3870   001EB0  CFDD F010          	movff	postdec2,??_gpio_pin_write_logic+3
  3871   001EB4  C00F  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3872   001EB8  C010  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3873   001EBC  500E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3874   001EBE  12DF               	iorwf	indf2,f,c
  3875                           
  3876                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:                 break;
  3877   001EC0  EF77  F00F         	goto	l3800
  3878   001EC4                     l3798:
  3879   001EC4  500C               	movf	gpio_pin_write_logic@logic^0,w,c
  3880   001EC6  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  3881   001EC8  6A0E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3882                           
  3883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3884                           ; Switch size 1, requested type "simple"
  3885                           ; Number of cases is 1, Range of values is 0 to 0
  3886                           ; switch strategies available:
  3887                           ; Name         Instructions Cycles
  3888                           ; simple_byte            4     3 (average)
  3889                           ;	Chosen strategy is simple_byte
  3890   001ECA  500E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3891   001ECC  0A00               	xorlw	0	; case 0
  3892   001ECE  B4D8               	btfsc	status,2,c
  3893   001ED0  EF6C  F00F         	goto	l5902
  3894   001ED4  EF0B  F00F         	goto	l3790
  3895   001ED8                     l5902:
  3896                           
  3897                           ; Switch size 1, requested type "simple"
  3898                           ; Number of cases is 2, Range of values is 0 to 1
  3899                           ; switch strategies available:
  3900                           ; Name         Instructions Cycles
  3901                           ; simple_byte            7     4 (average)
  3902                           ;	Chosen strategy is simple_byte
  3903   001ED8  500D               	movf	??_gpio_pin_write_logic^0,w,c
  3904   001EDA  0A00               	xorlw	0	; case 0
  3905   001EDC  B4D8               	btfsc	status,2,c
  3906   001EDE  EF0F  F00F         	goto	l3792
  3907   001EE2  0A01               	xorlw	1	; case 1
  3908   001EE4  B4D8               	btfsc	status,2,c
  3909   001EE6  EF3A  F00F         	goto	l3794
  3910   001EEA  EF0B  F00F         	goto	l3790
  3911   001EEE                     l3800:
  3912                           
  3913                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     return ret;
  3914   001EEE  5012               	movf	gpio_pin_write_logic@ret^0,w,c
  3915   001EF0  0012               	return		;funcret
  3916   001EF2                     __end_of_gpio_pin_write_logic:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _gpio_pin_direction_initialize *****************
  3920 ;; Defined at:
  3921 ;;		line 26 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  3924 ;;		 -> motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), motor1(2), 
  3925 ;;		 -> lcd1$lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  ret             1   16[COMRAM] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      unsigned char 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3937 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;Total ram usage:        7 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 4
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_gpio_pin_initialize
  3948 ;;		_button_initialize
  3949 ;;		_keypad_initialize
  3950 ;;		_Interrupt_INTx_Pin_Init
  3951 ;;		_Interrupt_RBx_Pin_Init
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text26
  3956   001C84                     __ptext26:
  3957                           	callstack 0
  3958   001C84                     _gpio_pin_direction_initialize:
  3959                           	callstack 23
  3960   001C84                     
  3961                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x00;
  3962   001C84  0E00               	movlw	0
  3963   001C86  6E11               	movwf	gpio_pin_direction_initialize@ret^0,c
  3964                           
  3965                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     if ((((void*)0) == _pin_config) || (_pin_config->pi
      +                          n > 8 - 1) || (_pin_config->port > 5 - 1)) {
  3966   001C88  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3967   001C8A  B4D8               	btfsc	status,2,c
  3968   001C8C  EF4A  F00E         	goto	u3021
  3969   001C90  EF4C  F00E         	goto	u3020
  3970   001C94                     u3021:
  3971   001C94  EF6A  F00E         	goto	l3946
  3972   001C98                     u3020:
  3973   001C98  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3974   001C9A  6ED9               	movwf	fsr2l,c
  3975   001C9C  6ADA               	clrf	fsr2h,c
  3976   001C9E  30DF               	rrcf	223,w,c
  3977   001CA0  32E8               	rrcf	wreg,f,c
  3978   001CA2  32E8               	rrcf	wreg,f,c
  3979   001CA4  0B07               	andlw	7
  3980   001CA6  6E0C               	movwf	??_gpio_pin_direction_initialize^0,c
  3981   001CA8  0E08               	movlw	8
  3982   001CAA  600C               	cpfslt	??_gpio_pin_direction_initialize^0,c
  3983   001CAC  EF5A  F00E         	goto	u3031
  3984   001CB0  EF5C  F00E         	goto	u3030
  3985   001CB4                     u3031:
  3986   001CB4  EF6A  F00E         	goto	l3946
  3987   001CB8                     u3030:
  3988   001CB8  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3989   001CBA  6ED9               	movwf	fsr2l,c
  3990   001CBC  6ADA               	clrf	fsr2h,c
  3991   001CBE  50DF               	movf	223,w,c
  3992   001CC0  0B07               	andlw	7
  3993   001CC2  6E0C               	movwf	??_gpio_pin_direction_initialize^0,c
  3994   001CC4  0E04               	movlw	4
  3995   001CC6  640C               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  3996   001CC8  EF68  F00E         	goto	u3041
  3997   001CCC  EF6A  F00E         	goto	u3040
  3998   001CD0                     u3041:
  3999   001CD0  EFC1  F00E         	goto	l3954
  4000   001CD4                     u3040:
  4001   001CD4                     l3946:
  4002                           
  4003                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:         ret = (Std_ReturnType)0x01;
  4004   001CD4  0E01               	movlw	1
  4005   001CD6  6E11               	movwf	gpio_pin_direction_initialize@ret^0,c
  4006                           
  4007                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:     } else {
  4008   001CD8  EFE1  F00E         	goto	l3956
  4009   001CDC                     l3948:
  4010                           
  4011                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)0x01 << _pin_config->pin));
  4012   001CDC  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  4013   001CDE  6ED9               	movwf	fsr2l,c
  4014   001CE0  6ADA               	clrf	fsr2h,c
  4015   001CE2  30DF               	rrcf	223,w,c
  4016   001CE4  32E8               	rrcf	wreg,f,c
  4017   001CE6  32E8               	rrcf	wreg,f,c
  4018   001CE8  0B07               	andlw	7
  4019   001CEA  6E0C               	movwf	??_gpio_pin_direction_initialize^0,c
  4020   001CEC  0E01               	movlw	1
  4021   001CEE  6E0D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4022   001CF0  2A0C               	incf	??_gpio_pin_direction_initialize^0,f,c
  4023   001CF2  EF7D  F00E         	goto	u3054
  4024   001CF6                     u3055:
  4025   001CF6  90D8               	bcf	status,0,c
  4026   001CF8  360D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4027   001CFA                     u3054:
  4028   001CFA  2E0C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4029   001CFC  EF7B  F00E         	goto	u3055
  4030   001D00  500D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4031   001D02  0AFF               	xorlw	255
  4032   001D04  6E0E               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4033   001D06  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  4034   001D08  6ED9               	movwf	fsr2l,c
  4035   001D0A  6ADA               	clrf	fsr2h,c
  4036   001D0C  50DF               	movf	223,w,c
  4037   001D0E  0B07               	andlw	7
  4038   001D10  0D02               	mullw	2
  4039   001D12  50F3               	movf	243,w,c
  4040   001D14  0F63               	addlw	low _tris_registers
  4041   001D16  6ED9               	movwf	fsr2l,c
  4042   001D18  6ADA               	clrf	fsr2h,c
  4043   001D1A  CFDE F00F          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4044   001D1E  CFDD F010          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4045   001D22  C00F  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4046   001D26  C010  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4047   001D2A  500E               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4048   001D2C  16DF               	andwf	indf2,f,c
  4049                           
  4050                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 break;
  4051   001D2E  EFE1  F00E         	goto	l3956
  4052   001D32                     l3950:
  4053                           
  4054                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)0x01 << _pin_config->pin));
  4055   001D32  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  4056   001D34  6ED9               	movwf	fsr2l,c
  4057   001D36  6ADA               	clrf	fsr2h,c
  4058   001D38  30DF               	rrcf	223,w,c
  4059   001D3A  32E8               	rrcf	wreg,f,c
  4060   001D3C  32E8               	rrcf	wreg,f,c
  4061   001D3E  0B07               	andlw	7
  4062   001D40  6E0C               	movwf	??_gpio_pin_direction_initialize^0,c
  4063   001D42  0E01               	movlw	1
  4064   001D44  6E0D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4065   001D46  2A0C               	incf	??_gpio_pin_direction_initialize^0,f,c
  4066   001D48  EFA8  F00E         	goto	u3064
  4067   001D4C                     u3065:
  4068   001D4C  90D8               	bcf	status,0,c
  4069   001D4E  360D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4070   001D50                     u3064:
  4071   001D50  2E0C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4072   001D52  EFA6  F00E         	goto	u3065
  4073   001D56  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  4074   001D58  6ED9               	movwf	fsr2l,c
  4075   001D5A  6ADA               	clrf	fsr2h,c
  4076   001D5C  50DF               	movf	223,w,c
  4077   001D5E  0B07               	andlw	7
  4078   001D60  0D02               	mullw	2
  4079   001D62  50F3               	movf	243,w,c
  4080   001D64  0F63               	addlw	low _tris_registers
  4081   001D66  6ED9               	movwf	fsr2l,c
  4082   001D68  6ADA               	clrf	fsr2h,c
  4083   001D6A  CFDE F00E          	movff	postinc2,??_gpio_pin_direction_initialize+2
  4084   001D6E  CFDD F00F          	movff	postdec2,??_gpio_pin_direction_initialize+3
  4085   001D72  C00E  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  4086   001D76  C00F  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  4087   001D7A  500D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4088   001D7C  12DF               	iorwf	indf2,f,c
  4089                           
  4090                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:                 break;
  4091   001D7E  EFE1  F00E         	goto	l3956
  4092   001D82                     l3954:
  4093   001D82  500B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  4094   001D84  6ED9               	movwf	fsr2l,c
  4095   001D86  6ADA               	clrf	fsr2h,c
  4096   001D88  BCDF               	btfsc	indf2,6,c
  4097   001D8A  EFC9  F00E         	goto	u3071
  4098   001D8E  EFCC  F00E         	goto	u3070
  4099   001D92                     u3071:
  4100   001D92  0E01               	movlw	1
  4101   001D94  EFCD  F00E         	goto	u3080
  4102   001D98                     u3070:
  4103   001D98  0E00               	movlw	0
  4104   001D9A                     u3080:
  4105   001D9A  6E0C               	movwf	??_gpio_pin_direction_initialize^0,c
  4106   001D9C  6A0D               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4107                           
  4108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4109                           ; Switch size 1, requested type "simple"
  4110                           ; Number of cases is 1, Range of values is 0 to 0
  4111                           ; switch strategies available:
  4112                           ; Name         Instructions Cycles
  4113                           ; simple_byte            4     3 (average)
  4114                           ;	Chosen strategy is simple_byte
  4115   001D9E  500D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4116   001DA0  0A00               	xorlw	0	; case 0
  4117   001DA2  B4D8               	btfsc	status,2,c
  4118   001DA4  EFD6  F00E         	goto	l5904
  4119   001DA8  EF6A  F00E         	goto	l3946
  4120   001DAC                     l5904:
  4121                           
  4122                           ; Switch size 1, requested type "simple"
  4123                           ; Number of cases is 2, Range of values is 0 to 1
  4124                           ; switch strategies available:
  4125                           ; Name         Instructions Cycles
  4126                           ; simple_byte            7     4 (average)
  4127                           ;	Chosen strategy is simple_byte
  4128   001DAC  500C               	movf	??_gpio_pin_direction_initialize^0,w,c
  4129   001DAE  0A00               	xorlw	0	; case 0
  4130   001DB0  B4D8               	btfsc	status,2,c
  4131   001DB2  EF6E  F00E         	goto	l3948
  4132   001DB6  0A01               	xorlw	1	; case 1
  4133   001DB8  B4D8               	btfsc	status,2,c
  4134   001DBA  EF99  F00E         	goto	l3950
  4135   001DBE  EF6A  F00E         	goto	l3946
  4136   001DC2                     l3956:
  4137                           
  4138                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     return ret;
  4139   001DC2  5011               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4140   001DC4  0012               	return		;funcret
  4141   001DC6                     __end_of_gpio_pin_direction_initialize:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function _ADC_Init *****************
  4145 ;; Defined at:
  4146 ;;		line 28 in file "MCAL_Layer/ADC/hal_adc.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  _adc            1   13[COMRAM] PTR const struct .
  4149 ;;		 -> adc_1(7), 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  ret             1    0        unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      unsigned char 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4161 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;Total ram usage:        2 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 5
  4168 ;; This function calls:
  4169 ;;		_adc_input_channel_port_configure
  4170 ;;		_configure_voltage_reference
  4171 ;;		_select_result_format
  4172 ;; This function is called by:
  4173 ;;		_application_initialize
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text27
  4178   00246E                     __ptext27:
  4179                           	callstack 0
  4180   00246E                     _ADC_Init:
  4181                           	callstack 24
  4182   00246E                     
  4183                           ;MCAL_Layer/ADC/hal_adc.c: 30:     if (((void*)0) == _adc) {
  4184   00246E  500E               	movf	ADC_Init@_adc^0,w,c
  4185   002470  A4D8               	btfss	status,2,c
  4186   002472  EF3D  F012         	goto	u3441
  4187   002476  EF3F  F012         	goto	u3440
  4188   00247A                     u3441:
  4189   00247A  EF41  F012         	goto	l379
  4190   00247E                     u3440:
  4191   00247E                     
  4192                           ;MCAL_Layer/ADC/hal_adc.c: 32:     } else {
  4193   00247E  EF87  F012         	goto	l381
  4194   002482                     l379:
  4195                           
  4196                           ;MCAL_Layer/ADC/hal_adc.c: 34:         (ADCON0bits.ADON = 0);
  4197   002482  90C2               	bcf	194,0,c	;volatile
  4198   002484                     
  4199                           ;MCAL_Layer/ADC/hal_adc.c: 36:         ADCON2bits.ACQT = _adc->acquisition_time;
  4200   002484  500E               	movf	ADC_Init@_adc^0,w,c
  4201   002486  6ED9               	movwf	fsr2l,c
  4202   002488  6ADA               	clrf	fsr2h,c
  4203   00248A  0E03               	movlw	3
  4204   00248C  26D9               	addwf	fsr2l,f,c
  4205   00248E  50DF               	movf	indf2,w,c
  4206   002490  6E0F               	movwf	??_ADC_Init^0,c
  4207   002492  460F               	rlncf	??_ADC_Init^0,f,c
  4208   002494  460F               	rlncf	??_ADC_Init^0,f,c
  4209   002496  460F               	rlncf	??_ADC_Init^0,f,c
  4210   002498  50C0               	movf	192,w,c	;volatile
  4211   00249A  180F               	xorwf	??_ADC_Init^0,w,c
  4212   00249C  0BC7               	andlw	-57
  4213   00249E  180F               	xorwf	??_ADC_Init^0,w,c
  4214   0024A0  6EC0               	movwf	192,c	;volatile
  4215                           
  4216                           ;MCAL_Layer/ADC/hal_adc.c: 38:         ADCON2bits.ADCS = _adc->conversion_clock;
  4217   0024A2  500E               	movf	ADC_Init@_adc^0,w,c
  4218   0024A4  6ED9               	movwf	fsr2l,c
  4219   0024A6  6ADA               	clrf	fsr2h,c
  4220   0024A8  0E04               	movlw	4
  4221   0024AA  26D9               	addwf	fsr2l,f,c
  4222   0024AC  50DF               	movf	indf2,w,c
  4223   0024AE  6E0F               	movwf	??_ADC_Init^0,c
  4224   0024B0  50C0               	movf	192,w,c	;volatile
  4225   0024B2  180F               	xorwf	??_ADC_Init^0,w,c
  4226   0024B4  0BF8               	andlw	-8
  4227   0024B6  180F               	xorwf	??_ADC_Init^0,w,c
  4228   0024B8  6EC0               	movwf	192,c	;volatile
  4229                           
  4230                           ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON0bits.CHS = _adc->adc_channel;
  4231   0024BA  500E               	movf	ADC_Init@_adc^0,w,c
  4232   0024BC  6ED9               	movwf	fsr2l,c
  4233   0024BE  6ADA               	clrf	fsr2h,c
  4234   0024C0  0E05               	movlw	5
  4235   0024C2  26D9               	addwf	fsr2l,f,c
  4236   0024C4  50DF               	movf	indf2,w,c
  4237   0024C6  6E0F               	movwf	??_ADC_Init^0,c
  4238   0024C8  460F               	rlncf	??_ADC_Init^0,f,c
  4239   0024CA  460F               	rlncf	??_ADC_Init^0,f,c
  4240   0024CC  50C2               	movf	194,w,c	;volatile
  4241   0024CE  180F               	xorwf	??_ADC_Init^0,w,c
  4242   0024D0  0BC3               	andlw	-61
  4243   0024D2  180F               	xorwf	??_ADC_Init^0,w,c
  4244   0024D4  6EC2               	movwf	194,c	;volatile
  4245   0024D6                     
  4246                           ;MCAL_Layer/ADC/hal_adc.c: 41:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  4247   0024D6  500E               	movf	ADC_Init@_adc^0,w,c
  4248   0024D8  6ED9               	movwf	fsr2l,c
  4249   0024DA  6ADA               	clrf	fsr2h,c
  4250   0024DC  0E05               	movlw	5
  4251   0024DE  26D9               	addwf	fsr2l,f,c
  4252   0024E0  50DF               	movf	indf2,w,c
  4253   0024E2  ECFD  F00F         	call	_adc_input_channel_port_configure
  4254   0024E6                     
  4255                           ;MCAL_Layer/ADC/hal_adc.c: 44:         (INTCONbits.GIE = 1);
  4256   0024E6  8EF2               	bsf	242,7,c	;volatile
  4257   0024E8                     
  4258                           ;MCAL_Layer/ADC/hal_adc.c: 45:         (INTCONbits.PEIE = 1);
  4259   0024E8  8CF2               	bsf	242,6,c	;volatile
  4260   0024EA                     
  4261                           ;MCAL_Layer/ADC/hal_adc.c: 46:         (PIE1bits.ADIE = 1);
  4262   0024EA  8C9D               	bsf	157,6,c	;volatile
  4263   0024EC                     
  4264                           ;MCAL_Layer/ADC/hal_adc.c: 47:         (PIR1bits.ADIF = 0);
  4265   0024EC  9C9E               	bcf	158,6,c	;volatile
  4266   0024EE                     
  4267                           ;MCAL_Layer/ADC/hal_adc.c: 48:         ADC_InterruptHandler = _adc->InterruptHandler;
  4268   0024EE  500E               	movf	ADC_Init@_adc^0,w,c
  4269   0024F0  6ED9               	movwf	fsr2l,c
  4270   0024F2  6ADA               	clrf	fsr2h,c
  4271   0024F4  CFDE F054          	movff	postinc2,_ADC_InterruptHandler
  4272   0024F8  CFDD F055          	movff	postdec2,_ADC_InterruptHandler+1
  4273   0024FC                     
  4274                           ;MCAL_Layer/ADC/hal_adc.c: 61:         select_result_format(_adc);
  4275   0024FC  C00E  F00B         	movff	ADC_Init@_adc,select_result_format@_adc
  4276   002500  EC32  F016         	call	_select_result_format	;wreg free
  4277   002504                     
  4278                           ;MCAL_Layer/ADC/hal_adc.c: 63:         configure_voltage_reference(_adc);
  4279   002504  C00E  F00B         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  4280   002508  EC1F  F016         	call	_configure_voltage_reference	;wreg free
  4281   00250C                     
  4282                           ;MCAL_Layer/ADC/hal_adc.c: 65:         (ADCON0bits.ADON = 1);
  4283   00250C  80C2               	bsf	194,0,c	;volatile
  4284   00250E                     l381:
  4285   00250E  0012               	return		;funcret
  4286   002510                     __end_of_ADC_Init:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _select_result_format *****************
  4290 ;; Defined at:
  4291 ;;		line 294 in file "MCAL_Layer/ADC/hal_adc.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  _adc            1   10[COMRAM] PTR const struct .
  4294 ;;		 -> adc_1(7), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4306 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;Total ram usage:        1 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 4
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_ADC_Init
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text28
  4321   002C64                     __ptext28:
  4322                           	callstack 0
  4323   002C64                     _select_result_format:
  4324                           	callstack 24
  4325   002C64                     
  4326                           ;MCAL_Layer/ADC/hal_adc.c: 295:     if (0x00U == _adc->result_format) {
  4327   002C64  500B               	movf	select_result_format@_adc^0,w,c
  4328   002C66  6ED9               	movwf	fsr2l,c
  4329   002C68  6ADA               	clrf	fsr2h,c
  4330   002C6A  0E06               	movlw	6
  4331   002C6C  26D9               	addwf	fsr2l,f,c
  4332   002C6E  B2DF               	btfsc	indf2,1,c
  4333   002C70  EF3C  F016         	goto	u3251
  4334   002C74  EF3E  F016         	goto	u3250
  4335   002C78                     u3251:
  4336   002C78  EF41  F016         	goto	l452
  4337   002C7C                     u3250:
  4338   002C7C                     
  4339                           ;MCAL_Layer/ADC/hal_adc.c: 296:         (ADCON2bits.ADFM = 0x00U);
  4340   002C7C  9EC0               	bcf	192,7,c	;volatile
  4341                           
  4342                           ;MCAL_Layer/ADC/hal_adc.c: 297:     } else {
  4343   002C7E  EF42  F016         	goto	l454
  4344   002C82                     l452:
  4345                           
  4346                           ;MCAL_Layer/ADC/hal_adc.c: 298:         (ADCON2bits.ADFM = 0x01U);
  4347   002C82  8EC0               	bsf	192,7,c	;volatile
  4348   002C84                     l454:
  4349   002C84  0012               	return		;funcret
  4350   002C86                     __end_of_select_result_format:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _configure_voltage_reference *****************
  4354 ;; Defined at:
  4355 ;;		line 306 in file "MCAL_Layer/ADC/hal_adc.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  _adc            1   10[COMRAM] PTR const struct .
  4358 ;;		 -> adc_1(7), 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4370 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;Total ram usage:        1 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 4
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_ADC_Init
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text29
  4385   002C3E                     __ptext29:
  4386                           	callstack 0
  4387   002C3E                     _configure_voltage_reference:
  4388                           	callstack 24
  4389   002C3E                     
  4390                           ;MCAL_Layer/ADC/hal_adc.c: 307:     if (0x01U == _adc->voltage_reference) {
  4391   002C3E  500B               	movf	configure_voltage_reference@_adc^0,w,c
  4392   002C40  6ED9               	movwf	fsr2l,c
  4393   002C42  6ADA               	clrf	fsr2h,c
  4394   002C44  0E06               	movlw	6
  4395   002C46  26D9               	addwf	fsr2l,f,c
  4396   002C48  A0DF               	btfss	indf2,0,c
  4397   002C4A  EF29  F016         	goto	u3261
  4398   002C4E  EF2B  F016         	goto	u3260
  4399   002C52                     u3261:
  4400   002C52  EF2F  F016         	goto	l461
  4401   002C56                     u3260:
  4402   002C56  88C1               	bsf	193,4,c	;volatile
  4403   002C58  8AC1               	bsf	193,5,c	;volatile
  4404   002C5A  EF31  F016         	goto	l463
  4405   002C5E                     l461:
  4406   002C5E  98C1               	bcf	193,4,c	;volatile
  4407   002C60  9AC1               	bcf	193,5,c	;volatile
  4408   002C62                     l463:
  4409   002C62  0012               	return		;funcret
  4410   002C64                     __end_of_configure_voltage_reference:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function ___xxtofl *****************
  4414 ;; Defined at:
  4415 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  sign            1    wreg     unsigned char 
  4418 ;;  val             4   10[COMRAM] long 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  sign            1   18[COMRAM] unsigned char 
  4421 ;;  arg             4   20[COMRAM] unsigned long 
  4422 ;;  exp             1   19[COMRAM] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  4   10[COMRAM] unsigned char 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;Total ram usage:       14 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; Hardware stack levels required when called: 4
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text30
  4447   001AD0                     __ptext30:
  4448                           	callstack 0
  4449   001AD0                     ___xxtofl:
  4450                           	callstack 26
  4451                           
  4452                           ;incstack = 0
  4453                           ;___xxtofl@sign stored from wreg
  4454   001AD0  6E13               	movwf	___xxtofl@sign^0,c
  4455   001AD2  5013               	movf	___xxtofl@sign^0,w,c
  4456   001AD4  B4D8               	btfsc	status,2,c
  4457   001AD6  EF6F  F00D         	goto	u3881
  4458   001ADA  EF71  F00D         	goto	u3880
  4459   001ADE                     u3881:
  4460   001ADE  EF93  F00D         	goto	l1647
  4461   001AE2                     u3880:
  4462   001AE2  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  4463   001AE4  EF78  F00D         	goto	u3890
  4464   001AE8  EF76  F00D         	goto	u3891
  4465   001AEC                     u3891:
  4466   001AEC  EF93  F00D         	goto	l1647
  4467   001AF0                     u3890:
  4468   001AF0  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  4469   001AF4  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  4470   001AF8  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  4471   001AFC  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  4472   001B00  1E0F               	comf	??___xxtofl^0,f,c
  4473   001B02  1E10               	comf	(??___xxtofl+1)^0,f,c
  4474   001B04  1E11               	comf	(??___xxtofl+2)^0,f,c
  4475   001B06  1E12               	comf	(??___xxtofl+3)^0,f,c
  4476   001B08  2A0F               	incf	??___xxtofl^0,f,c
  4477   001B0A  0E00               	movlw	0
  4478   001B0C  2210               	addwfc	(??___xxtofl+1)^0,f,c
  4479   001B0E  2211               	addwfc	(??___xxtofl+2)^0,f,c
  4480   001B10  2212               	addwfc	(??___xxtofl+3)^0,f,c
  4481   001B12  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  4482   001B16  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  4483   001B1A  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  4484   001B1E  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  4485   001B22  EF9B  F00D         	goto	l4640
  4486   001B26                     l1647:
  4487   001B26  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  4488   001B2A  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4489   001B2E  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4490   001B32  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4491   001B36                     l4640:
  4492   001B36  500B               	movf	___xxtofl@val^0,w,c
  4493   001B38  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  4494   001B3A  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  4495   001B3C  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  4496   001B3E  A4D8               	btfss	status,2,c
  4497   001B40  EFA4  F00D         	goto	u3901
  4498   001B44  EFA6  F00D         	goto	u3900
  4499   001B48                     u3901:
  4500   001B48  EFB0  F00D         	goto	l4646
  4501   001B4C                     u3900:
  4502   001B4C  0E00               	movlw	0
  4503   001B4E  6E0B               	movwf	?___xxtofl^0,c
  4504   001B50  0E00               	movlw	0
  4505   001B52  6E0C               	movwf	(?___xxtofl+1)^0,c
  4506   001B54  0E00               	movlw	0
  4507   001B56  6E0D               	movwf	(?___xxtofl+2)^0,c
  4508   001B58  0E00               	movlw	0
  4509   001B5A  6E0E               	movwf	(?___xxtofl+3)^0,c
  4510   001B5C  EF41  F00E         	goto	l1650
  4511   001B60                     l4646:
  4512   001B60  0E96               	movlw	150
  4513   001B62  6E14               	movwf	___xxtofl@exp^0,c
  4514   001B64  EFBA  F00D         	goto	l4650
  4515   001B68                     l4648:
  4516   001B68  2A14               	incf	___xxtofl@exp^0,f,c
  4517   001B6A  90D8               	bcf	status,0,c
  4518   001B6C  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  4519   001B6E  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  4520   001B70  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  4521   001B72  3215               	rrcf	___xxtofl@arg^0,f,c
  4522   001B74                     l4650:
  4523   001B74  0E00               	movlw	0
  4524   001B76  1415               	andwf	___xxtofl@arg^0,w,c
  4525   001B78  6E0F               	movwf	??___xxtofl^0,c
  4526   001B7A  0E00               	movlw	0
  4527   001B7C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  4528   001B7E  6E10               	movwf	(??___xxtofl+1)^0,c
  4529   001B80  0E00               	movlw	0
  4530   001B82  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  4531   001B84  6E11               	movwf	(??___xxtofl+2)^0,c
  4532   001B86  0EFE               	movlw	254
  4533   001B88  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  4534   001B8A  6E12               	movwf	(??___xxtofl+3)^0,c
  4535   001B8C  500F               	movf	??___xxtofl^0,w,c
  4536   001B8E  1010               	iorwf	(??___xxtofl+1)^0,w,c
  4537   001B90  1011               	iorwf	(??___xxtofl+2)^0,w,c
  4538   001B92  1012               	iorwf	(??___xxtofl+3)^0,w,c
  4539   001B94  A4D8               	btfss	status,2,c
  4540   001B96  EFCF  F00D         	goto	u3911
  4541   001B9A  EFD1  F00D         	goto	u3910
  4542   001B9E                     u3911:
  4543   001B9E  EFB4  F00D         	goto	l4648
  4544   001BA2                     u3910:
  4545   001BA2  EFDF  F00D         	goto	l1654
  4546   001BA6                     l4652:
  4547   001BA6  2A14               	incf	___xxtofl@exp^0,f,c
  4548   001BA8  0E01               	movlw	1
  4549   001BAA  2615               	addwf	___xxtofl@arg^0,f,c
  4550   001BAC  0E00               	movlw	0
  4551   001BAE  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  4552   001BB0  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  4553   001BB2  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  4554   001BB4  90D8               	bcf	status,0,c
  4555   001BB6  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  4556   001BB8  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  4557   001BBA  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  4558   001BBC  3215               	rrcf	___xxtofl@arg^0,f,c
  4559   001BBE                     l1654:
  4560   001BBE  0E00               	movlw	0
  4561   001BC0  1415               	andwf	___xxtofl@arg^0,w,c
  4562   001BC2  6E0F               	movwf	??___xxtofl^0,c
  4563   001BC4  0E00               	movlw	0
  4564   001BC6  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  4565   001BC8  6E10               	movwf	(??___xxtofl+1)^0,c
  4566   001BCA  0E00               	movlw	0
  4567   001BCC  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  4568   001BCE  6E11               	movwf	(??___xxtofl+2)^0,c
  4569   001BD0  0EFF               	movlw	255
  4570   001BD2  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  4571   001BD4  6E12               	movwf	(??___xxtofl+3)^0,c
  4572   001BD6  500F               	movf	??___xxtofl^0,w,c
  4573   001BD8  1010               	iorwf	(??___xxtofl+1)^0,w,c
  4574   001BDA  1011               	iorwf	(??___xxtofl+2)^0,w,c
  4575   001BDC  1012               	iorwf	(??___xxtofl+3)^0,w,c
  4576   001BDE  A4D8               	btfss	status,2,c
  4577   001BE0  EFF4  F00D         	goto	u3921
  4578   001BE4  EFF6  F00D         	goto	u3920
  4579   001BE8                     u3921:
  4580   001BE8  EFD3  F00D         	goto	l4652
  4581   001BEC                     u3920:
  4582   001BEC  EFFE  F00D         	goto	l4660
  4583   001BF0                     l4658:
  4584   001BF0  0614               	decf	___xxtofl@exp^0,f,c
  4585   001BF2  90D8               	bcf	status,0,c
  4586   001BF4  3615               	rlcf	___xxtofl@arg^0,f,c
  4587   001BF6  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  4588   001BF8  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  4589   001BFA  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  4590   001BFC                     l4660:
  4591   001BFC  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  4592   001BFE  EF03  F00E         	goto	u3931
  4593   001C02  EF05  F00E         	goto	u3930
  4594   001C06                     u3931:
  4595   001C06  EF0D  F00E         	goto	l1661
  4596   001C0A                     u3930:
  4597   001C0A  0E02               	movlw	2
  4598   001C0C  6014               	cpfslt	___xxtofl@exp^0,c
  4599   001C0E  EF0B  F00E         	goto	u3941
  4600   001C12  EF0D  F00E         	goto	u3940
  4601   001C16                     u3941:
  4602   001C16  EFF8  F00D         	goto	l4658
  4603   001C1A                     u3940:
  4604   001C1A                     l1661:
  4605   001C1A  B014               	btfsc	___xxtofl@exp^0,0,c
  4606   001C1C  EF12  F00E         	goto	u3951
  4607   001C20  EF14  F00E         	goto	u3950
  4608   001C24                     u3951:
  4609   001C24  EF15  F00E         	goto	l4666
  4610   001C28                     u3950:
  4611   001C28  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  4612   001C2A                     l4666:
  4613   001C2A  90D8               	bcf	status,0,c
  4614   001C2C  3214               	rrcf	___xxtofl@exp^0,f,c
  4615   001C2E  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  4616   001C32  6A10               	clrf	(??___xxtofl+1)^0,c
  4617   001C34  6A11               	clrf	(??___xxtofl+2)^0,c
  4618   001C36  6A12               	clrf	(??___xxtofl+3)^0,c
  4619   001C38  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  4620   001C3C  6A11               	clrf	(??___xxtofl+2)^0,c
  4621   001C3E  6A10               	clrf	(??___xxtofl+1)^0,c
  4622   001C40  6A0F               	clrf	??___xxtofl^0,c
  4623   001C42  500F               	movf	??___xxtofl^0,w,c
  4624   001C44  1215               	iorwf	___xxtofl@arg^0,f,c
  4625   001C46  5010               	movf	(??___xxtofl+1)^0,w,c
  4626   001C48  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  4627   001C4A  5011               	movf	(??___xxtofl+2)^0,w,c
  4628   001C4C  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  4629   001C4E  5012               	movf	(??___xxtofl+3)^0,w,c
  4630   001C50  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  4631   001C52  5013               	movf	___xxtofl@sign^0,w,c
  4632   001C54  B4D8               	btfsc	status,2,c
  4633   001C56  EF2F  F00E         	goto	u3961
  4634   001C5A  EF31  F00E         	goto	u3960
  4635   001C5E                     u3961:
  4636   001C5E  EF39  F00E         	goto	l4676
  4637   001C62                     u3960:
  4638   001C62  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  4639   001C64  EF38  F00E         	goto	u3970
  4640   001C68  EF36  F00E         	goto	u3971
  4641   001C6C                     u3971:
  4642   001C6C  EF39  F00E         	goto	l4676
  4643   001C70                     u3970:
  4644   001C70  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  4645   001C72                     l4676:
  4646   001C72  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  4647   001C76  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  4648   001C7A  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  4649   001C7E  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  4650   001C82                     l1650:
  4651   001C82  0012               	return		;funcret
  4652   001C84                     __end_of___xxtofl:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function ___lwdiv *****************
  4656 ;; Defined at:
  4657 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  dividend        2   10[COMRAM] unsigned int 
  4660 ;;  divisor         2   12[COMRAM] unsigned int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  quotient        2   14[COMRAM] unsigned int 
  4663 ;;  counter         1   16[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  2   10[COMRAM] unsigned int 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;Total ram usage:        7 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 4
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text31
  4688   002760                     __ptext31:
  4689                           	callstack 0
  4690   002760                     ___lwdiv:
  4691                           	callstack 26
  4692   002760  0E00               	movlw	0
  4693   002762  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  4694   002764  0E00               	movlw	0
  4695   002766  6E0F               	movwf	___lwdiv@quotient^0,c
  4696   002768  500D               	movf	___lwdiv@divisor^0,w,c
  4697   00276A  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4698   00276C  B4D8               	btfsc	status,2,c
  4699   00276E  EFBB  F013         	goto	u3851
  4700   002772  EFBD  F013         	goto	u3850
  4701   002776                     u3851:
  4702   002776  EFE5  F013         	goto	l1483
  4703   00277A                     u3850:
  4704   00277A  0E01               	movlw	1
  4705   00277C  6E11               	movwf	___lwdiv@counter^0,c
  4706   00277E  EFC5  F013         	goto	l4620
  4707   002782                     l4618:
  4708   002782  90D8               	bcf	status,0,c
  4709   002784  360D               	rlcf	___lwdiv@divisor^0,f,c
  4710   002786  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4711   002788  2A11               	incf	___lwdiv@counter^0,f,c
  4712   00278A                     l4620:
  4713   00278A  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  4714   00278C  EFCA  F013         	goto	u3861
  4715   002790  EFCC  F013         	goto	u3860
  4716   002794                     u3861:
  4717   002794  EFC1  F013         	goto	l4618
  4718   002798                     u3860:
  4719   002798                     l4622:
  4720   002798  90D8               	bcf	status,0,c
  4721   00279A  360F               	rlcf	___lwdiv@quotient^0,f,c
  4722   00279C  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4723   00279E  500D               	movf	___lwdiv@divisor^0,w,c
  4724   0027A0  5C0B               	subwf	___lwdiv@dividend^0,w,c
  4725   0027A2  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  4726   0027A4  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4727   0027A6  A0D8               	btfss	status,0,c
  4728   0027A8  EFD8  F013         	goto	u3871
  4729   0027AC  EFDA  F013         	goto	u3870
  4730   0027B0                     u3871:
  4731   0027B0  EFDF  F013         	goto	l4630
  4732   0027B4                     u3870:
  4733   0027B4  500D               	movf	___lwdiv@divisor^0,w,c
  4734   0027B6  5E0B               	subwf	___lwdiv@dividend^0,f,c
  4735   0027B8  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  4736   0027BA  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4737   0027BC  800F               	bsf	___lwdiv@quotient^0,0,c
  4738   0027BE                     l4630:
  4739   0027BE  90D8               	bcf	status,0,c
  4740   0027C0  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4741   0027C2  320D               	rrcf	___lwdiv@divisor^0,f,c
  4742   0027C4  2E11               	decfsz	___lwdiv@counter^0,f,c
  4743   0027C6  EFCC  F013         	goto	l4622
  4744   0027CA                     l1483:
  4745   0027CA  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  4746   0027CE  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4747   0027D2  0012               	return		;funcret
  4748   0027D4                     __end_of___lwdiv:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function ___fltol *****************
  4752 ;; Defined at:
  4753 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  f1              4   49[COMRAM] unsigned int 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  exp1            1    5[BANK0 ] unsigned char 
  4758 ;;  sign1           1    4[BANK0 ] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  4   49[COMRAM] long 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:       10 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; Hardware stack levels required when called: 4
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_main
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text32
  4783   001EF2                     __ptext32:
  4784                           	callstack 0
  4785   001EF2                     ___fltol:
  4786                           	callstack 26
  4787   001EF2  3434               	rlcf	(___fltol@f1+2)^0,w,c
  4788   001EF4  3435               	rlcf	(___fltol@f1+3)^0,w,c
  4789   001EF6  0100               	movlb	0	; () banked
  4790   001EF8  6FE7               	movwf	___fltol@exp1& (0+255),b
  4791   001EFA  51E7               	movf	___fltol@exp1& (0+255),w,b
  4792   001EFC  A4D8               	btfss	status,2,c
  4793   001EFE  EF83  F00F         	goto	u5451
  4794   001F02  EF85  F00F         	goto	u5450
  4795   001F06                     u5451:
  4796   001F06  EF8F  F00F         	goto	l5704
  4797   001F0A                     u5450:
  4798   001F0A                     l5700:
  4799                           
  4800                           ; BSR set to: 0
  4801   001F0A  0E00               	movlw	0
  4802   001F0C  6E32               	movwf	?___fltol^0,c
  4803   001F0E  0E00               	movlw	0
  4804   001F10  6E33               	movwf	(?___fltol+1)^0,c
  4805   001F12  0E00               	movlw	0
  4806   001F14  6E34               	movwf	(?___fltol+2)^0,c
  4807   001F16  0E00               	movlw	0
  4808   001F18  6E35               	movwf	(?___fltol+3)^0,c
  4809   001F1A  EFFC  F00F         	goto	l1289
  4810   001F1E                     l5704:
  4811                           
  4812                           ; BSR set to: 0
  4813   001F1E  C032  F0E2         	movff	___fltol@f1,??___fltol
  4814   001F22  C033  F0E3         	movff	___fltol@f1+1,??___fltol+1
  4815   001F26  C034  F0E4         	movff	___fltol@f1+2,??___fltol+2
  4816   001F2A  C035  F0E5         	movff	___fltol@f1+3,??___fltol+3
  4817   001F2E  0E20               	movlw	32
  4818   001F30  EF9F  F00F         	goto	u5460
  4819   001F34                     u5465:
  4820   001F34  90D8               	bcf	status,0,c
  4821   001F36  33E5               	rrcf	(??___fltol+3)& (0+255),f,b
  4822   001F38  33E4               	rrcf	(??___fltol+2)& (0+255),f,b
  4823   001F3A  33E3               	rrcf	(??___fltol+1)& (0+255),f,b
  4824   001F3C  33E2               	rrcf	??___fltol& (0+255),f,b
  4825   001F3E                     u5460:
  4826   001F3E  2EE8               	decfsz	wreg,f,c
  4827   001F40  EF9A  F00F         	goto	u5465
  4828   001F44  51E2               	movf	??___fltol& (0+255),w,b
  4829   001F46  6FE6               	movwf	___fltol@sign1& (0+255),b
  4830   001F48                     
  4831                           ; BSR set to: 0
  4832   001F48  8E34               	bsf	(___fltol@f1+2)^0,7,c
  4833   001F4A                     
  4834                           ; BSR set to: 0
  4835   001F4A  0EFF               	movlw	255
  4836   001F4C  1632               	andwf	___fltol@f1^0,f,c
  4837   001F4E  0EFF               	movlw	255
  4838   001F50  1633               	andwf	(___fltol@f1+1)^0,f,c
  4839   001F52  0EFF               	movlw	255
  4840   001F54  1634               	andwf	(___fltol@f1+2)^0,f,c
  4841   001F56  0E00               	movlw	0
  4842   001F58  1635               	andwf	(___fltol@f1+3)^0,f,c
  4843   001F5A                     
  4844                           ; BSR set to: 0
  4845   001F5A  0E96               	movlw	150
  4846   001F5C  5FE7               	subwf	___fltol@exp1& (0+255),f,b
  4847   001F5E                     
  4848                           ; BSR set to: 0
  4849   001F5E  BFE7               	btfsc	___fltol@exp1& (0+255),7,b
  4850   001F60  EFB6  F00F         	goto	u5470
  4851   001F64  EFB4  F00F         	goto	u5471
  4852   001F68                     u5471:
  4853   001F68  EFCC  F00F         	goto	l5724
  4854   001F6C                     u5470:
  4855   001F6C                     
  4856                           ; BSR set to: 0
  4857   001F6C  51E7               	movf	___fltol@exp1& (0+255),w,b
  4858   001F6E  0A80               	xorlw	128
  4859   001F70  0F97               	addlw	151
  4860   001F72  B0D8               	btfsc	status,0,c
  4861   001F74  EFBE  F00F         	goto	u5481
  4862   001F78  EFC0  F00F         	goto	u5480
  4863   001F7C                     u5481:
  4864   001F7C  EFC2  F00F         	goto	l5720
  4865   001F80                     u5480:
  4866   001F80  EF85  F00F         	goto	l5700
  4867   001F84                     l5720:
  4868                           
  4869                           ; BSR set to: 0
  4870   001F84  90D8               	bcf	status,0,c
  4871   001F86  3235               	rrcf	(___fltol@f1+3)^0,f,c
  4872   001F88  3234               	rrcf	(___fltol@f1+2)^0,f,c
  4873   001F8A  3233               	rrcf	(___fltol@f1+1)^0,f,c
  4874   001F8C  3232               	rrcf	___fltol@f1^0,f,c
  4875   001F8E                     
  4876                           ; BSR set to: 0
  4877   001F8E  3FE7               	incfsz	___fltol@exp1& (0+255),f,b
  4878   001F90  EFC2  F00F         	goto	l5720
  4879   001F94  EFE4  F00F         	goto	l5734
  4880   001F98                     l5724:
  4881                           
  4882                           ; BSR set to: 0
  4883   001F98  0E1F               	movlw	31
  4884   001F9A  65E7               	cpfsgt	___fltol@exp1& (0+255),b
  4885   001F9C  EFD2  F00F         	goto	u5491
  4886   001FA0  EFD4  F00F         	goto	u5490
  4887   001FA4                     u5491:
  4888   001FA4  EFDC  F00F         	goto	l5732
  4889   001FA8                     u5490:
  4890   001FA8  EF85  F00F         	goto	l5700
  4891   001FAC                     l5730:
  4892                           
  4893                           ; BSR set to: 0
  4894   001FAC  90D8               	bcf	status,0,c
  4895   001FAE  3632               	rlcf	___fltol@f1^0,f,c
  4896   001FB0  3633               	rlcf	(___fltol@f1+1)^0,f,c
  4897   001FB2  3634               	rlcf	(___fltol@f1+2)^0,f,c
  4898   001FB4  3635               	rlcf	(___fltol@f1+3)^0,f,c
  4899   001FB6  07E7               	decf	___fltol@exp1& (0+255),f,b
  4900   001FB8                     l5732:
  4901                           
  4902                           ; BSR set to: 0
  4903   001FB8  51E7               	movf	___fltol@exp1& (0+255),w,b
  4904   001FBA  A4D8               	btfss	status,2,c
  4905   001FBC  EFE2  F00F         	goto	u5501
  4906   001FC0  EFE4  F00F         	goto	u5500
  4907   001FC4                     u5501:
  4908   001FC4  EFD6  F00F         	goto	l5730
  4909   001FC8                     u5500:
  4910   001FC8                     l5734:
  4911                           
  4912                           ; BSR set to: 0
  4913   001FC8  51E6               	movf	___fltol@sign1& (0+255),w,b
  4914   001FCA  B4D8               	btfsc	status,2,c
  4915   001FCC  EFEA  F00F         	goto	u5511
  4916   001FD0  EFEC  F00F         	goto	u5510
  4917   001FD4                     u5511:
  4918   001FD4  EFF4  F00F         	goto	l5738
  4919   001FD8                     u5510:
  4920   001FD8                     
  4921                           ; BSR set to: 0
  4922   001FD8  1E35               	comf	(___fltol@f1+3)^0,f,c
  4923   001FDA  1E34               	comf	(___fltol@f1+2)^0,f,c
  4924   001FDC  1E33               	comf	(___fltol@f1+1)^0,f,c
  4925   001FDE  6C32               	negf	___fltol@f1^0,c
  4926   001FE0  0E00               	movlw	0
  4927   001FE2  2233               	addwfc	(___fltol@f1+1)^0,f,c
  4928   001FE4  2234               	addwfc	(___fltol@f1+2)^0,f,c
  4929   001FE6  2235               	addwfc	(___fltol@f1+3)^0,f,c
  4930   001FE8                     l5738:
  4931                           
  4932                           ; BSR set to: 0
  4933   001FE8  C032  F032         	movff	___fltol@f1,?___fltol
  4934   001FEC  C033  F033         	movff	___fltol@f1+1,?___fltol+1
  4935   001FF0  C034  F034         	movff	___fltol@f1+2,?___fltol+2
  4936   001FF4  C035  F035         	movff	___fltol@f1+3,?___fltol+3
  4937   001FF8                     l1289:
  4938                           
  4939                           ; BSR set to: 0
  4940   001FF8  0012               	return		;funcret
  4941   001FFA                     __end_of___fltol:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function ___flmul *****************
  4945 ;; Defined at:
  4946 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  b               4   24[COMRAM] long 
  4949 ;;  a               4   28[COMRAM] long 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  prod            4   43[COMRAM] struct .
  4952 ;;  grs             4   37[COMRAM] unsigned long 
  4953 ;;  temp            2   47[COMRAM] struct .
  4954 ;;  bexp            1   42[COMRAM] unsigned char 
  4955 ;;  aexp            1   41[COMRAM] unsigned char 
  4956 ;;  sign            1   36[COMRAM] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  4   24[COMRAM] unsigned char 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, prodl, prodh
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4966 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;Total ram usage:       25 bytes
  4971 ;; Hardware stack levels used: 1
  4972 ;; Hardware stack levels required when called: 4
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_main
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text33
  4981   00103A                     __ptext33:
  4982                           	callstack 0
  4983   00103A                     ___flmul:
  4984                           	callstack 26
  4985   00103A  501C               	movf	(___flmul@b+3)^0,w,c
  4986   00103C  0B80               	andlw	128
  4987   00103E  6E25               	movwf	___flmul@sign^0,c
  4988   001040  501C               	movf	(___flmul@b+3)^0,w,c
  4989   001042  241C               	addwf	(___flmul@b+3)^0,w,c
  4990   001044  6E2B               	movwf	___flmul@bexp^0,c
  4991   001046  AE1B               	btfss	(___flmul@b+2)^0,7,c
  4992   001048  EF28  F008         	goto	u3591
  4993   00104C  EF2A  F008         	goto	u3590
  4994   001050                     u3591:
  4995   001050  EF2B  F008         	goto	l4444
  4996   001054                     u3590:
  4997   001054  802B               	bsf	___flmul@bexp^0,0,c
  4998   001056                     l4444:
  4999   001056  502B               	movf	___flmul@bexp^0,w,c
  5000   001058  B4D8               	btfsc	status,2,c
  5001   00105A  EF31  F008         	goto	u3601
  5002   00105E  EF33  F008         	goto	u3600
  5003   001062                     u3601:
  5004   001062  EF46  F008         	goto	l4452
  5005   001066                     u3600:
  5006   001066  282B               	incf	___flmul@bexp^0,w,c
  5007   001068  A4D8               	btfss	status,2,c
  5008   00106A  EF39  F008         	goto	u3611
  5009   00106E  EF3B  F008         	goto	u3610
  5010   001072                     u3611:
  5011   001072  EF43  F008         	goto	l4450
  5012   001076                     u3610:
  5013   001076  0E00               	movlw	0
  5014   001078  6E19               	movwf	___flmul@b^0,c
  5015   00107A  0E00               	movlw	0
  5016   00107C  6E1A               	movwf	(___flmul@b+1)^0,c
  5017   00107E  0E00               	movlw	0
  5018   001080  6E1B               	movwf	(___flmul@b+2)^0,c
  5019   001082  0E00               	movlw	0
  5020   001084  6E1C               	movwf	(___flmul@b+3)^0,c
  5021   001086                     l4450:
  5022   001086  8E1B               	bsf	(___flmul@b+2)^0,7,c
  5023   001088  EF4E  F008         	goto	l4454
  5024   00108C                     l4452:
  5025   00108C  0E00               	movlw	0
  5026   00108E  6E19               	movwf	___flmul@b^0,c
  5027   001090  0E00               	movlw	0
  5028   001092  6E1A               	movwf	(___flmul@b+1)^0,c
  5029   001094  0E00               	movlw	0
  5030   001096  6E1B               	movwf	(___flmul@b+2)^0,c
  5031   001098  0E00               	movlw	0
  5032   00109A  6E1C               	movwf	(___flmul@b+3)^0,c
  5033   00109C                     l4454:
  5034   00109C  5020               	movf	(___flmul@a+3)^0,w,c
  5035   00109E  0B80               	andlw	128
  5036   0010A0  1A25               	xorwf	___flmul@sign^0,f,c
  5037   0010A2  5020               	movf	(___flmul@a+3)^0,w,c
  5038   0010A4  2420               	addwf	(___flmul@a+3)^0,w,c
  5039   0010A6  6E2A               	movwf	___flmul@aexp^0,c
  5040   0010A8  AE1F               	btfss	(___flmul@a+2)^0,7,c
  5041   0010AA  EF59  F008         	goto	u3621
  5042   0010AE  EF5B  F008         	goto	u3620
  5043   0010B2                     u3621:
  5044   0010B2  EF5C  F008         	goto	l4462
  5045   0010B6                     u3620:
  5046   0010B6  802A               	bsf	___flmul@aexp^0,0,c
  5047   0010B8                     l4462:
  5048   0010B8  502A               	movf	___flmul@aexp^0,w,c
  5049   0010BA  B4D8               	btfsc	status,2,c
  5050   0010BC  EF62  F008         	goto	u3631
  5051   0010C0  EF64  F008         	goto	u3630
  5052   0010C4                     u3631:
  5053   0010C4  EF77  F008         	goto	l4470
  5054   0010C8                     u3630:
  5055   0010C8  282A               	incf	___flmul@aexp^0,w,c
  5056   0010CA  A4D8               	btfss	status,2,c
  5057   0010CC  EF6A  F008         	goto	u3641
  5058   0010D0  EF6C  F008         	goto	u3640
  5059   0010D4                     u3641:
  5060   0010D4  EF74  F008         	goto	l4468
  5061   0010D8                     u3640:
  5062   0010D8  0E00               	movlw	0
  5063   0010DA  6E1D               	movwf	___flmul@a^0,c
  5064   0010DC  0E00               	movlw	0
  5065   0010DE  6E1E               	movwf	(___flmul@a+1)^0,c
  5066   0010E0  0E00               	movlw	0
  5067   0010E2  6E1F               	movwf	(___flmul@a+2)^0,c
  5068   0010E4  0E00               	movlw	0
  5069   0010E6  6E20               	movwf	(___flmul@a+3)^0,c
  5070   0010E8                     l4468:
  5071   0010E8  8E1F               	bsf	(___flmul@a+2)^0,7,c
  5072   0010EA  EF7F  F008         	goto	l1606
  5073   0010EE                     l4470:
  5074   0010EE  0E00               	movlw	0
  5075   0010F0  6E1D               	movwf	___flmul@a^0,c
  5076   0010F2  0E00               	movlw	0
  5077   0010F4  6E1E               	movwf	(___flmul@a+1)^0,c
  5078   0010F6  0E00               	movlw	0
  5079   0010F8  6E1F               	movwf	(___flmul@a+2)^0,c
  5080   0010FA  0E00               	movlw	0
  5081   0010FC  6E20               	movwf	(___flmul@a+3)^0,c
  5082   0010FE                     l1606:
  5083   0010FE  502A               	movf	___flmul@aexp^0,w,c
  5084   001100  B4D8               	btfsc	status,2,c
  5085   001102  EF85  F008         	goto	u3651
  5086   001106  EF87  F008         	goto	u3650
  5087   00110A                     u3651:
  5088   00110A  EF8F  F008         	goto	l4474
  5089   00110E                     u3650:
  5090   00110E  502B               	movf	___flmul@bexp^0,w,c
  5091   001110  A4D8               	btfss	status,2,c
  5092   001112  EF8D  F008         	goto	u3661
  5093   001116  EF8F  F008         	goto	u3660
  5094   00111A                     u3661:
  5095   00111A  EF99  F008         	goto	l4478
  5096   00111E                     u3660:
  5097   00111E                     l4474:
  5098   00111E  0E00               	movlw	0
  5099   001120  6E19               	movwf	?___flmul^0,c
  5100   001122  0E00               	movlw	0
  5101   001124  6E1A               	movwf	(?___flmul+1)^0,c
  5102   001126  0E00               	movlw	0
  5103   001128  6E1B               	movwf	(?___flmul+2)^0,c
  5104   00112A  0E00               	movlw	0
  5105   00112C  6E1C               	movwf	(?___flmul+3)^0,c
  5106   00112E  EF31  F00A         	goto	l1610
  5107   001132                     l4478:
  5108   001132  501F               	movf	(___flmul@a+2)^0,w,c
  5109   001134  0219               	mulwf	___flmul@b^0,c
  5110   001136  CFF3 F030          	movff	prodl,___flmul@temp
  5111   00113A  CFF4 F031          	movff	prodh,___flmul@temp+1
  5112   00113E  5030               	movf	___flmul@temp^0,w,c
  5113   001140  6E26               	movwf	___flmul@grs^0,c
  5114   001142  6A27               	clrf	(___flmul@grs+1)^0,c
  5115   001144  6A28               	clrf	(___flmul@grs+2)^0,c
  5116   001146  6A29               	clrf	(___flmul@grs+3)^0,c
  5117   001148  5031               	movf	(___flmul@temp+1)^0,w,c
  5118   00114A  6E2C               	movwf	___flmul@prod^0,c
  5119   00114C  6A2D               	clrf	(___flmul@prod+1)^0,c
  5120   00114E  6A2E               	clrf	(___flmul@prod+2)^0,c
  5121   001150  6A2F               	clrf	(___flmul@prod+3)^0,c
  5122   001152  501E               	movf	(___flmul@a+1)^0,w,c
  5123   001154  021A               	mulwf	(___flmul@b+1)^0,c
  5124   001156  CFF3 F030          	movff	prodl,___flmul@temp
  5125   00115A  CFF4 F031          	movff	prodh,___flmul@temp+1
  5126   00115E  5030               	movf	___flmul@temp^0,w,c
  5127   001160  2626               	addwf	___flmul@grs^0,f,c
  5128   001162  0E00               	movlw	0
  5129   001164  2227               	addwfc	(___flmul@grs+1)^0,f,c
  5130   001166  2228               	addwfc	(___flmul@grs+2)^0,f,c
  5131   001168  2229               	addwfc	(___flmul@grs+3)^0,f,c
  5132   00116A  5031               	movf	(___flmul@temp+1)^0,w,c
  5133   00116C  262C               	addwf	___flmul@prod^0,f,c
  5134   00116E  0E00               	movlw	0
  5135   001170  222D               	addwfc	(___flmul@prod+1)^0,f,c
  5136   001172  222E               	addwfc	(___flmul@prod+2)^0,f,c
  5137   001174  222F               	addwfc	(___flmul@prod+3)^0,f,c
  5138   001176  501D               	movf	___flmul@a^0,w,c
  5139   001178  021B               	mulwf	(___flmul@b+2)^0,c
  5140   00117A  CFF3 F030          	movff	prodl,___flmul@temp
  5141   00117E  CFF4 F031          	movff	prodh,___flmul@temp+1
  5142   001182  5030               	movf	___flmul@temp^0,w,c
  5143   001184  2626               	addwf	___flmul@grs^0,f,c
  5144   001186  0E00               	movlw	0
  5145   001188  2227               	addwfc	(___flmul@grs+1)^0,f,c
  5146   00118A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  5147   00118C  2229               	addwfc	(___flmul@grs+3)^0,f,c
  5148   00118E  5031               	movf	(___flmul@temp+1)^0,w,c
  5149   001190  262C               	addwf	___flmul@prod^0,f,c
  5150   001192  0E00               	movlw	0
  5151   001194  222D               	addwfc	(___flmul@prod+1)^0,f,c
  5152   001196  222E               	addwfc	(___flmul@prod+2)^0,f,c
  5153   001198  222F               	addwfc	(___flmul@prod+3)^0,f,c
  5154   00119A  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  5155   00119E  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  5156   0011A2  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  5157   0011A6  6A26               	clrf	___flmul@grs^0,c
  5158   0011A8  501D               	movf	___flmul@a^0,w,c
  5159   0011AA  021A               	mulwf	(___flmul@b+1)^0,c
  5160   0011AC  CFF3 F030          	movff	prodl,___flmul@temp
  5161   0011B0  CFF4 F031          	movff	prodh,___flmul@temp+1
  5162   0011B4  5030               	movf	___flmul@temp^0,w,c
  5163   0011B6  2626               	addwf	___flmul@grs^0,f,c
  5164   0011B8  5031               	movf	(___flmul@temp+1)^0,w,c
  5165   0011BA  2227               	addwfc	(___flmul@grs+1)^0,f,c
  5166   0011BC  0E00               	movlw	0
  5167   0011BE  2228               	addwfc	(___flmul@grs+2)^0,f,c
  5168   0011C0  0E00               	movlw	0
  5169   0011C2  2229               	addwfc	(___flmul@grs+3)^0,f,c
  5170   0011C4  501E               	movf	(___flmul@a+1)^0,w,c
  5171   0011C6  0219               	mulwf	___flmul@b^0,c
  5172   0011C8  CFF3 F030          	movff	prodl,___flmul@temp
  5173   0011CC  CFF4 F031          	movff	prodh,___flmul@temp+1
  5174   0011D0  5030               	movf	___flmul@temp^0,w,c
  5175   0011D2  2626               	addwf	___flmul@grs^0,f,c
  5176   0011D4  5031               	movf	(___flmul@temp+1)^0,w,c
  5177   0011D6  2227               	addwfc	(___flmul@grs+1)^0,f,c
  5178   0011D8  0E00               	movlw	0
  5179   0011DA  2228               	addwfc	(___flmul@grs+2)^0,f,c
  5180   0011DC  0E00               	movlw	0
  5181   0011DE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  5182   0011E0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  5183   0011E4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  5184   0011E8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  5185   0011EC  6A26               	clrf	___flmul@grs^0,c
  5186   0011EE  501D               	movf	___flmul@a^0,w,c
  5187   0011F0  0219               	mulwf	___flmul@b^0,c
  5188   0011F2  CFF3 F030          	movff	prodl,___flmul@temp
  5189   0011F6  CFF4 F031          	movff	prodh,___flmul@temp+1
  5190   0011FA  5030               	movf	___flmul@temp^0,w,c
  5191   0011FC  2626               	addwf	___flmul@grs^0,f,c
  5192   0011FE  5031               	movf	(___flmul@temp+1)^0,w,c
  5193   001200  2227               	addwfc	(___flmul@grs+1)^0,f,c
  5194   001202  0E00               	movlw	0
  5195   001204  2228               	addwfc	(___flmul@grs+2)^0,f,c
  5196   001206  0E00               	movlw	0
  5197   001208  2229               	addwfc	(___flmul@grs+3)^0,f,c
  5198   00120A  501F               	movf	(___flmul@a+2)^0,w,c
  5199   00120C  021A               	mulwf	(___flmul@b+1)^0,c
  5200   00120E  CFF3 F030          	movff	prodl,___flmul@temp
  5201   001212  CFF4 F031          	movff	prodh,___flmul@temp+1
  5202   001216  5030               	movf	___flmul@temp^0,w,c
  5203   001218  262C               	addwf	___flmul@prod^0,f,c
  5204   00121A  5031               	movf	(___flmul@temp+1)^0,w,c
  5205   00121C  222D               	addwfc	(___flmul@prod+1)^0,f,c
  5206   00121E  0E00               	movlw	0
  5207   001220  222E               	addwfc	(___flmul@prod+2)^0,f,c
  5208   001222  0E00               	movlw	0
  5209   001224  222F               	addwfc	(___flmul@prod+3)^0,f,c
  5210   001226  501E               	movf	(___flmul@a+1)^0,w,c
  5211   001228  021B               	mulwf	(___flmul@b+2)^0,c
  5212   00122A  CFF3 F030          	movff	prodl,___flmul@temp
  5213   00122E  CFF4 F031          	movff	prodh,___flmul@temp+1
  5214   001232  5030               	movf	___flmul@temp^0,w,c
  5215   001234  262C               	addwf	___flmul@prod^0,f,c
  5216   001236  5031               	movf	(___flmul@temp+1)^0,w,c
  5217   001238  222D               	addwfc	(___flmul@prod+1)^0,f,c
  5218   00123A  0E00               	movlw	0
  5219   00123C  222E               	addwfc	(___flmul@prod+2)^0,f,c
  5220   00123E  0E00               	movlw	0
  5221   001240  222F               	addwfc	(___flmul@prod+3)^0,f,c
  5222   001242  501F               	movf	(___flmul@a+2)^0,w,c
  5223   001244  021B               	mulwf	(___flmul@b+2)^0,c
  5224   001246  CFF3 F030          	movff	prodl,___flmul@temp
  5225   00124A  CFF4 F031          	movff	prodh,___flmul@temp+1
  5226   00124E  5030               	movf	___flmul@temp^0,w,c
  5227   001250  6E21               	movwf	??___flmul^0,c
  5228   001252  5031               	movf	(___flmul@temp+1)^0,w,c
  5229   001254  6E22               	movwf	(??___flmul+1)^0,c
  5230   001256  6A23               	clrf	(??___flmul+2)^0,c
  5231   001258  6A24               	clrf	(??___flmul+3)^0,c
  5232   00125A  C023  F024         	movff	??___flmul+2,??___flmul+3
  5233   00125E  C022  F023         	movff	??___flmul+1,??___flmul+2
  5234   001262  C021  F022         	movff	??___flmul,??___flmul+1
  5235   001266  6A21               	clrf	??___flmul^0,c
  5236   001268  5021               	movf	??___flmul^0,w,c
  5237   00126A  262C               	addwf	___flmul@prod^0,f,c
  5238   00126C  5022               	movf	(??___flmul+1)^0,w,c
  5239   00126E  222D               	addwfc	(___flmul@prod+1)^0,f,c
  5240   001270  5023               	movf	(??___flmul+2)^0,w,c
  5241   001272  222E               	addwfc	(___flmul@prod+2)^0,f,c
  5242   001274  5024               	movf	(??___flmul+3)^0,w,c
  5243   001276  222F               	addwfc	(___flmul@prod+3)^0,f,c
  5244   001278  C026  F021         	movff	___flmul@grs,??___flmul
  5245   00127C  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  5246   001280  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  5247   001284  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  5248   001288  0E19               	movlw	25
  5249   00128A  EF4C  F009         	goto	u3670
  5250   00128E                     u3675:
  5251   00128E  90D8               	bcf	status,0,c
  5252   001290  3224               	rrcf	(??___flmul+3)^0,f,c
  5253   001292  3223               	rrcf	(??___flmul+2)^0,f,c
  5254   001294  3222               	rrcf	(??___flmul+1)^0,f,c
  5255   001296  3221               	rrcf	??___flmul^0,f,c
  5256   001298                     u3670:
  5257   001298  2EE8               	decfsz	wreg,f,c
  5258   00129A  EF47  F009         	goto	u3675
  5259   00129E  5021               	movf	??___flmul^0,w,c
  5260   0012A0  262C               	addwf	___flmul@prod^0,f,c
  5261   0012A2  5022               	movf	(??___flmul+1)^0,w,c
  5262   0012A4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  5263   0012A6  5023               	movf	(??___flmul+2)^0,w,c
  5264   0012A8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  5265   0012AA  5024               	movf	(??___flmul+3)^0,w,c
  5266   0012AC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  5267   0012AE  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  5268   0012B2  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  5269   0012B6  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  5270   0012BA  6A26               	clrf	___flmul@grs^0,c
  5271   0012BC  502A               	movf	___flmul@aexp^0,w,c
  5272   0012BE  C02B  F021         	movff	___flmul@bexp,??___flmul
  5273   0012C2  6A22               	clrf	(??___flmul+1)^0,c
  5274   0012C4  2621               	addwf	??___flmul^0,f,c
  5275   0012C6  0E00               	movlw	0
  5276   0012C8  2222               	addwfc	(??___flmul+1)^0,f,c
  5277   0012CA  0E82               	movlw	130
  5278   0012CC  2421               	addwf	??___flmul^0,w,c
  5279   0012CE  6E30               	movwf	___flmul@temp^0,c
  5280   0012D0  0EFF               	movlw	255
  5281   0012D2  2022               	addwfc	(??___flmul+1)^0,w,c
  5282   0012D4  6E31               	movwf	(___flmul@temp+1)^0,c
  5283   0012D6  EF82  F009         	goto	l4526
  5284   0012DA                     l4520:
  5285   0012DA  90D8               	bcf	status,0,c
  5286   0012DC  362C               	rlcf	___flmul@prod^0,f,c
  5287   0012DE  362D               	rlcf	(___flmul@prod+1)^0,f,c
  5288   0012E0  362E               	rlcf	(___flmul@prod+2)^0,f,c
  5289   0012E2  362F               	rlcf	(___flmul@prod+3)^0,f,c
  5290   0012E4  AE29               	btfss	(___flmul@grs+3)^0,7,c
  5291   0012E6  EF77  F009         	goto	u3681
  5292   0012EA  EF79  F009         	goto	u3680
  5293   0012EE                     u3681:
  5294   0012EE  EF7A  F009         	goto	l1613
  5295   0012F2                     u3680:
  5296   0012F2  802C               	bsf	___flmul@prod^0,0,c
  5297   0012F4                     l1613:
  5298   0012F4  90D8               	bcf	status,0,c
  5299   0012F6  3626               	rlcf	___flmul@grs^0,f,c
  5300   0012F8  3627               	rlcf	(___flmul@grs+1)^0,f,c
  5301   0012FA  3628               	rlcf	(___flmul@grs+2)^0,f,c
  5302   0012FC  3629               	rlcf	(___flmul@grs+3)^0,f,c
  5303   0012FE  0630               	decf	___flmul@temp^0,f,c
  5304   001300  A0D8               	btfss	status,0,c
  5305   001302  0631               	decf	(___flmul@temp+1)^0,f,c
  5306   001304                     l4526:
  5307   001304  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  5308   001306  EF87  F009         	goto	u3691
  5309   00130A  EF89  F009         	goto	u3690
  5310   00130E                     u3691:
  5311   00130E  EF6D  F009         	goto	l4520
  5312   001312                     u3690:
  5313   001312  0E00               	movlw	0
  5314   001314  6E2A               	movwf	___flmul@aexp^0,c
  5315   001316  AE29               	btfss	(___flmul@grs+3)^0,7,c
  5316   001318  EF90  F009         	goto	u3701
  5317   00131C  EF92  F009         	goto	u3700
  5318   001320                     u3701:
  5319   001320  EFB6  F009         	goto	l1615
  5320   001324                     u3700:
  5321   001324  0EFF               	movlw	255
  5322   001326  1426               	andwf	___flmul@grs^0,w,c
  5323   001328  6E21               	movwf	??___flmul^0,c
  5324   00132A  0EFF               	movlw	255
  5325   00132C  1427               	andwf	(___flmul@grs+1)^0,w,c
  5326   00132E  6E22               	movwf	(??___flmul+1)^0,c
  5327   001330  0EFF               	movlw	255
  5328   001332  1428               	andwf	(___flmul@grs+2)^0,w,c
  5329   001334  6E23               	movwf	(??___flmul+2)^0,c
  5330   001336  0E7F               	movlw	127
  5331   001338  1429               	andwf	(___flmul@grs+3)^0,w,c
  5332   00133A  6E24               	movwf	(??___flmul+3)^0,c
  5333   00133C  5021               	movf	??___flmul^0,w,c
  5334   00133E  1022               	iorwf	(??___flmul+1)^0,w,c
  5335   001340  1023               	iorwf	(??___flmul+2)^0,w,c
  5336   001342  1024               	iorwf	(??___flmul+3)^0,w,c
  5337   001344  B4D8               	btfsc	status,2,c
  5338   001346  EFA7  F009         	goto	u3711
  5339   00134A  EFA9  F009         	goto	u3710
  5340   00134E                     u3711:
  5341   00134E  EFAD  F009         	goto	l1616
  5342   001352                     u3710:
  5343   001352                     l4534:
  5344   001352  0E01               	movlw	1
  5345   001354  6E2A               	movwf	___flmul@aexp^0,c
  5346   001356  EFB6  F009         	goto	l1615
  5347   00135A                     l1616:
  5348   00135A  A02C               	btfss	___flmul@prod^0,0,c
  5349   00135C  EFB2  F009         	goto	u3721
  5350   001360  EFB4  F009         	goto	u3720
  5351   001364                     u3721:
  5352   001364  EFB6  F009         	goto	l1615
  5353   001368                     u3720:
  5354   001368  EFA9  F009         	goto	l4534
  5355   00136C                     l1615:
  5356   00136C  502A               	movf	___flmul@aexp^0,w,c
  5357   00136E  B4D8               	btfsc	status,2,c
  5358   001370  EFBC  F009         	goto	u3731
  5359   001374  EFBE  F009         	goto	u3730
  5360   001378                     u3731:
  5361   001378  EFE2  F009         	goto	l4546
  5362   00137C                     u3730:
  5363   00137C  0E01               	movlw	1
  5364   00137E  262C               	addwf	___flmul@prod^0,f,c
  5365   001380  0E00               	movlw	0
  5366   001382  222D               	addwfc	(___flmul@prod+1)^0,f,c
  5367   001384  222E               	addwfc	(___flmul@prod+2)^0,f,c
  5368   001386  222F               	addwfc	(___flmul@prod+3)^0,f,c
  5369   001388  A02F               	btfss	(___flmul@prod+3)^0,0,c
  5370   00138A  EFC9  F009         	goto	u3741
  5371   00138E  EFCB  F009         	goto	u3740
  5372   001392                     u3741:
  5373   001392  EFE2  F009         	goto	l4546
  5374   001396                     u3740:
  5375   001396  C02C  F021         	movff	___flmul@prod,??___flmul
  5376   00139A  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  5377   00139E  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  5378   0013A2  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  5379   0013A6  3424               	rlcf	(??___flmul+3)^0,w,c
  5380   0013A8  3224               	rrcf	(??___flmul+3)^0,f,c
  5381   0013AA  3223               	rrcf	(??___flmul+2)^0,f,c
  5382   0013AC  3222               	rrcf	(??___flmul+1)^0,f,c
  5383   0013AE  3221               	rrcf	??___flmul^0,f,c
  5384   0013B0  C021  F02C         	movff	??___flmul,___flmul@prod
  5385   0013B4  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  5386   0013B8  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  5387   0013BC  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  5388   0013C0  4A30               	infsnz	___flmul@temp^0,f,c
  5389   0013C2  2A31               	incf	(___flmul@temp+1)^0,f,c
  5390   0013C4                     l4546:
  5391   0013C4  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  5392   0013C6  EFED  F009         	goto	u3751
  5393   0013CA  5031               	movf	(___flmul@temp+1)^0,w,c
  5394   0013CC  E108               	bnz	u3750
  5395   0013CE  2830               	incf	___flmul@temp^0,w,c
  5396   0013D0  A0D8               	btfss	status,0,c
  5397   0013D2  EFED  F009         	goto	u3751
  5398   0013D6  EFEF  F009         	goto	u3750
  5399   0013DA                     u3751:
  5400   0013DA  EFF9  F009         	goto	l4550
  5401   0013DE                     u3750:
  5402   0013DE  0E00               	movlw	0
  5403   0013E0  6E2C               	movwf	___flmul@prod^0,c
  5404   0013E2  0E00               	movlw	0
  5405   0013E4  6E2D               	movwf	(___flmul@prod+1)^0,c
  5406   0013E6  0E80               	movlw	128
  5407   0013E8  6E2E               	movwf	(___flmul@prod+2)^0,c
  5408   0013EA  0E7F               	movlw	127
  5409   0013EC  6E2F               	movwf	(___flmul@prod+3)^0,c
  5410   0013EE  EF27  F00A         	goto	l4562
  5411   0013F2                     l4550:
  5412   0013F2  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  5413   0013F4  EF06  F00A         	goto	u3760
  5414   0013F8  5031               	movf	(___flmul@temp+1)^0,w,c
  5415   0013FA  E106               	bnz	u3761
  5416   0013FC  0430               	decf	___flmul@temp^0,w,c
  5417   0013FE  B0D8               	btfsc	status,0,c
  5418   001400  EF04  F00A         	goto	u3761
  5419   001404  EF06  F00A         	goto	u3760
  5420   001408                     u3761:
  5421   001408  EF12  F00A         	goto	l1623
  5422   00140C                     u3760:
  5423   00140C  0E00               	movlw	0
  5424   00140E  6E2C               	movwf	___flmul@prod^0,c
  5425   001410  0E00               	movlw	0
  5426   001412  6E2D               	movwf	(___flmul@prod+1)^0,c
  5427   001414  0E00               	movlw	0
  5428   001416  6E2E               	movwf	(___flmul@prod+2)^0,c
  5429   001418  0E00               	movlw	0
  5430   00141A  6E2F               	movwf	(___flmul@prod+3)^0,c
  5431   00141C  0E00               	movlw	0
  5432   00141E  6E25               	movwf	___flmul@sign^0,c
  5433   001420  EF27  F00A         	goto	l4562
  5434   001424                     l1623:
  5435   001424  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  5436   001428  0EFF               	movlw	255
  5437   00142A  162C               	andwf	___flmul@prod^0,f,c
  5438   00142C  0EFF               	movlw	255
  5439   00142E  162D               	andwf	(___flmul@prod+1)^0,f,c
  5440   001430  0E7F               	movlw	127
  5441   001432  162E               	andwf	(___flmul@prod+2)^0,f,c
  5442   001434  0E00               	movlw	0
  5443   001436  162F               	andwf	(___flmul@prod+3)^0,f,c
  5444   001438  A02B               	btfss	___flmul@bexp^0,0,c
  5445   00143A  EF21  F00A         	goto	u3771
  5446   00143E  EF23  F00A         	goto	u3770
  5447   001442                     u3771:
  5448   001442  EF24  F00A         	goto	l4560
  5449   001446                     u3770:
  5450   001446  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  5451   001448                     l4560:
  5452   001448  90D8               	bcf	status,0,c
  5453   00144A  302B               	rrcf	___flmul@bexp^0,w,c
  5454   00144C  6E2F               	movwf	(___flmul@prod+3)^0,c
  5455   00144E                     l4562:
  5456   00144E  5025               	movf	___flmul@sign^0,w,c
  5457   001450  122F               	iorwf	(___flmul@prod+3)^0,f,c
  5458   001452  C02C  F019         	movff	___flmul@prod,?___flmul
  5459   001456  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  5460   00145A  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  5461   00145E  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  5462   001462                     l1610:
  5463   001462  0012               	return		;funcret
  5464   001464                     __end_of___flmul:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function _ADC_StartConversion_Interrupt *****************
  5468 ;; Defined at:
  5469 ;;		line 226 in file "MCAL_Layer/ADC/hal_adc.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  _adc            1   17[COMRAM] PTR const struct .
  5472 ;;		 -> adc_1(7), 
  5473 ;;  channel         1   18[COMRAM] enum E3042
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  ret             1   19[COMRAM] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      unsigned char 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:        3 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; Hardware stack levels required when called: 6
  5492 ;; This function calls:
  5493 ;;		_ADC_SelectChannel
  5494 ;;		_ADC_StartConversion
  5495 ;; This function is called by:
  5496 ;;		_main
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text34
  5501   002B20                     __ptext34:
  5502                           	callstack 0
  5503   002B20                     _ADC_StartConversion_Interrupt:
  5504                           	callstack 24
  5505   002B20                     
  5506                           ;MCAL_Layer/ADC/hal_adc.c: 228:     if (((void*)0) == _adc) {
  5507   002B20  5012               	movf	ADC_StartConversion_Interrupt@_adc^0,w,c
  5508   002B22  A4D8               	btfss	status,2,c
  5509   002B24  EF96  F015         	goto	u3571
  5510   002B28  EF98  F015         	goto	u3570
  5511   002B2C                     u3571:
  5512   002B2C  EF9C  F015         	goto	l4406
  5513   002B30                     u3570:
  5514   002B30                     
  5515                           ;MCAL_Layer/ADC/hal_adc.c: 229:         ret = (Std_ReturnType)0x01;
  5516   002B30  0E01               	movlw	1
  5517   002B32  6E14               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5518                           
  5519                           ;MCAL_Layer/ADC/hal_adc.c: 230:     } else {
  5520   002B34  EFA8  F015         	goto	l4408
  5521   002B38                     l4406:
  5522                           
  5523                           ;MCAL_Layer/ADC/hal_adc.c: 232:         ret = ADC_SelectChannel(_adc, channel);
  5524   002B38  C012  F00E         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  5525   002B3C  C013  F00F         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  5526   002B40  EC40  F015         	call	_ADC_SelectChannel	;wreg free
  5527   002B44  6E14               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5528                           
  5529                           ;MCAL_Layer/ADC/hal_adc.c: 234:         ret = ADC_StartConversion(_adc);
  5530   002B46  C012  F00B         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
  5531   002B4A  EC43  F016         	call	_ADC_StartConversion	;wreg free
  5532   002B4E  6E14               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5533   002B50                     l4408:
  5534                           
  5535                           ;MCAL_Layer/ADC/hal_adc.c: 236:     return ret;
  5536   002B50  5014               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  5537   002B52  0012               	return		;funcret
  5538   002B54                     __end_of_ADC_StartConversion_Interrupt:
  5539                           	callstack 0
  5540                           
  5541 ;; *************** function _ADC_StartConversion *****************
  5542 ;; Defined at:
  5543 ;;		line 123 in file "MCAL_Layer/ADC/hal_adc.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  _adc            1   10[COMRAM] PTR const struct .
  5546 ;;		 -> adc_1(7), 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  ret             1   11[COMRAM] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      unsigned char 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;Total ram usage:        2 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 4
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_ADC_StartConversion_Interrupt
  5569 ;;		_ADC_GetConversion_blocking
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text35
  5574   002C86                     __ptext35:
  5575                           	callstack 0
  5576   002C86                     _ADC_StartConversion:
  5577                           	callstack 25
  5578   002C86                     
  5579                           ;MCAL_Layer/ADC/hal_adc.c: 124:     Std_ReturnType ret = (Std_ReturnType)0x00;
  5580   002C86  0E00               	movlw	0
  5581   002C88  6E0C               	movwf	ADC_StartConversion@ret^0,c
  5582                           
  5583                           ;MCAL_Layer/ADC/hal_adc.c: 125:     if (((void*)0) == _adc) {
  5584   002C8A  500B               	movf	ADC_StartConversion@_adc^0,w,c
  5585   002C8C  A4D8               	btfss	status,2,c
  5586   002C8E  EF4B  F016         	goto	u3461
  5587   002C92  EF4D  F016         	goto	u3460
  5588   002C96                     u3461:
  5589   002C96  EF51  F016         	goto	l394
  5590   002C9A                     u3460:
  5591   002C9A                     
  5592                           ;MCAL_Layer/ADC/hal_adc.c: 126:         ret = (Std_ReturnType)0x01;
  5593   002C9A  0E01               	movlw	1
  5594   002C9C  6E0C               	movwf	ADC_StartConversion@ret^0,c
  5595                           
  5596                           ;MCAL_Layer/ADC/hal_adc.c: 127:     } else {
  5597   002C9E  EF52  F016         	goto	l4308
  5598   002CA2                     l394:
  5599                           
  5600                           ;MCAL_Layer/ADC/hal_adc.c: 128:         (ADCON0bits.GO_nDONE = 1);
  5601   002CA2  82C2               	bsf	194,1,c	;volatile
  5602   002CA4                     l4308:
  5603                           
  5604                           ;MCAL_Layer/ADC/hal_adc.c: 130:     return ret;
  5605   002CA4  500C               	movf	ADC_StartConversion@ret^0,w,c
  5606   002CA6  0012               	return		;funcret
  5607   002CA8                     __end_of_ADC_StartConversion:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function _ADC_SelectChannel *****************
  5611 ;; Defined at:
  5612 ;;		line 102 in file "MCAL_Layer/ADC/hal_adc.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  _adc            1   13[COMRAM] PTR const struct .
  5615 ;;		 -> adc_1(7), 
  5616 ;;  channel         1   14[COMRAM] enum E3042
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  ret             1   16[COMRAM] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;Total ram usage:        4 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 5
  5635 ;; This function calls:
  5636 ;;		_adc_input_channel_port_configure
  5637 ;; This function is called by:
  5638 ;;		_ADC_StartConversion_Interrupt
  5639 ;;		_ADC_GetConversion_blocking
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text36
  5644   002A80                     __ptext36:
  5645                           	callstack 0
  5646   002A80                     _ADC_SelectChannel:
  5647                           	callstack 24
  5648   002A80                     
  5649                           ;MCAL_Layer/ADC/hal_adc.c: 103:     Std_ReturnType ret = (Std_ReturnType)0x00;
  5650   002A80  0E00               	movlw	0
  5651   002A82  6E11               	movwf	ADC_SelectChannel@ret^0,c
  5652                           
  5653                           ;MCAL_Layer/ADC/hal_adc.c: 104:     if (((void*)0) == _adc) {
  5654   002A84  500E               	movf	ADC_SelectChannel@_adc^0,w,c
  5655   002A86  A4D8               	btfss	status,2,c
  5656   002A88  EF48  F015         	goto	u3451
  5657   002A8C  EF4A  F015         	goto	u3450
  5658   002A90                     u3451:
  5659   002A90  EF4E  F015         	goto	l4296
  5660   002A94                     u3450:
  5661   002A94                     
  5662                           ;MCAL_Layer/ADC/hal_adc.c: 105:         ret = (Std_ReturnType)0x01;
  5663   002A94  0E01               	movlw	1
  5664   002A96  6E11               	movwf	ADC_SelectChannel@ret^0,c
  5665                           
  5666                           ;MCAL_Layer/ADC/hal_adc.c: 106:     } else {
  5667   002A98  EF5A  F015         	goto	l4300
  5668   002A9C                     l4296:
  5669                           
  5670                           ;MCAL_Layer/ADC/hal_adc.c: 108:         ADCON0bits.CHS = channel;
  5671   002A9C  C00F  F010         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5672   002AA0  4610               	rlncf	??_ADC_SelectChannel^0,f,c
  5673   002AA2  4610               	rlncf	??_ADC_SelectChannel^0,f,c
  5674   002AA4  50C2               	movf	194,w,c	;volatile
  5675   002AA6  1810               	xorwf	??_ADC_SelectChannel^0,w,c
  5676   002AA8  0BC3               	andlw	-61
  5677   002AAA  1810               	xorwf	??_ADC_SelectChannel^0,w,c
  5678   002AAC  6EC2               	movwf	194,c	;volatile
  5679   002AAE                     
  5680                           ;MCAL_Layer/ADC/hal_adc.c: 109:         adc_input_channel_port_configure(channel);
  5681   002AAE  500F               	movf	ADC_SelectChannel@channel^0,w,c
  5682   002AB0  ECFD  F00F         	call	_adc_input_channel_port_configure
  5683   002AB4                     l4300:
  5684                           
  5685                           ;MCAL_Layer/ADC/hal_adc.c: 111:     return ret;
  5686   002AB4  5011               	movf	ADC_SelectChannel@ret^0,w,c
  5687   002AB6  0012               	return		;funcret
  5688   002AB8                     __end_of_ADC_SelectChannel:
  5689                           	callstack 0
  5690                           
  5691 ;; *************** function _adc_input_channel_port_configure *****************
  5692 ;; Defined at:
  5693 ;;		line 258 in file "MCAL_Layer/ADC/hal_adc.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  channel         1    wreg     enum E3042
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  channel         1   12[COMRAM] enum E3042
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;Total ram usage:        3 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 4
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_ADC_Init
  5718 ;;		_ADC_SelectChannel
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text37
  5723   001FFA                     __ptext37:
  5724                           	callstack 0
  5725   001FFA                     _adc_input_channel_port_configure:
  5726                           	callstack 24
  5727                           
  5728                           ;incstack = 0
  5729                           ;adc_input_channel_port_configure@channel stored from wreg
  5730   001FFA  6E0D               	movwf	adc_input_channel_port_configure@channel^0,c
  5731   001FFC                     
  5732                           ;MCAL_Layer/ADC/hal_adc.c: 259:     switch (channel) {
  5733   001FFC  EF27  F010         	goto	l4104
  5734   002000                     l4076:
  5735   002000  8092               	bsf	146,0,c	;volatile
  5736                           
  5737                           ;MCAL_Layer/ADC/hal_adc.c: 261:             break;
  5738   002002  EF68  F010         	goto	l449
  5739   002006                     l4078:
  5740   002006  8292               	bsf	146,1,c	;volatile
  5741                           
  5742                           ;MCAL_Layer/ADC/hal_adc.c: 263:             break;
  5743   002008  EF68  F010         	goto	l449
  5744   00200C                     l4080:
  5745   00200C  8492               	bsf	146,2,c	;volatile
  5746                           
  5747                           ;MCAL_Layer/ADC/hal_adc.c: 265:             break;
  5748   00200E  EF68  F010         	goto	l449
  5749   002012                     l4082:
  5750   002012  8692               	bsf	146,3,c	;volatile
  5751                           
  5752                           ;MCAL_Layer/ADC/hal_adc.c: 267:             break;
  5753   002014  EF68  F010         	goto	l449
  5754   002018                     l4084:
  5755   002018  8A92               	bsf	146,5,c	;volatile
  5756                           
  5757                           ;MCAL_Layer/ADC/hal_adc.c: 269:             break;
  5758   00201A  EF68  F010         	goto	l449
  5759   00201E                     l4086:
  5760   00201E  8096               	bsf	150,0,c	;volatile
  5761                           
  5762                           ;MCAL_Layer/ADC/hal_adc.c: 271:             break;
  5763   002020  EF68  F010         	goto	l449
  5764   002024                     l4088:
  5765   002024  8296               	bsf	150,1,c	;volatile
  5766                           
  5767                           ;MCAL_Layer/ADC/hal_adc.c: 273:             break;
  5768   002026  EF68  F010         	goto	l449
  5769   00202A                     l4090:
  5770   00202A  8496               	bsf	150,2,c	;volatile
  5771                           
  5772                           ;MCAL_Layer/ADC/hal_adc.c: 275:             break;
  5773   00202C  EF68  F010         	goto	l449
  5774   002030                     l4092:
  5775   002030  8493               	bsf	147,2,c	;volatile
  5776                           
  5777                           ;MCAL_Layer/ADC/hal_adc.c: 277:             break;
  5778   002032  EF68  F010         	goto	l449
  5779   002036                     l4094:
  5780   002036  8693               	bsf	147,3,c	;volatile
  5781                           
  5782                           ;MCAL_Layer/ADC/hal_adc.c: 279:             break;
  5783   002038  EF68  F010         	goto	l449
  5784   00203C                     l4096:
  5785   00203C  8293               	bsf	147,1,c	;volatile
  5786                           
  5787                           ;MCAL_Layer/ADC/hal_adc.c: 281:             break;
  5788   00203E  EF68  F010         	goto	l449
  5789   002042                     l4098:
  5790   002042  8893               	bsf	147,4,c	;volatile
  5791                           
  5792                           ;MCAL_Layer/ADC/hal_adc.c: 283:             break;
  5793   002044  EF68  F010         	goto	l449
  5794   002048                     l4100:
  5795   002048  8093               	bsf	147,0,c	;volatile
  5796                           
  5797                           ;MCAL_Layer/ADC/hal_adc.c: 285:             break;
  5798   00204A  EF68  F010         	goto	l449
  5799   00204E                     l4104:
  5800   00204E  500D               	movf	adc_input_channel_port_configure@channel^0,w,c
  5801   002050  6E0B               	movwf	??_adc_input_channel_port_configure^0,c
  5802   002052  6A0C               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  5803                           
  5804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5805                           ; Switch size 1, requested type "simple"
  5806                           ; Number of cases is 1, Range of values is 0 to 0
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte            4     3 (average)
  5810                           ;	Chosen strategy is simple_byte
  5811   002054  500C               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  5812   002056  0A00               	xorlw	0	; case 0
  5813   002058  B4D8               	btfsc	status,2,c
  5814   00205A  EF31  F010         	goto	l5906
  5815   00205E  EF68  F010         	goto	l449
  5816   002062                     l5906:
  5817                           
  5818                           ; Switch size 1, requested type "simple"
  5819                           ; Number of cases is 13, Range of values is 0 to 12
  5820                           ; switch strategies available:
  5821                           ; Name         Instructions Cycles
  5822                           ; simple_byte           40    21 (average)
  5823                           ;	Chosen strategy is simple_byte
  5824   002062  500B               	movf	??_adc_input_channel_port_configure^0,w,c
  5825   002064  0A00               	xorlw	0	; case 0
  5826   002066  B4D8               	btfsc	status,2,c
  5827   002068  EF00  F010         	goto	l4076
  5828   00206C  0A01               	xorlw	1	; case 1
  5829   00206E  B4D8               	btfsc	status,2,c
  5830   002070  EF03  F010         	goto	l4078
  5831   002074  0A03               	xorlw	3	; case 2
  5832   002076  B4D8               	btfsc	status,2,c
  5833   002078  EF06  F010         	goto	l4080
  5834   00207C  0A01               	xorlw	1	; case 3
  5835   00207E  B4D8               	btfsc	status,2,c
  5836   002080  EF09  F010         	goto	l4082
  5837   002084  0A07               	xorlw	7	; case 4
  5838   002086  B4D8               	btfsc	status,2,c
  5839   002088  EF0C  F010         	goto	l4084
  5840   00208C  0A01               	xorlw	1	; case 5
  5841   00208E  B4D8               	btfsc	status,2,c
  5842   002090  EF0F  F010         	goto	l4086
  5843   002094  0A03               	xorlw	3	; case 6
  5844   002096  B4D8               	btfsc	status,2,c
  5845   002098  EF12  F010         	goto	l4088
  5846   00209C  0A01               	xorlw	1	; case 7
  5847   00209E  B4D8               	btfsc	status,2,c
  5848   0020A0  EF15  F010         	goto	l4090
  5849   0020A4  0A0F               	xorlw	15	; case 8
  5850   0020A6  B4D8               	btfsc	status,2,c
  5851   0020A8  EF18  F010         	goto	l4092
  5852   0020AC  0A01               	xorlw	1	; case 9
  5853   0020AE  B4D8               	btfsc	status,2,c
  5854   0020B0  EF1B  F010         	goto	l4094
  5855   0020B4  0A03               	xorlw	3	; case 10
  5856   0020B6  B4D8               	btfsc	status,2,c
  5857   0020B8  EF1E  F010         	goto	l4096
  5858   0020BC  0A01               	xorlw	1	; case 11
  5859   0020BE  B4D8               	btfsc	status,2,c
  5860   0020C0  EF21  F010         	goto	l4098
  5861   0020C4  0A07               	xorlw	7	; case 12
  5862   0020C6  B4D8               	btfsc	status,2,c
  5863   0020C8  EF24  F010         	goto	l4100
  5864   0020CC  EF68  F010         	goto	l449
  5865   0020D0                     l449:
  5866   0020D0  0012               	return		;funcret
  5867   0020D2                     __end_of_adc_input_channel_port_configure:
  5868                           	callstack 0
  5869                           
  5870 ;; *************** function _InterruptManger *****************
  5871 ;; Defined at:
  5872 ;;		line 91 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;		None
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;Total ram usage:        4 bytes
  5891 ;; Hardware stack levels used: 1
  5892 ;; Hardware stack levels required when called: 3
  5893 ;; This function calls:
  5894 ;;		_ADC_ISR
  5895 ;;		_INT0_ISR
  5896 ;;		_INT1_ISR
  5897 ;;		_INT2_ISR
  5898 ;;		_RB4_ISR
  5899 ;;		_RB5_ISR
  5900 ;;		_RB6_ISR
  5901 ;;		_RB7_ISR
  5902 ;; This function is called by:
  5903 ;;		Interrupt level 2
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	intcode
  5908   000008                     __pintcode:
  5909                           	callstack 0
  5910   000008                     _InterruptManger:
  5911                           	callstack 21
  5912                           
  5913                           ;incstack = 0
  5914   000008  8275               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5915   00000A  ED32  F00A         	call	int_func,f	;refresh shadow registers
  5916                           
  5917                           	psect	intcode_body
  5918   001464                     __pintcode_body:
  5919                           	callstack 21
  5920   001464                     int_func:
  5921                           	callstack 21
  5922   001464  0006               	pop		; remove dummy address from shadow register refresh
  5923   001466  CFFA F007          	movff	pclath,??_InterruptManger
  5924   00146A  CFFB F008          	movff	pclatu,??_InterruptManger+1
  5925   00146E  CFD9 F009          	movff	fsr2l,??_InterruptManger+2
  5926   001472  CFDA F00A          	movff	fsr2h,??_InterruptManger+3
  5927   001476                     
  5928                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  5929   001476  A8F2               	btfss	242,4,c	;volatile
  5930   001478  EF40  F00A         	goto	i2u469_41
  5931   00147C  EF42  F00A         	goto	i2u469_40
  5932   001480                     i2u469_41:
  5933   001480  EF4B  F00A         	goto	i2l887
  5934   001484                     i2u469_40:
  5935   001484  A2F2               	btfss	242,1,c	;volatile
  5936   001486  EF47  F00A         	goto	i2u470_41
  5937   00148A  EF49  F00A         	goto	i2u470_40
  5938   00148E                     i2u470_41:
  5939   00148E  EF4B  F00A         	goto	i2l887
  5940   001492                     i2u470_40:
  5941   001492                     
  5942                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         INT0_ISR();
  5943   001492  ECB4  F016         	call	_INT0_ISR	;wreg free
  5944   001496                     i2l887:
  5945                           
  5946                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 98:     if((1 == INTCON3bits.INT1IE) && 
      +                          (1 == INTCON3bits.INT1IF)){
  5947   001496  A6F0               	btfss	240,3,c	;volatile
  5948   001498  EF50  F00A         	goto	i2u471_41
  5949   00149C  EF52  F00A         	goto	i2u471_40
  5950   0014A0                     i2u471_41:
  5951   0014A0  EF5B  F00A         	goto	i2l889
  5952   0014A4                     i2u471_40:
  5953   0014A4  A0F0               	btfss	240,0,c	;volatile
  5954   0014A6  EF57  F00A         	goto	i2u472_41
  5955   0014AA  EF59  F00A         	goto	i2u472_40
  5956   0014AE                     i2u472_41:
  5957   0014AE  EF5B  F00A         	goto	i2l889
  5958   0014B2                     i2u472_40:
  5959   0014B2                     
  5960                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:         INT1_ISR();
  5961   0014B2  ECB2  F016         	call	_INT1_ISR	;wreg free
  5962   0014B6                     i2l889:
  5963                           
  5964                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 102:     if((1 == INTCON3bits.INT2IE) &&
      +                           (1 == INTCON3bits.INT2IF)){
  5965   0014B6  A8F0               	btfss	240,4,c	;volatile
  5966   0014B8  EF60  F00A         	goto	i2u473_41
  5967   0014BC  EF62  F00A         	goto	i2u473_40
  5968   0014C0                     i2u473_41:
  5969   0014C0  EF6B  F00A         	goto	i2l891
  5970   0014C4                     i2u473_40:
  5971   0014C4  A2F0               	btfss	240,1,c	;volatile
  5972   0014C6  EF67  F00A         	goto	i2u474_41
  5973   0014CA  EF69  F00A         	goto	i2u474_40
  5974   0014CE                     i2u474_41:
  5975   0014CE  EF6B  F00A         	goto	i2l891
  5976   0014D2                     i2u474_40:
  5977   0014D2                     
  5978                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 103:         INT2_ISR();
  5979   0014D2  ECB0  F016         	call	_INT2_ISR	;wreg free
  5980   0014D6                     i2l891:
  5981                           
  5982                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  5983   0014D6  A6F2               	btfss	242,3,c	;volatile
  5984   0014D8  EF70  F00A         	goto	i2u475_41
  5985   0014DC  EF72  F00A         	goto	i2u475_40
  5986   0014E0                     i2u475_41:
  5987   0014E0  EF8D  F00A         	goto	i2l893
  5988   0014E4                     i2u475_40:
  5989   0014E4  A0F2               	btfss	242,0,c	;volatile
  5990   0014E6  EF77  F00A         	goto	i2u476_41
  5991   0014EA  EF79  F00A         	goto	i2u476_40
  5992   0014EE                     i2u476_41:
  5993   0014EE  EF8D  F00A         	goto	i2l893
  5994   0014F2                     i2u476_40:
  5995   0014F2  A881               	btfss	129,4,c	;volatile
  5996   0014F4  EF7E  F00A         	goto	i2u477_41
  5997   0014F8  EF80  F00A         	goto	i2u477_40
  5998   0014FC                     i2u477_41:
  5999   0014FC  EF8D  F00A         	goto	i2l893
  6000   001500                     i2u477_40:
  6001   001500  0470               	decf	_RB4_Flag^0,w,c	;volatile
  6002   001502  A4D8               	btfss	status,2,c
  6003   001504  EF86  F00A         	goto	i2u478_41
  6004   001508  EF88  F00A         	goto	i2u478_40
  6005   00150C                     i2u478_41:
  6006   00150C  EF8D  F00A         	goto	i2l893
  6007   001510                     i2u478_40:
  6008   001510                     
  6009                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 110:         (GPIO_LOGIC_HIGH == PORTBbi
      +                          ts.RB4) && (1 == RB4_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:        
      +                           RB4_Flag = 0;
  6010   001510  0E00               	movlw	0
  6011   001512  6E70               	movwf	_RB4_Flag^0,c	;volatile
  6012   001514                     
  6013                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:         RB4_ISR(0);
  6014   001514  0E00               	movlw	0
  6015   001516  EC9A  F016         	call	_RB4_ISR
  6016   00151A                     i2l893:
  6017                           
  6018                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6019   00151A  A6F2               	btfss	242,3,c	;volatile
  6020   00151C  EF92  F00A         	goto	i2u479_41
  6021   001520  EF94  F00A         	goto	i2u479_40
  6022   001524                     i2u479_41:
  6023   001524  EFAF  F00A         	goto	i2l895
  6024   001528                     i2u479_40:
  6025   001528  A0F2               	btfss	242,0,c	;volatile
  6026   00152A  EF99  F00A         	goto	i2u480_41
  6027   00152E  EF9B  F00A         	goto	i2u480_40
  6028   001532                     i2u480_41:
  6029   001532  EFAF  F00A         	goto	i2l895
  6030   001536                     i2u480_40:
  6031   001536  B881               	btfsc	129,4,c	;volatile
  6032   001538  EFA0  F00A         	goto	i2u481_41
  6033   00153C  EFA2  F00A         	goto	i2u481_40
  6034   001540                     i2u481_41:
  6035   001540  EFAF  F00A         	goto	i2l895
  6036   001544                     i2u481_40:
  6037   001544  5070               	movf	_RB4_Flag^0,w,c	;volatile
  6038   001546  A4D8               	btfss	status,2,c
  6039   001548  EFA8  F00A         	goto	i2u482_41
  6040   00154C  EFAA  F00A         	goto	i2u482_40
  6041   001550                     i2u482_41:
  6042   001550  EFAF  F00A         	goto	i2l895
  6043   001554                     i2u482_40:
  6044   001554                     
  6045                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:         (GPIO_LOGIC_LOW == PORTBbit
      +                          s.RB4) && (0 == RB4_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:         
      +                          RB4_Flag = 1;
  6046   001554  0E01               	movlw	1
  6047   001556  6E70               	movwf	_RB4_Flag^0,c	;volatile
  6048   001558                     
  6049                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 119:         RB4_ISR(1);
  6050   001558  0E01               	movlw	1
  6051   00155A  EC9A  F016         	call	_RB4_ISR
  6052   00155E                     i2l895:
  6053                           
  6054                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 123:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6055   00155E  A6F2               	btfss	242,3,c	;volatile
  6056   001560  EFB4  F00A         	goto	i2u483_41
  6057   001564  EFB6  F00A         	goto	i2u483_40
  6058   001568                     i2u483_41:
  6059   001568  EFD1  F00A         	goto	i2l897
  6060   00156C                     i2u483_40:
  6061   00156C  A0F2               	btfss	242,0,c	;volatile
  6062   00156E  EFBB  F00A         	goto	i2u484_41
  6063   001572  EFBD  F00A         	goto	i2u484_40
  6064   001576                     i2u484_41:
  6065   001576  EFD1  F00A         	goto	i2l897
  6066   00157A                     i2u484_40:
  6067   00157A  AA81               	btfss	129,5,c	;volatile
  6068   00157C  EFC2  F00A         	goto	i2u485_41
  6069   001580  EFC4  F00A         	goto	i2u485_40
  6070   001584                     i2u485_41:
  6071   001584  EFD1  F00A         	goto	i2l897
  6072   001588                     i2u485_40:
  6073   001588  046F               	decf	_RB5_Flag^0,w,c	;volatile
  6074   00158A  A4D8               	btfss	status,2,c
  6075   00158C  EFCA  F00A         	goto	i2u486_41
  6076   001590  EFCC  F00A         	goto	i2u486_40
  6077   001594                     i2u486_41:
  6078   001594  EFD1  F00A         	goto	i2l897
  6079   001598                     i2u486_40:
  6080   001598                     
  6081                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 124:         (GPIO_LOGIC_HIGH == PORTBbi
      +                          ts.RB5) && (1 == RB5_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:        
      +                           RB5_Flag = 0;
  6082   001598  0E00               	movlw	0
  6083   00159A  6E6F               	movwf	_RB5_Flag^0,c	;volatile
  6084   00159C                     
  6085                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         RB5_ISR(0);
  6086   00159C  0E00               	movlw	0
  6087   00159E  EC8D  F016         	call	_RB5_ISR
  6088   0015A2                     i2l897:
  6089                           
  6090                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 130:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6091   0015A2  A6F2               	btfss	242,3,c	;volatile
  6092   0015A4  EFD6  F00A         	goto	i2u487_41
  6093   0015A8  EFD8  F00A         	goto	i2u487_40
  6094   0015AC                     i2u487_41:
  6095   0015AC  EFF3  F00A         	goto	i2l899
  6096   0015B0                     i2u487_40:
  6097   0015B0  A0F2               	btfss	242,0,c	;volatile
  6098   0015B2  EFDD  F00A         	goto	i2u488_41
  6099   0015B6  EFDF  F00A         	goto	i2u488_40
  6100   0015BA                     i2u488_41:
  6101   0015BA  EFF3  F00A         	goto	i2l899
  6102   0015BE                     i2u488_40:
  6103   0015BE  BA81               	btfsc	129,5,c	;volatile
  6104   0015C0  EFE4  F00A         	goto	i2u489_41
  6105   0015C4  EFE6  F00A         	goto	i2u489_40
  6106   0015C8                     i2u489_41:
  6107   0015C8  EFF3  F00A         	goto	i2l899
  6108   0015CC                     i2u489_40:
  6109   0015CC  506F               	movf	_RB5_Flag^0,w,c	;volatile
  6110   0015CE  A4D8               	btfss	status,2,c
  6111   0015D0  EFEC  F00A         	goto	i2u490_41
  6112   0015D4  EFEE  F00A         	goto	i2u490_40
  6113   0015D8                     i2u490_41:
  6114   0015D8  EFF3  F00A         	goto	i2l899
  6115   0015DC                     i2u490_40:
  6116   0015DC                     
  6117                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:         (GPIO_LOGIC_LOW == PORTBbit
      +                          s.RB5) && (0 == RB5_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 132:         
      +                          RB5_Flag = 1;
  6118   0015DC  0E01               	movlw	1
  6119   0015DE  6E6F               	movwf	_RB5_Flag^0,c	;volatile
  6120   0015E0                     
  6121                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 133:         RB5_ISR(1);
  6122   0015E0  0E01               	movlw	1
  6123   0015E2  EC8D  F016         	call	_RB5_ISR
  6124   0015E6                     i2l899:
  6125                           
  6126                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 137:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6127   0015E6  A6F2               	btfss	242,3,c	;volatile
  6128   0015E8  EFF8  F00A         	goto	i2u491_41
  6129   0015EC  EFFA  F00A         	goto	i2u491_40
  6130   0015F0                     i2u491_41:
  6131   0015F0  EF15  F00B         	goto	i2l901
  6132   0015F4                     i2u491_40:
  6133   0015F4  A0F2               	btfss	242,0,c	;volatile
  6134   0015F6  EFFF  F00A         	goto	i2u492_41
  6135   0015FA  EF01  F00B         	goto	i2u492_40
  6136   0015FE                     i2u492_41:
  6137   0015FE  EF15  F00B         	goto	i2l901
  6138   001602                     i2u492_40:
  6139   001602  AC81               	btfss	129,6,c	;volatile
  6140   001604  EF06  F00B         	goto	i2u493_41
  6141   001608  EF08  F00B         	goto	i2u493_40
  6142   00160C                     i2u493_41:
  6143   00160C  EF15  F00B         	goto	i2l901
  6144   001610                     i2u493_40:
  6145   001610  046E               	decf	_RB6_Flag^0,w,c	;volatile
  6146   001612  A4D8               	btfss	status,2,c
  6147   001614  EF0E  F00B         	goto	i2u494_41
  6148   001618  EF10  F00B         	goto	i2u494_40
  6149   00161C                     i2u494_41:
  6150   00161C  EF15  F00B         	goto	i2l901
  6151   001620                     i2u494_40:
  6152   001620                     
  6153                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 138:         (GPIO_LOGIC_HIGH == PORTBbi
      +                          ts.RB6) && (1 == RB6_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:        
      +                           RB6_Flag = 0;
  6154   001620  0E00               	movlw	0
  6155   001622  6E6E               	movwf	_RB6_Flag^0,c	;volatile
  6156   001624                     
  6157                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:         RB6_ISR(0);
  6158   001624  0E00               	movlw	0
  6159   001626  EC80  F016         	call	_RB6_ISR
  6160   00162A                     i2l901:
  6161                           
  6162                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 144:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6163   00162A  A6F2               	btfss	242,3,c	;volatile
  6164   00162C  EF1A  F00B         	goto	i2u495_41
  6165   001630  EF1C  F00B         	goto	i2u495_40
  6166   001634                     i2u495_41:
  6167   001634  EF37  F00B         	goto	i2l903
  6168   001638                     i2u495_40:
  6169   001638  A0F2               	btfss	242,0,c	;volatile
  6170   00163A  EF21  F00B         	goto	i2u496_41
  6171   00163E  EF23  F00B         	goto	i2u496_40
  6172   001642                     i2u496_41:
  6173   001642  EF37  F00B         	goto	i2l903
  6174   001646                     i2u496_40:
  6175   001646  BC81               	btfsc	129,6,c	;volatile
  6176   001648  EF28  F00B         	goto	i2u497_41
  6177   00164C  EF2A  F00B         	goto	i2u497_40
  6178   001650                     i2u497_41:
  6179   001650  EF37  F00B         	goto	i2l903
  6180   001654                     i2u497_40:
  6181   001654  506E               	movf	_RB6_Flag^0,w,c	;volatile
  6182   001656  A4D8               	btfss	status,2,c
  6183   001658  EF30  F00B         	goto	i2u498_41
  6184   00165C  EF32  F00B         	goto	i2u498_40
  6185   001660                     i2u498_41:
  6186   001660  EF37  F00B         	goto	i2l903
  6187   001664                     i2u498_40:
  6188   001664                     
  6189                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:         (GPIO_LOGIC_LOW == PORTBbit
      +                          s.RB6) && (0 == RB6_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:         
      +                          RB6_Flag = 1;
  6190   001664  0E01               	movlw	1
  6191   001666  6E6E               	movwf	_RB6_Flag^0,c	;volatile
  6192   001668                     
  6193                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 147:         RB6_ISR(1);
  6194   001668  0E01               	movlw	1
  6195   00166A  EC80  F016         	call	_RB6_ISR
  6196   00166E                     i2l903:
  6197                           
  6198                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 151:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6199   00166E  A6F2               	btfss	242,3,c	;volatile
  6200   001670  EF3C  F00B         	goto	i2u499_41
  6201   001674  EF3E  F00B         	goto	i2u499_40
  6202   001678                     i2u499_41:
  6203   001678  EF59  F00B         	goto	i2l905
  6204   00167C                     i2u499_40:
  6205   00167C  A0F2               	btfss	242,0,c	;volatile
  6206   00167E  EF43  F00B         	goto	i2u500_41
  6207   001682  EF45  F00B         	goto	i2u500_40
  6208   001686                     i2u500_41:
  6209   001686  EF59  F00B         	goto	i2l905
  6210   00168A                     i2u500_40:
  6211   00168A  AE81               	btfss	129,7,c	;volatile
  6212   00168C  EF4A  F00B         	goto	i2u501_41
  6213   001690  EF4C  F00B         	goto	i2u501_40
  6214   001694                     i2u501_41:
  6215   001694  EF59  F00B         	goto	i2l905
  6216   001698                     i2u501_40:
  6217   001698  046D               	decf	_RB7_Flag^0,w,c	;volatile
  6218   00169A  A4D8               	btfss	status,2,c
  6219   00169C  EF52  F00B         	goto	i2u502_41
  6220   0016A0  EF54  F00B         	goto	i2u502_40
  6221   0016A4                     i2u502_41:
  6222   0016A4  EF59  F00B         	goto	i2l905
  6223   0016A8                     i2u502_40:
  6224   0016A8                     
  6225                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 152:         (GPIO_LOGIC_HIGH == PORTBbi
      +                          ts.RB7) && (1 == RB7_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 153:        
      +                           RB7_Flag = 0;
  6226   0016A8  0E00               	movlw	0
  6227   0016AA  6E6D               	movwf	_RB7_Flag^0,c	;volatile
  6228   0016AC                     
  6229                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 154:         RB7_ISR(0);
  6230   0016AC  0E00               	movlw	0
  6231   0016AE  EC73  F016         	call	_RB7_ISR
  6232   0016B2                     i2l905:
  6233                           
  6234                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 158:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6235   0016B2  A6F2               	btfss	242,3,c	;volatile
  6236   0016B4  EF5E  F00B         	goto	i2u503_41
  6237   0016B8  EF60  F00B         	goto	i2u503_40
  6238   0016BC                     i2u503_41:
  6239   0016BC  EF7B  F00B         	goto	i2l907
  6240   0016C0                     i2u503_40:
  6241   0016C0  A0F2               	btfss	242,0,c	;volatile
  6242   0016C2  EF65  F00B         	goto	i2u504_41
  6243   0016C6  EF67  F00B         	goto	i2u504_40
  6244   0016CA                     i2u504_41:
  6245   0016CA  EF7B  F00B         	goto	i2l907
  6246   0016CE                     i2u504_40:
  6247   0016CE  BE81               	btfsc	129,7,c	;volatile
  6248   0016D0  EF6C  F00B         	goto	i2u505_41
  6249   0016D4  EF6E  F00B         	goto	i2u505_40
  6250   0016D8                     i2u505_41:
  6251   0016D8  EF7B  F00B         	goto	i2l907
  6252   0016DC                     i2u505_40:
  6253   0016DC  506D               	movf	_RB7_Flag^0,w,c	;volatile
  6254   0016DE  A4D8               	btfss	status,2,c
  6255   0016E0  EF74  F00B         	goto	i2u506_41
  6256   0016E4  EF76  F00B         	goto	i2u506_40
  6257   0016E8                     i2u506_41:
  6258   0016E8  EF7B  F00B         	goto	i2l907
  6259   0016EC                     i2u506_40:
  6260   0016EC                     
  6261                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 159:         (GPIO_LOGIC_LOW == PORTBbit
      +                          s.RB7) && (0 == RB7_Flag)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 160:         
      +                          RB7_Flag = 1;
  6262   0016EC  0E01               	movlw	1
  6263   0016EE  6E6D               	movwf	_RB7_Flag^0,c	;volatile
  6264   0016F0                     
  6265                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 161:         RB7_ISR(1);
  6266   0016F0  0E01               	movlw	1
  6267   0016F2  EC73  F016         	call	_RB7_ISR
  6268   0016F6                     i2l907:
  6269                           
  6270                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 168:     if((1 == PIE1bits.ADIE) && (1 =
      +                          = PIR1bits.ADIF)){
  6271   0016F6  AC9D               	btfss	157,6,c	;volatile
  6272   0016F8  EF80  F00B         	goto	i2u507_41
  6273   0016FC  EF82  F00B         	goto	i2u507_40
  6274   001700                     i2u507_41:
  6275   001700  EF8B  F00B         	goto	i2l910
  6276   001704                     i2u507_40:
  6277   001704  AC9E               	btfss	158,6,c	;volatile
  6278   001706  EF87  F00B         	goto	i2u508_41
  6279   00170A  EF89  F00B         	goto	i2u508_40
  6280   00170E                     i2u508_41:
  6281   00170E  EF8B  F00B         	goto	i2l910
  6282   001712                     i2u508_40:
  6283   001712                     
  6284                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 169:         ADC_ISR();
  6285   001712  EC65  F016         	call	_ADC_ISR	;wreg free
  6286   001716                     i2l910:
  6287   001716  C00A  FFDA         	movff	??_InterruptManger+3,fsr2h
  6288   00171A  C009  FFD9         	movff	??_InterruptManger+2,fsr2l
  6289   00171E  C008  FFFB         	movff	??_InterruptManger+1,pclatu
  6290   001722  C007  FFFA         	movff	??_InterruptManger,pclath
  6291   001726  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6292   001728  0011               	retfie		f
  6293   00172A                     __end_of_InterruptManger:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function _RB7_ISR *****************
  6297 ;; Defined at:
  6298 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  RB7_source      1    wreg     unsigned char 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  RB7_source      1    0[COMRAM] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;Total ram usage:        1 bytes
  6317 ;; Hardware stack levels used: 1
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_InterruptManger
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text39
  6326   002CE6                     __ptext39:
  6327                           	callstack 0
  6328   002CE6                     _RB7_ISR:
  6329                           	callstack 23
  6330                           
  6331                           ;incstack = 0
  6332                           ;RB7_ISR@RB7_source stored from wreg
  6333   002CE6  6E01               	movwf	RB7_ISR@RB7_source^0,c
  6334   002CE8                     
  6335                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     (INTCONbits.RBIF = 0);
  6336   002CE8  90F2               	bcf	242,0,c	;volatile
  6337   002CEA                     
  6338                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 177:     if (0 == RB7_source) {
  6339   002CEA  5001               	movf	RB7_ISR@RB7_source^0,w,c
  6340   002CEC  A4D8               	btfss	status,2,c
  6341   002CEE  EF7B  F016         	goto	i2u87_41
  6342   002CF2  EF7D  F016         	goto	i2u87_40
  6343   002CF6                     i2u87_41:
  6344   002CF6  EF7F  F016         	goto	i2l2454
  6345   002CFA                     i2u87_40:
  6346   002CFA  EF7F  F016         	goto	i2l718
  6347   002CFE                     i2l2454:
  6348   002CFE                     i2l718:
  6349   002CFE  0012               	return		;funcret
  6350   002D00                     __end_of_RB7_ISR:
  6351                           	callstack 0
  6352                           
  6353 ;; *************** function _RB6_ISR *****************
  6354 ;; Defined at:
  6355 ;;		line 149 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  RB6_source      1    wreg     unsigned char 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  RB6_source      1    0[COMRAM] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;Total ram usage:        1 bytes
  6374 ;; Hardware stack levels used: 1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_InterruptManger
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text40
  6383   002D00                     __ptext40:
  6384                           	callstack 0
  6385   002D00                     _RB6_ISR:
  6386                           	callstack 23
  6387                           
  6388                           ;incstack = 0
  6389                           ;RB6_ISR@RB6_source stored from wreg
  6390   002D00  6E01               	movwf	RB6_ISR@RB6_source^0,c
  6391   002D02                     
  6392                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 151:     (INTCONbits.RBIF = 0);
  6393   002D02  90F2               	bcf	242,0,c	;volatile
  6394   002D04                     
  6395                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 154:     if (0 == RB6_source) {
  6396   002D04  5001               	movf	RB6_ISR@RB6_source^0,w,c
  6397   002D06  A4D8               	btfss	status,2,c
  6398   002D08  EF88  F016         	goto	i2u86_41
  6399   002D0C  EF8A  F016         	goto	i2u86_40
  6400   002D10                     i2u86_41:
  6401   002D10  EF8C  F016         	goto	i2l2440
  6402   002D14                     i2u86_40:
  6403   002D14  EF8C  F016         	goto	i2l707
  6404   002D18                     i2l2440:
  6405   002D18                     i2l707:
  6406   002D18  0012               	return		;funcret
  6407   002D1A                     __end_of_RB6_ISR:
  6408                           	callstack 0
  6409                           
  6410 ;; *************** function _RB5_ISR *****************
  6411 ;; Defined at:
  6412 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  RB5_source      1    wreg     unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  RB5_source      1    0[COMRAM] unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2, status,0
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;Total ram usage:        1 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_InterruptManger
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text41
  6440   002D1A                     __ptext41:
  6441                           	callstack 0
  6442   002D1A                     _RB5_ISR:
  6443                           	callstack 23
  6444                           
  6445                           ;incstack = 0
  6446                           ;RB5_ISR@RB5_source stored from wreg
  6447   002D1A  6E01               	movwf	RB5_ISR@RB5_source^0,c
  6448   002D1C                     
  6449                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
  6450   002D1C  90F2               	bcf	242,0,c	;volatile
  6451   002D1E                     
  6452                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if (0 == RB5_source) {
  6453   002D1E  5001               	movf	RB5_ISR@RB5_source^0,w,c
  6454   002D20  A4D8               	btfss	status,2,c
  6455   002D22  EF95  F016         	goto	i2u85_41
  6456   002D26  EF97  F016         	goto	i2u85_40
  6457   002D2A                     i2u85_41:
  6458   002D2A  EF99  F016         	goto	i2l2426
  6459   002D2E                     i2u85_40:
  6460   002D2E  EF99  F016         	goto	i2l696
  6461   002D32                     i2l2426:
  6462   002D32                     i2l696:
  6463   002D32  0012               	return		;funcret
  6464   002D34                     __end_of_RB5_ISR:
  6465                           	callstack 0
  6466                           
  6467 ;; *************** function _RB4_ISR *****************
  6468 ;; Defined at:
  6469 ;;		line 103 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  RB4_source      1    wreg     unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  RB4_source      1    0[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      void 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6487 ;;Total ram usage:        1 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_InterruptManger
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text42
  6497   002D34                     __ptext42:
  6498                           	callstack 0
  6499   002D34                     _RB4_ISR:
  6500                           	callstack 23
  6501                           
  6502                           ;incstack = 0
  6503                           ;RB4_ISR@RB4_source stored from wreg
  6504   002D34  6E01               	movwf	RB4_ISR@RB4_source^0,c
  6505   002D36                     
  6506                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 105:     (INTCONbits.RBIF = 0);
  6507   002D36  90F2               	bcf	242,0,c	;volatile
  6508   002D38                     
  6509                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 108:     if (0 == RB4_source) {
  6510   002D38  5001               	movf	RB4_ISR@RB4_source^0,w,c
  6511   002D3A  A4D8               	btfss	status,2,c
  6512   002D3C  EFA2  F016         	goto	i2u84_41
  6513   002D40  EFA4  F016         	goto	i2u84_40
  6514   002D44                     i2u84_41:
  6515   002D44  EFA6  F016         	goto	i2l2412
  6516   002D48                     i2u84_40:
  6517   002D48  EFA6  F016         	goto	i2l685
  6518   002D4C                     i2l2412:
  6519   002D4C                     i2l685:
  6520   002D4C  0012               	return		;funcret
  6521   002D4E                     __end_of_RB4_ISR:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _INT2_ISR *****************
  6525 ;; Defined at:
  6526 ;;		line 85 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		None
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_InterruptManger
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text43
  6554   002D60                     __ptext43:
  6555                           	callstack 0
  6556   002D60                     _INT2_ISR:
  6557                           	callstack 23
  6558   002D60                     
  6559                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 87:     (INTCON3bits.INT2IF = 0);
  6560   002D60  92F0               	bcf	240,1,c	;volatile
  6561   002D62  0012               	return		;funcret
  6562   002D64                     __end_of_INT2_ISR:
  6563                           	callstack 0
  6564                           
  6565 ;; *************** function _INT1_ISR *****************
  6566 ;; Defined at:
  6567 ;;		line 70 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		None
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_InterruptManger
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text44
  6595   002D64                     __ptext44:
  6596                           	callstack 0
  6597   002D64                     _INT1_ISR:
  6598                           	callstack 23
  6599   002D64                     
  6600                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 72:     (INTCON3bits.INT1IF = 0);
  6601   002D64  90F0               	bcf	240,0,c	;volatile
  6602   002D66  0012               	return		;funcret
  6603   002D68                     __end_of_INT1_ISR:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function _INT0_ISR *****************
  6607 ;; Defined at:
  6608 ;;		line 55 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		None
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;Total ram usage:        0 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_InterruptManger
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text45
  6636   002D68                     __ptext45:
  6637                           	callstack 0
  6638   002D68                     _INT0_ISR:
  6639                           	callstack 23
  6640   002D68                     
  6641                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 57:     (INTCONbits.INT0IF = 0);
  6642   002D68  92F2               	bcf	242,1,c	;volatile
  6643   002D6A  0012               	return		;funcret
  6644   002D6C                     __end_of_INT0_ISR:
  6645                           	callstack 0
  6646                           
  6647 ;; *************** function _ADC_ISR *****************
  6648 ;; Defined at:
  6649 ;;		line 242 in file "MCAL_Layer/ADC/hal_adc.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;Total ram usage:        0 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 2
  6670 ;; This function calls:
  6671 ;;		NULL
  6672 ;;		_ADC_DefaultInterruptHandler
  6673 ;; This function is called by:
  6674 ;;		_InterruptManger
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text46
  6679   002CCA                     __ptext46:
  6680                           	callstack 0
  6681   002CCA                     _ADC_ISR:
  6682                           	callstack 21
  6683   002CCA                     
  6684                           ;MCAL_Layer/ADC/hal_adc.c: 244:     (PIR1bits.ADIF = 0);
  6685   002CCA  9C9E               	bcf	158,6,c	;volatile
  6686   002CCC                     
  6687                           ;MCAL_Layer/ADC/hal_adc.c: 247:     ADC_InterruptHandler();
  6688   002CCC  D802               	call	i2u358_48
  6689   002CCE  EF72  F016         	goto	i2u358_49
  6690   002CD2                     i2u358_48:
  6691   002CD2  0005               	push	
  6692   002CD4  6EFA               	movwf	pclath,c
  6693   002CD6  5054               	movf	_ADC_InterruptHandler^0,w,c
  6694   002CD8  6EFD               	movwf	tosl,c
  6695   002CDA  5055               	movf	(_ADC_InterruptHandler+1)^0,w,c
  6696   002CDC  6EFE               	movwf	tosh,c
  6697   002CDE  6AFF               	clrf	tosu,c
  6698   002CE0  50FA               	movf	pclath,w,c
  6699   002CE2  0012               	return		;indir
  6700   002CE4                     i2u358_49:
  6701   002CE4  0012               	return		;funcret
  6702   002CE6                     __end_of_ADC_ISR:
  6703                           	callstack 0
  6704                           
  6705 ;; *************** function _ADC_DefaultInterruptHandler *****************
  6706 ;; Defined at:
  6707 ;;		line 145 in file "application.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;Total ram usage:        0 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 1
  6728 ;; This function calls:
  6729 ;;		_ADC_GetConversionResult
  6730 ;; This function is called by:
  6731 ;;		_ADC_ISR
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text47
  6736   0029BC                     __ptext47:
  6737                           	callstack 0
  6738   0029BC                     _ADC_DefaultInterruptHandler:
  6739                           	callstack 21
  6740   0029BC                     
  6741                           ;application.c: 147:     if (0 == ADC_Req) {
  6742   0029BC  5057               	movf	_ADC_Req^0,w,c
  6743   0029BE  A4D8               	btfss	status,2,c
  6744   0029C0  EFE4  F014         	goto	i2u347_41
  6745   0029C4  EFE6  F014         	goto	i2u347_40
  6746   0029C8                     i2u347_41:
  6747   0029C8  EFF0  F014         	goto	i2l4318
  6748   0029CC                     i2u347_40:
  6749   0029CC                     
  6750                           ;application.c: 148:             ADC_GetConversionResult(&adc_1, &LM35_res_1);
  6751   0029CC  0ED5               	movlw	low _adc_1
  6752   0029CE  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  6753   0029D0  0E61               	movlw	low _LM35_res_1
  6754   0029D2  6E02               	movwf	ADC_GetConversionResult@conversion_result^0,c
  6755   0029D4  ECD8  F012         	call	_ADC_GetConversionResult	;wreg free
  6756   0029D8                     
  6757                           ;application.c: 149:             ADC_Req = 1;
  6758   0029D8  0E01               	movlw	1
  6759   0029DA  6E57               	movwf	_ADC_Req^0,c
  6760                           
  6761                           ;application.c: 150:         } else if (1 == ADC_Req) {
  6762   0029DC  EF00  F015         	goto	i2l989
  6763   0029E0                     i2l4318:
  6764   0029E0  0457               	decf	_ADC_Req^0,w,c
  6765   0029E2  A4D8               	btfss	status,2,c
  6766   0029E4  EFF6  F014         	goto	i2u348_41
  6767   0029E8  EFF8  F014         	goto	i2u348_40
  6768   0029EC                     i2u348_41:
  6769   0029EC  EF00  F015         	goto	i2l989
  6770   0029F0                     i2u348_40:
  6771   0029F0                     
  6772                           ;application.c: 151:             ADC_GetConversionResult(&adc_1, &LM35_res_2);
  6773   0029F0  0ED5               	movlw	low _adc_1
  6774   0029F2  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  6775   0029F4  0E5F               	movlw	low _LM35_res_2
  6776   0029F6  6E02               	movwf	ADC_GetConversionResult@conversion_result^0,c
  6777   0029F8  ECD8  F012         	call	_ADC_GetConversionResult	;wreg free
  6778   0029FC                     
  6779                           ;application.c: 152:             ADC_Req = 0;
  6780   0029FC  0E00               	movlw	0
  6781   0029FE  6E57               	movwf	_ADC_Req^0,c
  6782   002A00                     i2l989:
  6783   002A00  0012               	return		;funcret
  6784   002A02                     __end_of_ADC_DefaultInterruptHandler:
  6785                           	callstack 0
  6786                           
  6787 ;; *************** function _ADC_GetConversionResult *****************
  6788 ;; Defined at:
  6789 ;;		line 169 in file "MCAL_Layer/ADC/hal_adc.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  _adc            1    0[COMRAM] PTR const struct .
  6792 ;;		 -> adc_1(7), 
  6793 ;;  conversion_r    1    1[COMRAM] PTR unsigned short 
  6794 ;;		 -> LM35_res_2(2), LM35_res_1(2), 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  ret             1    5[COMRAM] unsigned char 
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      unsigned char 
  6799 ;; Registers used:
  6800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;Total ram usage:        6 bytes
  6811 ;; Hardware stack levels used: 1
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_ADC_DefaultInterruptHandler
  6816 ;;		_ADC_GetConversion_blocking
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text48
  6821   0025B0                     __ptext48:
  6822                           	callstack 0
  6823   0025B0                     _ADC_GetConversionResult:
  6824                           	callstack 21
  6825   0025B0                     
  6826                           ;MCAL_Layer/ADC/hal_adc.c: 170:     Std_ReturnType ret = (Std_ReturnType)0x00;
  6827   0025B0  0E00               	movlw	0
  6828   0025B2  6E06               	movwf	ADC_GetConversionResult@ret^0,c
  6829                           
  6830                           ;MCAL_Layer/ADC/hal_adc.c: 171:     if ((((void*)0) == _adc) || (((void*)0) == conversio
      +                          n_result)) {
  6831   0025B4  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  6832   0025B6  B4D8               	btfsc	status,2,c
  6833   0025B8  EFE0  F012         	goto	i2u327_41
  6834   0025BC  EFE2  F012         	goto	i2u327_40
  6835   0025C0                     i2u327_41:
  6836   0025C0  EFEA  F012         	goto	i2l4120
  6837   0025C4                     i2u327_40:
  6838   0025C4  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6839   0025C6  A4D8               	btfss	status,2,c
  6840   0025C8  EFE8  F012         	goto	i2u328_41
  6841   0025CC  EFEA  F012         	goto	i2u328_40
  6842   0025D0                     i2u328_41:
  6843   0025D0  EFEE  F012         	goto	i2l4122
  6844   0025D4                     i2u328_40:
  6845   0025D4                     i2l4120:
  6846                           
  6847                           ;MCAL_Layer/ADC/hal_adc.c: 172:         ret = (Std_ReturnType)0x01;
  6848   0025D4  0E01               	movlw	1
  6849   0025D6  6E06               	movwf	ADC_GetConversionResult@ret^0,c
  6850                           
  6851                           ;MCAL_Layer/ADC/hal_adc.c: 173:     } else {
  6852   0025D8  EF26  F013         	goto	i2l4128
  6853   0025DC                     i2l4122:
  6854                           
  6855                           ;MCAL_Layer/ADC/hal_adc.c: 174:         if (0x00U == _adc->result_format) {
  6856   0025DC  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  6857   0025DE  6ED9               	movwf	fsr2l,c
  6858   0025E0  6ADA               	clrf	fsr2h,c
  6859   0025E2  0E06               	movlw	6
  6860   0025E4  26D9               	addwf	fsr2l,f,c
  6861   0025E6  B2DF               	btfsc	indf2,1,c
  6862   0025E8  EFF8  F012         	goto	i2u329_41
  6863   0025EC  EFFA  F012         	goto	i2u329_40
  6864   0025F0                     i2u329_41:
  6865   0025F0  EF15  F013         	goto	i2l4126
  6866   0025F4                     i2u329_40:
  6867   0025F4                     
  6868                           ;MCAL_Layer/ADC/hal_adc.c: 175:             *conversion_result = (adc_result_t) (((ADRES
      +                          H << 8) + ADRESL) >> 6);
  6869   0025F4  50C3               	movf	195,w,c	;volatile
  6870   0025F6  CFC4 F003          	movff	4036,??_ADC_GetConversionResult	;volatile
  6871   0025FA  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6872   0025FC  C003  F004         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6873   002600  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6874   002602  2603               	addwf	??_ADC_GetConversionResult^0,f,c
  6875   002604  0E00               	movlw	0
  6876   002606  2204               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6877   002608  0E06               	movlw	6
  6878   00260A  6E05               	movwf	(??_ADC_GetConversionResult+2)^0,c
  6879   00260C                     i2u330_45:
  6880   00260C  3404               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  6881   00260E  3204               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  6882   002610  3203               	rrcf	??_ADC_GetConversionResult^0,f,c
  6883   002612  2E05               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  6884   002614  EF06  F013         	goto	i2u330_45
  6885   002618  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6886   00261A  6ED9               	movwf	fsr2l,c
  6887   00261C  6ADA               	clrf	fsr2h,c
  6888   00261E  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6889   002622  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6890                           
  6891                           ;MCAL_Layer/ADC/hal_adc.c: 176:         } else {
  6892   002626  EF26  F013         	goto	i2l4128
  6893   00262A                     i2l4126:
  6894                           
  6895                           ;MCAL_Layer/ADC/hal_adc.c: 177:             *conversion_result = (adc_result_t) ((ADRESH
      +                           << 8) + ADRESL);
  6896   00262A  50C3               	movf	195,w,c	;volatile
  6897   00262C  CFC4 F003          	movff	4036,??_ADC_GetConversionResult	;volatile
  6898   002630  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6899   002632  C003  F004         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6900   002636  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6901   002638  2603               	addwf	??_ADC_GetConversionResult^0,f,c
  6902   00263A  0E00               	movlw	0
  6903   00263C  2204               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6904   00263E  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6905   002640  6ED9               	movwf	fsr2l,c
  6906   002642  6ADA               	clrf	fsr2h,c
  6907   002644  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6908   002648  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6909   00264C                     i2l4128:
  6910                           
  6911                           ;MCAL_Layer/ADC/hal_adc.c: 180:     return ret;
  6912   00264C  5006               	movf	ADC_GetConversionResult@ret^0,w,c
  6913   00264E  0012               	return		;funcret
  6914   002650                     __end_of_ADC_GetConversionResult:
  6915                           	callstack 0
  6916                           
  6917                           	psect	text49
  6918   000000                     __ptext49:
  6919                           	callstack 0
  6920   000000                     
  6921                           	psect	rparam
  6922   000000                     
  6923                           	psect	temp
  6924   000075                     btemp:
  6925                           	callstack 0
  6926   000075                     	ds	1
  6927   000000                     int$flags	set	btemp
  6928   000000                     wtemp8	set	btemp+1
  6929   000000                     ttemp5	set	btemp+1
  6930   000000                     ttemp6	set	btemp+4
  6931   000000                     ttemp7	set	btemp+8
  6932                           
  6933                           	psect	config
  6934                           
  6935                           ; Padding undefined space
  6936   300000                     	org	3145728
  6937   300000  FF                 	db	255
  6938                           
  6939                           ;Config register CONFIG1H @ 0x300001
  6940                           ;	Oscillator Selection bits
  6941                           ;	OSC = HS, HS oscillator
  6942                           ;	Fail-Safe Clock Monitor Enable bit
  6943                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6944                           ;	Internal/External Oscillator Switchover bit
  6945                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6946   300001                     	org	3145729
  6947   300001  02                 	db	2
  6948                           
  6949                           ;Config register CONFIG2L @ 0x300002
  6950                           ;	Power-up Timer Enable bit
  6951                           ;	PWRT = OFF, PWRT disabled
  6952                           ;	Brown-out Reset Enable bits
  6953                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6954                           ;	Brown Out Reset Voltage bits
  6955                           ;	BORV = 1, 
  6956   300002                     	org	3145730
  6957   300002  09                 	db	9
  6958                           
  6959                           ;Config register CONFIG2H @ 0x300003
  6960                           ;	Watchdog Timer Enable bit
  6961                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6962                           ;	Watchdog Timer Postscale Select bits
  6963                           ;	WDTPS = 32768, 1:32768
  6964   300003                     	org	3145731
  6965   300003  1E                 	db	30
  6966                           
  6967                           ; Padding undefined space
  6968   300004                     	org	3145732
  6969   300004  FF                 	db	255
  6970                           
  6971                           ;Config register CONFIG3H @ 0x300005
  6972                           ;	CCP2 MUX bit
  6973                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6974                           ;	PORTB A/D Enable bit
  6975                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6976                           ;	Low-Power Timer1 Oscillator Enable bit
  6977                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6978                           ;	MCLR Pin Enable bit
  6979                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6980   300005                     	org	3145733
  6981   300005  81                 	db	129
  6982                           
  6983                           ;Config register CONFIG4L @ 0x300006
  6984                           ;	Stack Full/Underflow Reset Enable bit
  6985                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6986                           ;	Single-Supply ICSP Enable bit
  6987                           ;	LVP = OFF, Single-Supply ICSP disabled
  6988                           ;	Extended Instruction Set Enable bit
  6989                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6990                           ;	Background Debugger Enable bit
  6991                           ;	DEBUG = 0x1, unprogrammed default
  6992   300006                     	org	3145734
  6993   300006  81                 	db	129
  6994                           
  6995                           ; Padding undefined space
  6996   300007                     	org	3145735
  6997   300007  FF                 	db	255
  6998                           
  6999                           ;Config register CONFIG5L @ 0x300008
  7000                           ;	Code Protection bit
  7001                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7002                           ;	Code Protection bit
  7003                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7004                           ;	Code Protection bit
  7005                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7006                           ;	Code Protection bit
  7007                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7008   300008                     	org	3145736
  7009   300008  0F                 	db	15
  7010                           
  7011                           ;Config register CONFIG5H @ 0x300009
  7012                           ;	Boot Block Code Protection bit
  7013                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7014                           ;	Data EEPROM Code Protection bit
  7015                           ;	CPD = OFF, Data EEPROM not code-protected
  7016   300009                     	org	3145737
  7017   300009  C0                 	db	192
  7018                           
  7019                           ;Config register CONFIG6L @ 0x30000A
  7020                           ;	Write Protection bit
  7021                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7022                           ;	Write Protection bit
  7023                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7024                           ;	Write Protection bit
  7025                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7026                           ;	Write Protection bit
  7027                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7028   30000A                     	org	3145738
  7029   30000A  0F                 	db	15
  7030                           
  7031                           ;Config register CONFIG6H @ 0x30000B
  7032                           ;	Configuration Register Write Protection bit
  7033                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7034                           ;	Boot Block Write Protection bit
  7035                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7036                           ;	Data EEPROM Write Protection bit
  7037                           ;	WRTD = OFF, Data EEPROM not write-protected
  7038   30000B                     	org	3145739
  7039   30000B  E0                 	db	224
  7040                           
  7041                           ;Config register CONFIG7L @ 0x30000C
  7042                           ;	Table Read Protection bit
  7043                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7044                           ;	Table Read Protection bit
  7045                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7046                           ;	Table Read Protection bit
  7047                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7048                           ;	Table Read Protection bit
  7049                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7050   30000C                     	org	3145740
  7051   30000C  0F                 	db	15
  7052                           
  7053                           ;Config register CONFIG7H @ 0x30000D
  7054                           ;	Boot Block Table Read Protection bit
  7055                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7056   30000D                     	org	3145741
  7057   30000D  40                 	db	64
  7058                           tosu	equ	0xFFF
  7059                           tosh	equ	0xFFE
  7060                           tosl	equ	0xFFD
  7061                           stkptr	equ	0xFFC
  7062                           pclatu	equ	0xFFB
  7063                           pclath	equ	0xFFA
  7064                           pcl	equ	0xFF9
  7065                           tblptru	equ	0xFF8
  7066                           tblptrh	equ	0xFF7
  7067                           tblptrl	equ	0xFF6
  7068                           tablat	equ	0xFF5
  7069                           prodh	equ	0xFF4
  7070                           prodl	equ	0xFF3
  7071                           indf0	equ	0xFEF
  7072                           postinc0	equ	0xFEE
  7073                           postdec0	equ	0xFED
  7074                           preinc0	equ	0xFEC
  7075                           plusw0	equ	0xFEB
  7076                           fsr0h	equ	0xFEA
  7077                           fsr0l	equ	0xFE9
  7078                           wreg	equ	0xFE8
  7079                           indf1	equ	0xFE7
  7080                           postinc1	equ	0xFE6
  7081                           postdec1	equ	0xFE5
  7082                           preinc1	equ	0xFE4
  7083                           plusw1	equ	0xFE3
  7084                           fsr1h	equ	0xFE2
  7085                           fsr1l	equ	0xFE1
  7086                           bsr	equ	0xFE0
  7087                           indf2	equ	0xFDF
  7088                           postinc2	equ	0xFDE
  7089                           postdec2	equ	0xFDD
  7090                           preinc2	equ	0xFDC
  7091                           plusw2	equ	0xFDB
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    16
    Data        51
    BSS         110
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     53     116
    BANK0           128     11     110
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc_1$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_GetConversionResult@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> LM35_res_1(COMRAM[2]), LM35_res_2(COMRAM[2]), 

    ADC_Init@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_Init@_adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SelectChannel@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    configure_voltage_reference@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    configure_voltage_reference@_adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> LM35_res_1_txt(BANK0[6]), LM35_res_2_txt(BANK0[6]), 

    dc_motor_intialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), motor1(COMRAM[2]), 
		 -> motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), motor2$dc_motor_pin(COMRAM[2]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), motor1(COMRAM[2]), 
		 -> motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), motor2$dc_motor_pin(COMRAM[2]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), motor1(COMRAM[2]), motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), 
		 -> motor2$dc_motor_pin(COMRAM[2]), relay_initialize@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 20
		 -> LM35_res_1_txt(BANK0[6]), LM35_res_2_txt(BANK0[6]), STR_4(CODE[20]), STR_5(CODE[8]), 
		 -> STR_6(CODE[8]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_init_message@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> LM35_res_1_txt(BANK0[6]), LM35_res_2_txt(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> LM35_res_1_txt(BANK0[6]), LM35_res_2_txt(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1351$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1452$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1452$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2435$buffer	PTR unsigned char  size(2) Largest target is 0

    S2435$source	PTR const unsigned char  size(2) Largest target is 0

    S666$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    select_result_format@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> LM35_res_1_txt(BANK0[6]), LM35_res_2_txt(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> convert_uint16_to_string@TempString(BANK0[6]), convert_uint32_to_string@TempString(COMRAM[11]), convert_uint8_to_string@TempString(COMRAM[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _lcd_init_message->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _application_initialize->_lcd_4bit_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_enable_signal->_gpio_pin_write_logic
    _lcd_send_4bits->_gpio_pin_write_logic
    _dc_motor_intialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_configure
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManger in COMRAM

    _ADC_DefaultInterruptHandler->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManger in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManger in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManger in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManger in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManger in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManger in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManger in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManger in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManger in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManger in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManger in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManger in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManger in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManger in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManger in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManger in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  112470
      _ADC_StartConversion_Interrupt
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
             _application_initialize
           _convert_uint16_to_string
                _dc_motor_move_right
                      _dc_motor_stop
           _lcd_4bit_send_string_pos
                   _lcd_init_message
 ---------------------------------------------------------------------------------
 (1) _lcd_init_message                                     4     3      1   32376
                                             39 COMRAM     3     2      1
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_pos                             6     1      5   32230
                                             33 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  6     3      3   16375
                                             27 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   14154
                                             24 COMRAM     3     1      2
               _gpio_pin_write_logic
                     _lcd_send_4bits
             _lcd_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    4229
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    4229
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            11     8      3    6429
                                              0 BANK0     11     8      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4717
                                             35 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             31 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                             10 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             16 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     947
                                             10 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   28592
                           _ADC_Init
                 _dc_motor_intialize
                _ecu_layer_intialize
                 _lcd_4bit_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   4     3      1   22005
                                             27 COMRAM     3     2      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   15674
                                             24 COMRAM     3     1      2
               _gpio_pin_write_logic
                     _lcd_send_4bits
             _lcd_send_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_send_enable_signal                               2     1      1    4549
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       6     4      2    4791
                                             18 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0       1
 ---------------------------------------------------------------------------------
 (2) _dc_motor_intialize                                   2     1      1    6108
                                             21 COMRAM     2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    5880
                                             18 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                 8     6      2    4001
                                             10 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        7     6      1     581
                                             10 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     2      1     478
                                             13 COMRAM     2     1      1
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 1     0      1      98
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          1     0      1      98
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                             49 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        3     1      2    1032
                                             17 COMRAM     3     1      2
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     198
                                             10 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    4     2      2     416
                                             13 COMRAM     4     2      2
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManger                                      4     4      0     710
                                              6 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0     590
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _ADC_DefaultInterruptHandler                          0     0      0     590
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversionResult                             6     4      2     590
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_initialize
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _dc_motor_intialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
     _ecu_layer_intialize
     _lcd_4bit_intialize
       _gpio_pin_initialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
         _lcd_send_enable_signal
           _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_send_4bits
       _lcd_send_enable_signal
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_init_message
     _lcd_4bit_send_string_pos

 _InterruptManger (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
       _ADC_GetConversionResult
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      B      6E       5       85.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     35      74       1       92.1%
BITBIGSFRhlhl       2B      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhll       7      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E2      12        0.0%
DATA                 0      0      E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 16 23:53:39 2024

                         ?_lcd_send_4bits 0013                                        l71 21A6  
                                      l81 295E                                        l76 29BA  
                            ___awdiv@sign 0010                                       l102 26E4  
                                     l210 246C                                       l241 2BB6  
                                     l227 2A7E                                       l251 2B84  
                                     l236 2C3C                                       l174 25AE  
                                     l191 2902                                       l346 2D6E  
                                     l427 2B52                                       l452 2C82  
                                     l461 2C5E                                       l381 250E  
                                     l454 2C84                                       l391 2AB6  
                                     l463 2C62                                       l536 1DC4  
                                     l449 20D0                                       l394 2CA2  
                                     l458 2C56                                       l379 2482  
                                     l555 1EF0                                       l396 2CA6  
                                     l576 275E                                       l945 283E  
                                     l982 2C12       __end_of_configure_voltage_reference 2C64  
             _configure_voltage_reference 2C3E                                       _abs 2AEC  
               _RB5_InterruptHandler_HIGH 0048                           __end_of_ADC_ISR 2CE6  
                                     _ret 00ED                              ___awmod@sign 0010  
                     led_initialize@F3058 005E                                       tosl 0FFD  
                   relay_initialize@F3052 005A                                       wreg 0FE8  
                            ___flmul@aexp 002A                              ___flmul@bexp 002B  
          ?_ADC_StartConversion_Interrupt 0012              ?_ADC_DefaultInterruptHandler 0001  
                            ___flmul@sign 0025                              ___flmul@temp 0030  
                            ___flmul@prod 002C                 ?_convert_uint16_to_string 00E2  
                         __end_of_RB4_ISR 2D4E                           __end_of_RB5_ISR 2D34  
                         __end_of_RB6_ISR 2D1A                           __end_of_RB7_ISR 2D00  
                            ___fltol@exp1 00E7                                      ?_abs 0011  
                                    l1223 226A                                      l1236 231A  
                                    l1610 1462                                      l4100 2048  
                                    l1613 12F4                                      l1606 10FE  
                                    l4110 2C64                                      l4030 2732  
                                    l1623 1424                                      l1615 136C  
                                    l4104 204E                                      l1616 135A  
                                    l4112 2C7C                                      l4032 273A  
                                    l4024 26E6                                      l1720 2A40  
                                    l4040 2914                                      l1289 1FF8  
                                    l1490 27D2                                      l1650 1C82  
                                    l4114 2C3E                                      l4034 275C  
                                    l4026 26F6                                      l1714 1ACE  
                                    l4042 291C                                      l4050 23DA  
                                    l1483 27CA                                      l4300 2AB4  
                                    l4028 2716                                      l1724 2B06  
                                    l4044 295C                                      l4060 241E  
                                    l4052 23E2                                      l1661 1C1A  
                                    l1654 1BBE                                      l4150 20EE  
                                    l4142 20D2                                      l1750 2D6C  
                                    l4038 2904                                      l4054 23E8  
                                    l1647 1B26                                      l1727 2B1E  
                                    l4080 200C                                      l4304 2C86  
                                    l4160 2108                                      l4144 20E2  
                                    l4056 23FA                                      l4064 2430  
                                    l4048 23C6                                      l4090 202A  
                                    l4082 2012                                      l4074 1FFC  
                                    l4306 2C9A                                      l4402 2B20  
                                    l4170 2152                                      l4162 2118  
                                    l4146 20E6                                      l4058 240C  
                                    l4066 246A                                      l1739 23C4  
                                    l4092 2030                                      l4084 2018  
                                    l4076 2000                                      l4308 2CA4  
                                    l4404 2B30                                      l4500 11D0  
                                    l4260 2C28                                      l4180 218E  
                                    l4172 215E                                      l4164 2126  
                                    l4156 20FA                                      l4148 20E6  
                                    l1676 2AEA                                      l4420 27F0  
                                    l1669 2BE6                                      l4094 2036  
                                    l4086 201E                                      l4078 2006  
                                    l4406 2B38                                      l4510 1232  
                                    l4502 11E0                                      l4270 2484  
                                    l4182 219A                                      l4174 216A  
                                    l4166 2132                                      l4158 2106  
                                    l4430 2BF2                                      l4190 2668  
                                    l4422 2806                                      l4096 203C  
                                    l4088 2024                                      l4408 2B50  
                                    l4520 12DA                                      l4512 124E  
                                    l4504 11FA                                      l4440 1046  
                                    l4280 24EC                                      l4272 24D6  
                                    l3800 1EEE                                      l4256 2C14  
                                    l4264 2D6E                                      l4176 2176  
                                    l4168 214C                                      l4432 2BFA  
                                    l4192 267E                                      l4424 2822  
                                    l4416 27D4                                      l4098 2042  
                                    l4530 1316                                      l4522 12E4  
                                    l4514 1278                                      l4506 120A  
                                    l4450 1086                                      l4442 1054  
                                    l4282 24EE                                      l4274 24E6  
                                    l4266 246E                                      l4258 2C24  
                                    l3810 28B2                                      l4178 2182  
                                    l4434 2C02                                      l4426 2BE8  
                                    l4194 26AC                                      l4186 2650  
                                    l4418 27D4                                      l4292 2A80  
                                    l4540 1388                                      l4532 1324  
                                    l4524 12F2                                      l4516 12AE  
                                    l4508 1226                                      l4460 10B6  
                                    l4452 108C                                      l4444 1056  
                                    l4620 278A                                      l4612 2760  
                                    l4284 24FC                                      l4276 24E8  
                                    l4268 247E                                      l3820 28EE  
                                    l3812 28BA                                      l4436 2C0A  
                                    l4428 2BEE                                      l5500 21C2  
                                    l4196 26B0                                      l4188 2660  
                                    l4294 2A94                                      l4550 13F2  
                                    l4542 1396                                      l4534 1352  
                                    l4526 1304                                      l4518 12BC  
                                    l4470 10EE                                      l4462 10B8  
                                    l4454 109C                                      l4446 1066  
                                    l4438 103A                                      l4630 27BE  
                                    l4622 2798                                      l4614 2768  
                                    l4286 2504                                      l4278 24EA  
                                    l3822 28F0                                      l3830 2A52  
                                    l5510 21E8                                      l5502 21C6  
                                    l4390 2B9A                                      l4198 26E2  
                                    l4296 2A9C                                      l4560 1448  
                                    l4552 140C                                      l4544 13C0  
                                    l4528 1312                                      l4480 113E  
                                    l4472 110E                                      l4464 10C8  
                                    l4456 10A2                                      l4448 1076  
                                    l4632 27C4                                      l4624 279E  
                                    l4616 277A                                      l4640 1B36  
                                    l4288 250C                                      l3824 2900  
                                    l3808 28A2                                      l3832 2A5A  
                                    l5520 221E                                      l5512 21FA  
                                    l5504 21D4                                      l5600 194C  
                                    l4298 2AAE                                      l4554 1428  
                                    l4562 144E                                      l4538 137C  
                                    l4546 13C4                                      l4490 118E  
                                    l4482 1148                                      l4474 111E  
                                    l4466 10D8                                      l4458 10A8  
                                    l4626 27B4                                      l4618 2782  
                                    l4650 1B74                                      l4642 1B4C  
                                    l4634 1AD2                                      l3818 28C2  
                                    l3834 2A66                                      l5522 2234  
                                    l5514 2202                                      l5530 224A  
                                    l5506 21DC                                      l5610 19B4  
                                    l5602 1956                                      l4386 2B86  
                                    l4394 2B54                                      l4564 1452  
                                    l4556 1438                                      l4548 13DE  
                                    l4492 119A                                      l4484 115E  
                                    l4468 10E8                                      l5700 1F0A  
                                    l4628 27BC                                      l4660 1BFC  
                                    l4652 1BA6                                      l4636 1AE2  
                                    l3940 1C84                                      l3836 2A6E  
                                    l3828 2A42                                      l5532 225A  
                                    l5524 223C                                      l5516 220A  
                                    l5508 21E0                                      l5540 2270  
                                    l5620 1A3A                                      l5612 19CC  
                                    l5604 1974                                      l4388 2B96  
                                    l4396 2B64                                      l4558 1446  
                                    l4494 11A8                                      l4486 116A  
                                    l4478 1132                                      l5710 1F5A  
                                    l4670 1C52                                      l4662 1C0A  
                                    l4654 1BA8                                      l4646 1B60  
                                    l4638 1AF0                                      l3950 1D32  
                                    l3942 1C98                                      l3790 1E16  
                                    l3838 2A7C                                      l5534 2262  
                                    l5526 223E                                      l5518 2218  
                                    l5550 22A0                                      l5542 227E  
                                    l5622 1A4A                                      l5630 1A88  
                                    l5614 19FC                                      l5606 1992  
                                    l4398 2B68                                      l4496 11B4  
                                    l4488 1182                                      l5720 1F84  
                                    l5712 1F5E                                      l5704 1F1E  
                                    l4672 1C62                                      l4664 1C28  
                                    l4656 1BB4                                      l4648 1B68  
                                    l3944 1CB8                                      l3792 1E1E  
                                    l3784 1DC6                                      l5528 2244  
                                    l5560 22E6                                      l5552 22B2  
                                    l5544 2286                                      l5624 1A5A  
                                    l5616 1A18                                      l5608 19AA  
                                    l5632 1A9E                                      l5800 1856  
                                    l4498 11C4                                      l5730 1FAC  
                                    l5722 1F8E                                      l5714 1F6C  
                                    l5706 1F48                                      l4674 1C70  
                                    l4666 1C2A                                      l4658 1BF0  
                                    l3954 1D82                                      l3946 1CD4  
                                    l3794 1E74                                      l3786 1DDA  
                                    l3970 29B8                                      l5570 2312  
                                    l5562 22EE                                      l5554 22BA  
                                    l5546 228A                                      l5538 226C  
                                    l5626 1A6C                                      l5618 1A2A  
                                    l5642 2A02                                      l5810 18A2  
                                    l5802 186C                                      l5732 1FB8  
                                    l5724 1F98                                      l5708 1F4A  
                                    l4676 1C72                                      l4668 1C2E  
                                    l3948 1CDC                                      l3956 1DC2  
                                    l3788 1DFA                                      l3964 2960  
                                    l5652 2BB8                                      l5564 22F4  
                                    l5556 22C2                                      l5548 2298  
                                    l5580 2346                                      l5628 1A86  
                                    l5636 1AAA                                      l5644 2A0A  
                                    l5660 2AB8                                      l5900 2444  
                                    l5812 18AA                                      l5804 1878  
                                    l5734 1FC8                                      l5902 1ED8  
                                    l3798 1EC4                                      l3966 2970  
                                    l5654 2BC0                                      l5494 21A8  
                                    l5558 22D0                                      l5566 22FA  
                                    l5590 2AFA                                      l5582 2362  
                                    l5574 231C                                      l5646 2A1A  
                                    l5662 2AC0                                      l5814 18C0  
                                    l5806 1880                                      l5736 1FD8  
                                    l5904 1DAC                                      l3968 2978  
                                    l5656 2BCA                                      l5496 21AC  
                                    l5568 230A                                      l5584 2394  
                                    l5576 232C                                      l5592 1910  
                                    l5648 2A38                                      l5664 2AC8  
                                    l5680 2536                                      l5672 2510  
                                    l5816 18D4                                      l5808 1896  
                                    l5906 2062                                      l5738 1FE8  
                                    l5658 2BCC                                      l5498 21BA  
                                    l5578 233C                                      l5594 1934  
                                    l5666 2AD0                                      l5690 2590  
                                    l5682 253E                                      l5674 2516  
                                    l5818 18EE                                      l5588 2AEC  
                                    l5596 193C                                      l5668 2AE0  
                                    l5692 2592                                      l5684 2556  
                                    l5676 2522                                      l5598 1948  
                                    l5686 2564                                      l5694 25AC  
                                    l5678 2526                                      l5790 175A  
                                    l5782 172A                                      l5688 257C  
                                    l5792 176A                                      l5784 172E  
                                    l5698 1EF2                                      l5794 177A  
                                    l5786 1736                                      l5796 17CC  
                                    l5788 1746                                      l5798 17E8  
                                    STR_1 1035                                      STR_2 1035  
                                    STR_4 1011                                      STR_5 1025  
                                    STR_6 102D                                      u3020 1C98  
                                    u3021 1C94                                      _LATA 0F89  
                                    u3030 1CB8                                      _LATB 0F8A  
                                    u3031 1CB4                                      _LATC 0F8B  
                                    u3040 1CD4                                      u3200 26F6  
                                    _LATD 0F8C                                      u3041 1CD0  
                                    u3201 26F2                                      _LATE 0F8D  
                                    u3210 2716                                      u3211 2712  
                                    u3220 2732                                      u3221 272E  
                                    u3070 1D98                                      u3054 1CFA  
                                    u3230 2914                                      u3071 1D92  
                                    u3055 1CF6                                      u3231 2910  
                                    u3080 1D9A                                      u3064 1D50  
                                    u3320 20E2                                      u3240 23DA  
                                    u3065 1D4C                                      u3321 20DE  
                                    u3241 23D6                                      u3250 2C7C  
                                    u3090 2970                                      u3330 2118  
                                    u3251 2C78                                      u3091 296C  
                                    u3331 2114                                      u3260 2C56  
                                    u3340 2660                                      u3261 2C52  
                                    u3341 265C                                      u3430 2C24  
                                    u3350 26A4                                      u3431 2C20  
                                    u3600 1066                                      u3440 247E  
                                    u5200 2298                                      u3360 26D2  
                                    u3601 1062                                      u3441 247A  
                                    u5201 2294                                      u3450 2A94  
                                    u3610 1076                                      u2810 28B2  
                                    u5130 21BA                                      u5210 22B2  
                                    u3370 26E2                                      u3451 2A90  
                                    u3611 1072                                      u2811 28AE  
                                    u5131 21B6                                      u5211 22AE  
                                    u3371 26DE                                      u3460 2C9A  
                                    u3700 1324                                      u3620 10B6  
                                    u2804 1E92                                      u5140 21D4  
                                    u5220 22D0                                      u5300 1934  
                                    u3461 2C96                                      u3701 1320  
                                    u3621 10B2                                      u2805 1E8E  
                                    u5141 21D0                                      u5221 22CC  
                                    u5301 1930                                      u3357 269A  
                                    u3710 1352                                      u3630 10C8  
                                    u2830 2900                                      u5150 21FA  
                                    u5230 22E6                                      u5310 1974  
                                    u3550 2B96                                      u3711 134E  
                                    u3631 10C4                                      u2831 28FC  
                                    u5151 21F6                                      u5231 22E2  
                                    u5311 1970                                      u3551 2B92  
                                    u3367 26C8                                      u3720 1368  
                                    u3640 10D8                                      u2760 1DDA  
                                    u2824 28DC                                      u2840 2A52  
                                    u5160 2218                                      u5240 230A  
                                    u5320 1992                                      u5400 2A38  
                                    u3560 2B64                                      u3721 1364  
                                    u3641 10D4                                      u2761 1DD6  
                                    u2825 28D8                                      u2841 2A4E  
                                    u5161 2214                                      u5241 2306  
                                    u5321 198E                                      u5401 2A34  
                                    u3561 2B60                                      u3570 2B30  
                                    u3730 137C                                      u3650 110E  
                                    u2770 1DFA                                      u5410 2BE6  
                                    u5170 2234                                      u5250 232C  
                                    u5330 19C8                                      u3571 2B2C  
                                    u3731 1378                                      u3651 110A  
                                    u2771 1DF6                                      u5411 2BE2  
                                    u5171 2230                                      u5251 2328  
                                    u5331 19C2                                      u3740 1396  
                                    u3660 111E                                      u5500 1FC8  
                                    u3900 1B4C                                      u2780 1E16  
                                    u5180 225A                                      u5260 233C  
                                    u5340 19CA                                      u3741 1392  
                                    u3661 111A                                      u5501 1FC4  
                                    u3901 1B48                                      u2781 1E12  
                                    u5181 2256                                      u5261 2338  
                                    u5421 251C                                      u3750 13DE  
                                    u3670 1298                                      u3590 1054  
                                    u5510 1FD8                                      u3910 1BA2  
                                    u5190 227E                                      u5270 2362  
                                    u5350 1A2A                                      u5430 2536  
                                    u3751 13DA                                      u3591 1050  
                                    u5511 1FD4                                      u3911 1B9E  
                                    u5191 227A                                      u5271 235E  
                                    u5351 1A26                                      u5431 2532  
                                    u3760 140C                                      u3680 12F2  
                                    u3920 1BEC                                      u5280 2394  
                                    u5360 1A3A                                      u5440 25AC  
                                    u5600 1896                                      u3761 1408  
                                    u3681 12EE                                      u3921 1BE8  
                                    u5281 2390                                      u5361 1A36  
                                    u5441 25A8                                      u5601 1892  
                                    u3770 1446                                      u3690 1312  
                                    u5450 1F0A                                      u3850 277A  
                                    u3930 1C0A                                      u2794 1E3C  
                                    u5290 2AFA                                      u5370 1A4A  
                                    u3771 1442                                      u3691 130E  
                                    u3675 128E                                      u5451 1F06  
                                    u3851 2776                                      u3931 1C06  
                                    u2795 1E38                                      u5291 2AF6  
                                    u5371 1A46                                      u5460 1F3E  
                                    u3860 2798                                      u3940 1C1A  
                                    u5380 1A5A                                      u3861 2794  
                                    u3941 1C16                                      u5381 1A56  
                                    u5470 1F6C                                      u3870 27B4  
                                    u3950 1C28                                      u5390 1A9A  
                                    u5471 1F68                                      u3871 27B0  
                                    u3951 1C24                                      u5391 1A96  
                                    u5480 1F80                                      u3960 1C62  
                                    u3880 1AE2                                      u5481 1F7C  
                                    u5465 1F34                                      u3961 1C5E  
                                    u3881 1ADE                                      u5617 27FA  
                                    u5490 1FA8                                      u3970 1C70  
                                    u3890 1AF0                                      u5570 1746  
                                    u5491 1FA4                                      u3971 1C6C  
                                    u3891 1AEC                                      u5627 211E  
                                    u5571 1742                                      u5580 176A  
                                    u5637 2138                                      u5581 1766  
                                    u5590 186C                                      u5647 214E  
                                    u5591 1868                                      u5657 2A68  
                _RB4_InterruptHandler_LOW 004A                                      abs@a 0011  
                                    _lcd1 00DC                                      _dbuf 0080  
                                    _main 172A                                      _prec 0038  
                _RB7_InterruptHandler_LOW 003E                                      fsr0h 0FEA  
                                    fsr1h 0FE2                                      indf0 0FEF  
                                    fsr2h 0FDA                                      fsr0l 0FE9  
                                    indf1 0FE7                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    btemp 0075                          __end_of_ADC_Init 2510  
                                    prodh 0FF4                                      prodl 0FF3  
                                    start 000E                              ___param_bank 0000  
                   _lcd_4bit_send_command 2960                                     ??_abs 0013  
                    _gpio_pin_write_logic 1DC6            lcd_4bit_send_string_pos@column 0024  
                   lcd_4bit_intialize@lcd 001C                          __end_of_INT0_ISR 2D6C  
                        __end_of_INT1_ISR 2D68                          __end_of_INT2_ISR 2D64  
         lcd_4bit_intialize@l_pin_counter 001E                             ___fltol@sign1 00E6  
                                   ?_main 0001                  ??_application_initialize 001F  
                         __end_of___awdiv 226C                                     _EEADR 0FA9  
                         __end_of___awmod 231C                           __end_of___flmul 1464  
                         __end_of___fltol 1FFA                           ___awdiv@divisor 000D  
                         __end_of___lwdiv 27D4                                     i2l412 264E  
                                   i2l430 2CE4                                     i2l707 2D18  
                                   i2l901 162A                                     i2l718 2CFE  
                                   i2l910 1716                                     i2l903 166E  
                                   i2l664 2D6A                                     i2l905 16B2  
                                   i2l674 2D62                                     i2l907 16F6  
                                   i2l669 2D66                                     i2l685 2D4C  
                                   i2l696 2D32                                     i2l891 14D6  
                         ___awdiv@counter 000F                                     i2l893 151A  
                                   i2l895 155E                                     i2l887 1496  
                                   i2l897 15A2                                     i2l889 14B6  
                                   i2l899 15E6                                     i2l989 2A00  
                     relay_turn_off@F3062 0058                              vfpfcnvrt@fmt 0016  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
               lcd_4bit_set_cursor@column 001E                                     _adc_1 00D5  
                                   _flags 0056                                     _fputc 231C  
                                   _width 0036                                     _putch 2D6C  
                                   pclath 0FFA                                     pclatu 0FFB  
                                   tablat 0FF5                     dc_motor_intialize@ret 0017  
                                   ttemp5 0076                                     ttemp6 0079  
                                   ttemp7 007D                                     status 0FD8  
                                   wtemp8 0076                           __end_of_sprintf 2AEC  
          ?_gpio_pin_direction_initialize 000B                           __initialization 2840  
                            __end_of_main 1910                     ?_gpio_pin_write_logic 000B  
                               ??_ADC_ISR 0007                             _lat_registers 00CB  
                                  ??_main 0036                             __activetblptr 0003  
                        led_turn_on@F3063 005D                                 ??_RB4_ISR 0001  
                               ??_RB5_ISR 0001                                 ??_RB6_ISR 0001  
                               ??_RB7_ISR 0001                                    ?_fputc 000B  
                                  _ADRESH 0FC4                                    _EEADRH 0FAA  
                                  _ADRESL 0FC3                                    _EEDATA 0FA8  
                                  _EECON2 0FA7                          ___awdiv@dividend 000B  
                                  ?_putch 0001                                    i2l2412 2D4C  
                                  i2l2404 2D36                                    i2l2420 2D1E  
                                  i2l2406 2D38                                    i2l4120 25D4  
                                  i2l2440 2D18                                    i2l2432 2D02  
                                  i2l4122 25DC                                    i2l2426 2D32  
                                  i2l2418 2D1C                                    i2l2434 2D04  
                                  i2l4124 25F4                                    i2l4116 25B0  
                                  i2l4126 262A                                    i2l4118 25C4  
                                  i2l2454 2CFE                                    i2l2446 2CE8  
                                  i2l4128 264C                                    i2l4320 29F0  
                                  i2l4312 29BC                                    i2l2392 2D64  
                                  i2l2448 2CEA                                    i2l4322 29FC  
                                  i2l4314 29CC                                    i2l2386 2D68  
                                  i2l4316 29D8                                    i2l4412 2CCA  
                                  i2l5300 1514                                    i2l4318 29E0  
                                  i2l4414 2CCC                                    i2l2398 2D60  
                                  i2l5310 1558                                    i2l5302 1528  
                                  i2l5320 159C                                    i2l5312 156C  
                                  i2l5304 1536                                    i2l5330 15E0  
                                  i2l5322 15B0                                    i2l5314 157A  
                                  i2l5306 1544                                    i2l5340 1624  
                                  i2l5332 15F4                                    i2l5324 15BE  
                                  i2l5316 1588                                    i2l5308 1554  
                                  i2l5350 1668                                    i2l5342 1638  
                                  i2l5334 1602                                    i2l5326 15CC  
                                  i2l5318 1598                                    i2l5360 16AC  
                                  i2l5352 167C                                    i2l5344 1646  
                                  i2l5336 1610                                    i2l5328 15DC  
                                  i2l5280 1484                                    i2l5370 16F0  
                                  i2l5362 16C0                                    i2l5354 168A  
                                  i2l5346 1654                                    i2l5338 1620  
                                  i2l5290 14D2                                    i2l5282 1492  
                                  i2l5372 1704                                    i2l5364 16CE  
                                  i2l5356 1698                                    i2l5348 1664  
                                  i2l5292 14E4                                    i2l5284 14A4  
                                  i2l5374 1712                                    i2l5366 16DC  
                                  i2l5358 16A8                                    i2l5294 14F2  
                                  i2l5286 14B2                                    i2l5278 1476  
                                  i2l5368 16EC                                    i2l5296 1500  
                                  i2l5288 14C4                                    i2l5298 1510  
                           vfpfcnvrt@done 0019                          __end_of___xxtofl 1C84  
        __end_of_lcd_4bit_send_string_pos 26E6               __end_of_dc_motor_move_right 2BB8  
                  ?_lcd_4bit_send_command 0019                              vfprintf@cfmt 0023  
                ??_lcd_send_enable_signal 0014                                 ??___awdiv 000F  
                               ??___awmod 000F                                 ??___flmul 0021  
                               ??___fltol 00E2                                 ??___lwdiv 000F  
                                  _memset 2BB8                                    clear_0 2886  
                                  clear_1 2892                          ___awdiv@quotient 0011  
                         ___awmod@divisor 000D                                    _motor1 0073  
                                  _motor2 0071                                    isa$std 0001  
                         ___awmod@counter 000F                                    fputc@c 000B  
                            __pdataCOMRAM 0063                       lcd_init_message@lcd 0028  
                               ?_ADC_Init 000E                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                    putch@c 0001  
                        __end_of_vfprintf 2A42                                 ??_sprintf 0028  
                         _InterruptManger 0008              __end_of_select_result_format 2C86  
                            ___xxtofl@arg 0015                              ___xxtofl@exp 0014  
                            ___xxtofl@val 000B                                __accesstop 0080  
                 __end_of__initialization 2898                                 ?_INT0_ISR 0001  
                               ?_INT1_ISR 0001                                 ?_INT2_ISR 0001  
                           ___rparam_used 0001                                ___fltol@f1 0032  
                        ??_lcd_send_4bits 0015                   _lcd_4bit_send_char_data 2904  
                  ??_gpio_pin_write_logic 000D                            __pcstackCOMRAM 0001  
                            __pidataBANK0 2CA8                             __end_of_fputc 23C6  
                           __end_of_putch 2D6E                  lcd_4bit_send_command@lcd 0019  
                       RB5_ISR@RB5_source 0001                  lcd_4bit_send_command@ret 001B  
gpio_pin_direction_initialize@_pin_config 000B                   _ADC_GetConversionResult 25B0  
                              ??_ADC_Init 000F                      ADC_SelectChannel@ret 0011  
                                 ??_fputc 000E                                   ??_putch 000B  
                  ADC_StartConversion@ret 000C                                __pbssBANK0 0080  
                   _INT0_InterruptHandler 0052                                ??_INT0_ISR 0001  
                              ??_INT1_ISR 0001                                ??_INT2_ISR 0001  
                  _application_initialize 2BE8                ADC_GetConversionResult@ret 0006  
                       led_turn_off@F3068 005C               convert_uint16_to_string@ret 00EB  
                                 _ADC_ISR 2CCA               convert_uint16_to_string@str 00E4  
                                 ?_memset 000B                                   _ADC_Req 0057  
                                 _RB4_ISR 2D34                                   _RB5_ISR 2D1A  
                                 _RB6_ISR 2D00                                   _RB7_ISR 2CE6  
                               ?___xxtofl 000B                 ?_lcd_4bit_send_string_pos 0022  
               _RB6_InterruptHandler_HIGH 0044                   __end_of_InterruptManger 172A  
                    led_turn_toggle@F3073 005B                                   i2u84_40 2D48  
                                 i2u84_41 2D44                                   i2u85_40 2D2E  
                                 i2u85_41 2D2A                                   i2u86_40 2D14  
                                 i2u86_41 2D10                                   i2u87_40 2CFA  
                                 i2u87_41 2CF6                         RB7_ISR@RB7_source 0001  
                          _tris_registers 0063                  _RB6_InterruptHandler_LOW 0042  
               ??_lcd_4bit_send_char_data 001B                      _ADC_InterruptHandler 0054  
                                 __Hparam 0000                              ADC_Init@_adc 000E  
                                 __Lparam 0000                       _ecu_layer_intialize 2D6E  
                     _gpio_pin_initialize 26E6                                   ___awdiv 21A8  
                                 ___awmod 226C                                   ___flmul 103A  
                                 ___fltol 1EF2                                   ___lwdiv 2760  
                       __end_of_btn_value 1011                                 ?_vfprintf 0020  
                            __psmallconst 1000                 ??_ADC_GetConversionResult 0003  
                                 __pcinit 2840                      _select_result_format 2C64  
                                 __ramtop 1000                                   __ptext0 172A  
                                 __ptext1 27D4                                   __ptext2 2650  
                                 __ptext3 23C6                                   __ptext4 2904  
                                 __ptext5 2B54                                   __ptext6 2B86  
                                 __ptext7 2510                                   __ptext8 2AB8  
                                 __ptext9 2A02           ??_gpio_pin_direction_initialize 000C  
                _convert_uint16_to_string 2510                                ??___xxtofl 000F  
                        ___awmod@dividend 000B                      ?_ecu_layer_intialize 0001  
                        _lcd_init_message 27D4                      ?_gpio_pin_initialize 0013  
                  _lcd_send_enable_signal 2A42                                   _sprintf 2AB8  
                          __pintcode_body 1464                      end_of_initialization 2898  
                       lcd_send_4bits@lcd 0013                         lcd_send_4bits@ret 0017  
                select_result_format@_adc 000B                                   fputc@fp 000D  
                                 memset@c 000C                                   memset@n 000E  
                                 memset@p 0010                                   int_func 1464  
              __end_of_lcd_4bit_intialize 21A8                   ??_lcd_4bit_send_command 001B  
                           _dc_motor_stop 2B54                         __end_of_vfpfcnvrt 1AD0  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                          vfpfcnvrt@convarg 001B  
                              ??_vfprintf 0023                     ?_select_result_format 000B  
        ADC_StartConversion_Interrupt@ret 0014           __end_of_lcd_4bit_send_char_data 2960  
                   _INT1_InterruptHandler 0050                                 _PORTBbits 0F81  
              lcd_4bit_send_char_data@lcd 0019                     ??_ecu_layer_intialize 000B  
              lcd_4bit_send_char_data@ret 001B       __end_of_ADC_DefaultInterruptHandler 2A02  
             _ADC_DefaultInterruptHandler 29BC                          ?_InterruptManger 0001  
                           ___xxtofl@sign 0013                     ??_gpio_pin_initialize 0014  
                     _ADC_StartConversion 2C86                               ___flmul@grs 0026  
           ??_ADC_DefaultInterruptHandler 0007                            ?_dc_motor_stop 0013  
                     _lcd_4bit_set_cursor 23C6                        relay_turn_on@F3057 0059  
                    ?_ADC_StartConversion 000B               lcd_4bit_send_string_pos@lcd 0022  
             lcd_4bit_send_string_pos@ret 0027               lcd_4bit_send_string_pos@row 0023  
             lcd_4bit_send_string_pos@str 0025             convert_uint16_to_string@F3210 00AB  
           convert_uint32_to_string@F3217 00A0                               vfpfcnvrt@ap 0017  
                             vfpfcnvrt@cp 001A                               vfpfcnvrt@fp 0015  
                           __pidataCOMRAM 2D4E   adc_input_channel_port_configure@channel 000D  
       ADC_StartConversion_Interrupt@_adc 0012                            __end_of_memset 2BE8  
            ?_configure_voltage_reference 000B                       start_initialization 2840  
                    ?_lcd_4bit_set_cursor 001C             convert_uint16_to_string@value 00E2  
                             __end_of_abs 2B20     __end_of_gpio_pin_direction_initialize 1DC6  
           _gpio_pin_direction_initialize 1C84                            _LM35_res_1_txt 00BB  
                          _LM35_res_2_txt 00B5                   ?_application_initialize 0001  
ADC_GetConversionResult@conversion_result 0002                __end_of_dc_motor_intialize 2C3E  
                  dc_motor_stop@_dc_motor 0013                     ADC_SelectChannel@_adc 000E  
      convert_uint16_to_string@TempString 00E5      ADC_StartConversion_Interrupt@channel 0013  
                   ??_ADC_StartConversion 000C                               vfprintf@fmt 0021  
                  ??_select_result_format 000C                               __pdataBANK0 00C1  
            convert_uint8_to_string@F3203 00B1                                  ?_ADC_ISR 0001  
                                ??_memset 0010                                memset@dest 000B  
            lcd_4bit_send_command@command 001A                          dc_motor_stop@ret 0014  
                 ADC_StartConversion@_adc 000B                                  ?_RB4_ISR 0001  
                                ?_RB5_ISR 0001                                  ?_RB6_ISR 0001  
                                ?_RB7_ISR 0001                                 ___flmul@a 001D  
                               ___flmul@b 0019                               __pbssCOMRAM 0036  
                   ??_lcd_4bit_set_cursor 001F                             __pcstackBANK0 00E2  
           ??_configure_voltage_reference 000C            __end_of_application_initialize 2C14  
             ADC_GetConversionResult@_adc 0001                     _INT2_InterruptHandler 004E  
                         ??_dc_motor_stop 0014                                 __pnvBANK0 00ED  
                        ___lwdiv@dividend 000B                  __end_of_lcd_init_message 2840  
                               __pintcode 0008  __end_of_adc_input_channel_port_configure 20D2  
      ??_adc_input_channel_port_configure 000B         ?_adc_input_channel_port_configure 0001  
        _adc_input_channel_port_configure 1FFA                         _ADC_SelectChannel 2A80  
              ??_convert_uint16_to_string 0035           gpio_pin_write_logic@_pin_config 000B  
                                ?___awdiv 000B                                  ?___awmod 000B  
                                ?___flmul 0019                                  ?___fltol 0032  
                                ?___lwdiv 000B                        ?_ADC_SelectChannel 000E  
               gpio_pin_write_logic@logic 000C                                 _btn_value 1001  
                             __smallconst 1000                 _RB4_InterruptHandler_HIGH 004C  
                     ??_ADC_SelectChannel 0010                   ?_lcd_send_enable_signal 0013  
                                _ADC_Init 246E                 _RB7_InterruptHandler_HIGH 0040  
                        ___lwdiv@quotient 000F                                  ?_sprintf 0024  
                _RB5_InterruptHandler_LOW 0046                                  _INT0_ISR 2D68  
                                _INT1_ISR 2D64                                  _INT2_ISR 2D60  
              lcd_send_4bits@data_command 0014                                  _RB4_Flag 0070  
                                _RB5_Flag 006F                                  _RB6_Flag 006E  
                                _RB7_Flag 006D                                  _PIE1bits 0F9D  
               __end_of_ADC_SelectChannel 2AB8             __end_of_lcd_4bit_send_command 29BC  
                                i2u330_45 260C                                  i2u500_40 168A  
                                i2u500_41 1686                                  i2u501_40 1698  
                                i2u501_41 1694                                  i2u502_40 16A8  
                                i2u502_41 16A4                                  i2u327_40 25C4  
                                i2u503_40 16C0                                  i2u327_41 25C0  
                                i2u503_41 16BC                                  i2u328_40 25D4  
                                i2u504_40 16CE                                  i2u328_41 25D0  
                                i2u504_41 16CA                                  i2u329_40 25F4  
                                i2u505_40 16DC                                  i2u329_41 25F0  
                                i2u505_41 16D8                                  _PIR1bits 0F9E  
                                i2u506_40 16EC                                  i2u506_41 16E8  
                                i2u347_40 29CC                                  i2u507_40 1704  
                                i2u347_41 29C8                                  i2u507_41 1700  
                                i2u348_40 29F0                                  i2u508_40 1712  
                                i2u348_41 29EC                                  i2u508_41 170E  
                                i2u470_40 1492                                  i2u470_41 148E  
                                i2u358_48 2CD2                                  i2u471_40 14A4  
                                i2u358_49 2CE4                                  i2u471_41 14A0  
                                i2u480_40 1536                                  i2u472_40 14B2  
                                i2u480_41 1532                                  i2u472_41 14AE  
                                i2u481_40 1544                                  i2u473_40 14C4  
                                i2u481_41 1540                                  i2u473_41 14C0  
                                i2u490_40 15DC                                  i2u482_40 1554  
                                i2u474_40 14D2                                  i2u490_41 15D8  
                                i2u482_41 1550                                  i2u474_41 14CE  
                                i2u491_40 15F4                                  i2u483_40 156C  
                                i2u475_40 14E4                                  i2u491_41 15F0  
                                i2u483_41 1568                                  i2u475_41 14E0  
                                i2u492_40 1602                                  i2u484_40 157A  
                                i2u476_40 14F2                                  i2u492_41 15FE  
                                i2u484_41 1576                                  i2u476_41 14EE  
                                i2u493_40 1610                                  i2u485_40 1588  
                                i2u477_40 1500                                  i2u469_40 1484  
                                i2u493_41 160C                                  i2u485_41 1584  
                                i2u477_41 14FC                                  i2u469_41 1480  
                                i2u494_40 1620                                  i2u486_40 1598  
                                i2u478_40 1510                                  i2u494_41 161C  
                                i2u486_41 1594                                  i2u478_41 150C  
                                i2u495_40 1638                                  i2u487_40 15B0  
                                i2u479_40 1528                                  i2u495_41 1634  
                                i2u487_41 15AC                                  i2u479_41 1524  
                                i2u496_40 1646                                  i2u488_40 15BE  
                                i2u496_41 1642                                  i2u488_41 15BA  
                                i2u497_40 1654                                  i2u489_40 15CC  
                                i2u497_41 1650                                  i2u489_41 15C8  
                                i2u498_40 1664                                  i2u498_41 1660  
                                i2u499_40 167C                                  i2u499_41 1678  
         ??_ADC_StartConversion_Interrupt 0014            fp__ADC_DefaultInterruptHandler 0000  
        gpio_pin_direction_initialize@ret 0011                         RB4_ISR@RB4_source 0001  
                      _lcd_4bit_intialize 20D2                                 _vfpfcnvrt 1910  
                _lcd_4bit_send_string_pos 2650                                _ADCON0bits 0FC2  
                              _ADCON1bits 0FC1                                _ADCON2bits 0FC0  
          __end_of_lcd_send_enable_signal 2A80                  ADC_SelectChannel@channel 000F  
                   _LM35_res_1_Celsius_mv 003C                       ?_lcd_4bit_intialize 001C  
                  gpio_pin_initialize@ret 0015                                vfpfcnvrt@c 001F  
                 gpio_pin_write_logic@ret 0012                               _INTCON2bits 0FF1  
                             _INTCON3bits 0FF0                  ?_lcd_4bit_send_char_data 0019  
                               copy_data0 2854                                 copy_data1 2874  
                     _dc_motor_move_right 2B86                     _LM35_res_2_Celsius_mv 003A  
                              _EECON1bits 0FA6                      ??_lcd_4bit_intialize 001D  
                                __Hrparam 0000                                vfprintf@ap 0022  
                                __Lrparam 0000                                vfprintf@fp 0020  
                ?_ADC_GetConversionResult 0001                    lcd_4bit_set_cursor@lcd 001C  
             __end_of_ecu_layer_intialize 2D70                    lcd_4bit_set_cursor@ret 0021  
                              ?_vfpfcnvrt 0015                    lcd_4bit_set_cursor@row 001D  
                    ?_dc_motor_move_right 0013               __end_of_gpio_pin_initialize 2760  
          gpio_pin_initialize@_pin_config 0013                                sprintf@fmt 0025  
                       RB6_ISR@RB6_source 0001                                  ___xxtofl 1AD0  
                         ___lwdiv@divisor 000D                           ___lwdiv@counter 0011  
                                __ptext10 1910                                  __ptext11 231C  
                                __ptext20 2A42                                  __ptext12 2D6C  
                                __ptext21 28A2                                  __ptext13 2AEC  
                                __ptext30 1AD0                                  __ptext22 2D6E  
                                __ptext14 226C                                  __ptext31 2760  
                                __ptext23 2C14                                  __ptext15 21A8  
                                __ptext40 2D00                                  __ptext32 1EF2  
                                __ptext24 26E6                                  __ptext16 2BB8  
                                __ptext41 2D1A                                  __ptext33 103A  
                                __ptext25 1DC6                                  __ptext17 2BE8  
                                __ptext42 2D34                                  __ptext34 2B20  
                                __ptext26 1C84                                  __ptext18 20D2  
                                __ptext43 2D60                                  __ptext35 2C86  
                                __ptext27 246E                                  __ptext19 2960  
                                __ptext44 2D64                                  __ptext36 2A80  
                                __ptext28 2C64                                  __ptext45 2D68  
                                __ptext37 1FFA                                  __ptext29 2C3E  
                                __ptext46 2CCA                                  __ptext47 29BC  
                                __ptext39 2CE6                                  __ptext48 25B0  
                                __ptext49 0000           configure_voltage_reference@_adc 000B  
                  dc_motor_move_right@ret 0014                                _LM35_res_1 0061  
                              _LM35_res_2 005F       convert_uint16_to_string@DataCounter 00EC  
               lcd_send_enable_signal@lcd 0013                 lcd_send_enable_signal@ret 0014  
        __end_of_convert_uint16_to_string 25B0                                  isa$xinst 0000  
                                int$flags 0075                        _dc_motor_intialize 2C14  
                                _vfprintf 2A02                     ??_dc_motor_move_right 0014  
                          _lcd_send_4bits 28A2     __end_of_ADC_StartConversion_Interrupt 2B54  
           _ADC_StartConversion_Interrupt 2B20                       ?_dc_motor_intialize 0016  
                              _INTCONbits 0FF2              __end_of_gpio_pin_write_logic 1EF2  
                                intlevel2 0000                                 sprintf@ap 0028  
             __end_of_ADC_StartConversion 2CA8           __end_of_ADC_GetConversionResult 2650  
                    ??_dc_motor_intialize 0017                         ?_lcd_init_message 0028  
                  __end_of_lcd_send_4bits 2904              dc_motor_move_right@_dc_motor 0013  
                      ??_lcd_init_message 0029                               ??_vfpfcnvrt 0018  
             __end_of_lcd_4bit_set_cursor 246E                                  sprintf@f 0029  
                                sprintf@s 0024                            _port_registers 00C1  
             lcd_send_4bits@l_pin_counter 0018               lcd_4bit_send_char_data@data 001A  
                   __end_of_dc_motor_stop 2B86                ??_lcd_4bit_send_string_pos 0027  
             dc_motor_intialize@_dc_motor 0016                         ??_InterruptManger 0007  
